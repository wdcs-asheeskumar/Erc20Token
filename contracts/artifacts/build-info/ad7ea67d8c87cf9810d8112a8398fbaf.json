{
	"id": "ad7ea67d8c87cf9810d8112a8398fbaf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Erc20MNTK.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MyNewToken is ERC20, ERC20Burnable, Ownable {\n    address public taxCollector;\n    uint256 public currentTaxDeducted;\n    uint256 public grossTaxCollected;\n\n    mapping(address => mapping(address => uint256))public _taxRecord;\n    constructor(address initialOwner, uint amount, address _taxCollector)\n        ERC20(\"MyNewToken\", \"MNTK\")\n        Ownable(initialOwner)\n    {\n        taxCollector = _taxCollector;\n        _mint(initialOwner,amount * (10 **(decimals())));\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        require(to == msg.sender, \"Minting allowed only to owner\");\n        _mint(to,amount * (10 **(decimals())));\n    }\n\n    function decimals()public view virtual override returns(uint8){\n        return 9;\n    }\n\n    function transfer(address to, uint value) public virtual override returns(bool) {\n        currentTaxDeducted = (5 * value)/100;\n        uint transferAmount = value - currentTaxDeducted;\n        grossTaxCollected = grossTaxCollected + currentTaxDeducted;\n        address _taxCollector = taxCollector;\n        _transfer(msg.sender, taxCollector, currentTaxDeducted);\n        _transfer(msg.sender, to, transferAmount);\n        _taxRecord[_taxCollector][to] += currentTaxDeducted;\n        return true;\n\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Erc20MNTK.sol": {
				"MyNewToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_taxCollector",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_taxRecord",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentTaxDeducted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "grossTaxCollected",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxCollector",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Erc20MNTK.sol\":243:1519  contract MyNewToken is ERC20, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Erc20MNTK.sol\":483:726  constructor(address initialOwner, uint amount, address _taxCollector)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Erc20MNTK.sol\":605:617  initialOwner */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4d794e6577546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d4e544b00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Erc20MNTK.sol\":648:661  _taxCollector */\n  dup1\n    /* \"contracts/Erc20MNTK.sol\":633:645  taxCollector */\n  0x06\n  0x00\n    /* \"contracts/Erc20MNTK.sol\":633:661  taxCollector = _taxCollector */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Erc20MNTK.sol\":671:719  _mint(initialOwner,amount * (10 **(decimals()))) */\n  tag_18\n    /* \"contracts/Erc20MNTK.sol\":677:689  initialOwner */\n  dup4\n    /* \"contracts/Erc20MNTK.sol\":706:716  decimals() */\n  tag_19\n    /* \"contracts/Erc20MNTK.sol\":706:714  decimals */\n  shl(0x20, tag_20)\n    /* \"contracts/Erc20MNTK.sol\":706:716  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"contracts/Erc20MNTK.sol\":700:702  10 */\n  0x0a\n    /* \"contracts/Erc20MNTK.sol\":700:717  10 **(decimals()) */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/Erc20MNTK.sol\":690:696  amount */\n  dup5\n    /* \"contracts/Erc20MNTK.sol\":690:718  amount * (10 **(decimals())) */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/Erc20MNTK.sol\":671:676  _mint */\n  shl(0x20, tag_25)\n    /* \"contracts/Erc20MNTK.sol\":671:719  _mint(initialOwner,amount * (10 **(decimals()))) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/Erc20MNTK.sol\":483:726  constructor(address initialOwner, uint amount, address _taxCollector)... */\n  pop\n  pop\n  pop\n    /* \"contracts/Erc20MNTK.sol\":243:1519  contract MyNewToken is ERC20, ERC20Burnable, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Erc20MNTK.sol\":920:1007  function decimals()public view virtual override returns(uint8){... */\ntag_20:\n    /* \"contracts/Erc20MNTK.sol\":976:981  uint8 */\n  0x00\n    /* \"contracts/Erc20MNTK.sol\":999:1000  9 */\n  0x09\n    /* \"contracts/Erc20MNTK.sol\":992:1000  return 9 */\n  swap1\n  pop\n    /* \"contracts/Erc20MNTK.sol\":920:1007  function decimals()public view virtual override returns(uint8){... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_38)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_40\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_43)\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_47:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_49:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_50:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_88\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_49\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_51:\n    /* \"#utility.yul\":641:665   */\n  tag_90\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_50\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_91:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_52:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_93\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_51\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_53:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_54:\n    /* \"#utility.yul\":1001:1025   */\n  tag_96\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_53\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_97:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_55:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_99\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_54\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_102\n  tag_47\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1326:1445   */\ntag_101:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_103\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_52\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_104\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_55\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_105\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_52\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1973   */\ntag_56:\n    /* \"#utility.yul\":1926:1932   */\n  0x00\n    /* \"#utility.yul\":1960:1965   */\n  dup2\n    /* \"#utility.yul\":1954:1966   */\n  mload\n    /* \"#utility.yul\":1944:1966   */\n  swap1\n  pop\n    /* \"#utility.yul\":1874:1973   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1979:2159   */\ntag_57:\n    /* \"#utility.yul\":2027:2104   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2024:2025   */\n  0x00\n    /* \"#utility.yul\":2017:2105   */\n  mstore\n    /* \"#utility.yul\":2124:2128   */\n  0x41\n    /* \"#utility.yul\":2121:2122   */\n  0x04\n    /* \"#utility.yul\":2114:2129   */\n  mstore\n    /* \"#utility.yul\":2148:2152   */\n  0x24\n    /* \"#utility.yul\":2145:2146   */\n  0x00\n    /* \"#utility.yul\":2138:2153   */\n  revert\n    /* \"#utility.yul\":2165:2345   */\ntag_58:\n    /* \"#utility.yul\":2213:2290   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2203:2291   */\n  mstore\n    /* \"#utility.yul\":2310:2314   */\n  0x22\n    /* \"#utility.yul\":2307:2308   */\n  0x04\n    /* \"#utility.yul\":2300:2315   */\n  mstore\n    /* \"#utility.yul\":2334:2338   */\n  0x24\n    /* \"#utility.yul\":2331:2332   */\n  0x00\n    /* \"#utility.yul\":2324:2339   */\n  revert\n    /* \"#utility.yul\":2351:2671   */\ntag_59:\n    /* \"#utility.yul\":2395:2401   */\n  0x00\n    /* \"#utility.yul\":2432:2433   */\n  0x02\n    /* \"#utility.yul\":2426:2430   */\n  dup3\n    /* \"#utility.yul\":2422:2434   */\n  div\n    /* \"#utility.yul\":2412:2434   */\n  swap1\n  pop\n    /* \"#utility.yul\":2479:2480   */\n  0x01\n    /* \"#utility.yul\":2473:2477   */\n  dup3\n    /* \"#utility.yul\":2469:2481   */\n  and\n    /* \"#utility.yul\":2500:2518   */\n  dup1\n    /* \"#utility.yul\":2490:2571   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":2556:2560   */\n  0x7f\n    /* \"#utility.yul\":2548:2554   */\n  dup3\n    /* \"#utility.yul\":2544:2561   */\n  and\n    /* \"#utility.yul\":2534:2561   */\n  swap2\n  pop\n    /* \"#utility.yul\":2490:2571   */\ntag_110:\n    /* \"#utility.yul\":2618:2620   */\n  0x20\n    /* \"#utility.yul\":2610:2616   */\n  dup3\n    /* \"#utility.yul\":2607:2621   */\n  lt\n    /* \"#utility.yul\":2587:2605   */\n  dup2\n    /* \"#utility.yul\":2584:2622   */\n  sub\n    /* \"#utility.yul\":2581:2665   */\n  tag_111\n  jumpi\n    /* \"#utility.yul\":2637:2655   */\n  tag_112\n  tag_58\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2581:2665   */\ntag_111:\n    /* \"#utility.yul\":2402:2671   */\n  pop\n    /* \"#utility.yul\":2351:2671   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2818   */\ntag_60:\n    /* \"#utility.yul\":2726:2730   */\n  0x00\n    /* \"#utility.yul\":2749:2752   */\n  dup2\n    /* \"#utility.yul\":2741:2752   */\n  swap1\n  pop\n    /* \"#utility.yul\":2772:2775   */\n  dup2\n    /* \"#utility.yul\":2769:2770   */\n  0x00\n    /* \"#utility.yul\":2762:2776   */\n  mstore\n    /* \"#utility.yul\":2806:2810   */\n  0x20\n    /* \"#utility.yul\":2803:2804   */\n  0x00\n    /* \"#utility.yul\":2793:2811   */\n  keccak256\n    /* \"#utility.yul\":2785:2811   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2818   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2824:2917   */\ntag_61:\n    /* \"#utility.yul\":2861:2867   */\n  0x00\n    /* \"#utility.yul\":2908:2910   */\n  0x20\n    /* \"#utility.yul\":2903:2905   */\n  0x1f\n    /* \"#utility.yul\":2896:2901   */\n  dup4\n    /* \"#utility.yul\":2892:2906   */\n  add\n    /* \"#utility.yul\":2888:2911   */\n  div\n    /* \"#utility.yul\":2878:2911   */\n  swap1\n  pop\n    /* \"#utility.yul\":2824:2917   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2923:3030   */\ntag_62:\n    /* \"#utility.yul\":2967:2975   */\n  0x00\n    /* \"#utility.yul\":3017:3022   */\n  dup3\n    /* \"#utility.yul\":3011:3015   */\n  dup3\n    /* \"#utility.yul\":3007:3023   */\n  shl\n    /* \"#utility.yul\":2986:3023   */\n  swap1\n  pop\n    /* \"#utility.yul\":2923:3030   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3036:3429   */\ntag_63:\n    /* \"#utility.yul\":3105:3111   */\n  0x00\n    /* \"#utility.yul\":3155:3156   */\n  0x08\n    /* \"#utility.yul\":3143:3153   */\n  dup4\n    /* \"#utility.yul\":3139:3157   */\n  mul\n    /* \"#utility.yul\":3178:3275   */\n  tag_117\n    /* \"#utility.yul\":3208:3274   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3197:3206   */\n  dup3\n    /* \"#utility.yul\":3178:3275   */\n  tag_62\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3296:3335   */\n  tag_118\n    /* \"#utility.yul\":3326:3334   */\n  dup7\n    /* \"#utility.yul\":3315:3324   */\n  dup4\n    /* \"#utility.yul\":3296:3335   */\n  tag_62\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3284:3335   */\n  swap6\n  pop\n    /* \"#utility.yul\":3368:3372   */\n  dup1\n    /* \"#utility.yul\":3364:3373   */\n  not\n    /* \"#utility.yul\":3357:3362   */\n  dup5\n    /* \"#utility.yul\":3353:3374   */\n  and\n    /* \"#utility.yul\":3344:3374   */\n  swap4\n  pop\n    /* \"#utility.yul\":3417:3421   */\n  dup1\n    /* \"#utility.yul\":3407:3415   */\n  dup7\n    /* \"#utility.yul\":3403:3422   */\n  and\n    /* \"#utility.yul\":3396:3401   */\n  dup5\n    /* \"#utility.yul\":3393:3423   */\n  or\n    /* \"#utility.yul\":3383:3423   */\n  swap3\n  pop\n    /* \"#utility.yul\":3112:3429   */\n  pop\n  pop\n    /* \"#utility.yul\":3036:3429   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3435:3495   */\ntag_64:\n    /* \"#utility.yul\":3463:3466   */\n  0x00\n    /* \"#utility.yul\":3484:3489   */\n  dup2\n    /* \"#utility.yul\":3477:3489   */\n  swap1\n  pop\n    /* \"#utility.yul\":3435:3495   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3501:3643   */\ntag_65:\n    /* \"#utility.yul\":3551:3560   */\n  0x00\n    /* \"#utility.yul\":3584:3637   */\n  tag_121\n    /* \"#utility.yul\":3602:3636   */\n  tag_122\n    /* \"#utility.yul\":3611:3635   */\n  tag_123\n    /* \"#utility.yul\":3629:3634   */\n  dup5\n    /* \"#utility.yul\":3611:3635   */\n  tag_53\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3602:3636   */\n  tag_64\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3584:3637   */\n  tag_53\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3571:3637   */\n  swap1\n  pop\n    /* \"#utility.yul\":3501:3643   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3649:3724   */\ntag_66:\n    /* \"#utility.yul\":3692:3695   */\n  0x00\n    /* \"#utility.yul\":3713:3718   */\n  dup2\n    /* \"#utility.yul\":3706:3718   */\n  swap1\n  pop\n    /* \"#utility.yul\":3649:3724   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3730:3999   */\ntag_67:\n    /* \"#utility.yul\":3840:3879   */\n  tag_126\n    /* \"#utility.yul\":3871:3878   */\n  dup4\n    /* \"#utility.yul\":3840:3879   */\n  tag_65\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3901:3992   */\n  tag_127\n    /* \"#utility.yul\":3950:3991   */\n  tag_128\n    /* \"#utility.yul\":3974:3990   */\n  dup3\n    /* \"#utility.yul\":3950:3991   */\n  tag_66\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3942:3948   */\n  dup5\n    /* \"#utility.yul\":3935:3939   */\n  dup5\n    /* \"#utility.yul\":3929:3940   */\n  sload\n    /* \"#utility.yul\":3901:3992   */\n  tag_63\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3895:3899   */\n  dup3\n    /* \"#utility.yul\":3888:3993   */\n  sstore\n    /* \"#utility.yul\":3806:3999   */\n  pop\n    /* \"#utility.yul\":3730:3999   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4005:4078   */\ntag_68:\n    /* \"#utility.yul\":4050:4053   */\n  0x00\n    /* \"#utility.yul\":4005:4078   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4084:4273   */\ntag_69:\n    /* \"#utility.yul\":4161:4193   */\n  tag_131\n  tag_68\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4202:4267   */\n  tag_132\n    /* \"#utility.yul\":4260:4266   */\n  dup2\n    /* \"#utility.yul\":4252:4258   */\n  dup5\n    /* \"#utility.yul\":4246:4250   */\n  dup5\n    /* \"#utility.yul\":4202:4267   */\n  tag_67\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4137:4273   */\n  pop\n    /* \"#utility.yul\":4084:4273   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4279:4465   */\ntag_70:\n    /* \"#utility.yul\":4339:4459   */\ntag_134:\n    /* \"#utility.yul\":4356:4359   */\n  dup2\n    /* \"#utility.yul\":4349:4354   */\n  dup2\n    /* \"#utility.yul\":4346:4360   */\n  lt\n    /* \"#utility.yul\":4339:4459   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":4410:4449   */\n  tag_137\n    /* \"#utility.yul\":4447:4448   */\n  0x00\n    /* \"#utility.yul\":4440:4445   */\n  dup3\n    /* \"#utility.yul\":4410:4449   */\n  tag_69\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4383:4384   */\n  0x01\n    /* \"#utility.yul\":4376:4381   */\n  dup2\n    /* \"#utility.yul\":4372:4385   */\n  add\n    /* \"#utility.yul\":4363:4385   */\n  swap1\n  pop\n    /* \"#utility.yul\":4339:4459   */\n  jump(tag_134)\ntag_136:\n    /* \"#utility.yul\":4279:4465   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4471:5014   */\ntag_71:\n    /* \"#utility.yul\":4572:4574   */\n  0x1f\n    /* \"#utility.yul\":4567:4570   */\n  dup3\n    /* \"#utility.yul\":4564:4575   */\n  gt\n    /* \"#utility.yul\":4561:5007   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":4606:4644   */\n  tag_140\n    /* \"#utility.yul\":4638:4643   */\n  dup2\n    /* \"#utility.yul\":4606:4644   */\n  tag_60\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4690:4719   */\n  tag_141\n    /* \"#utility.yul\":4708:4718   */\n  dup5\n    /* \"#utility.yul\":4690:4719   */\n  tag_61\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":4680:4688   */\n  dup2\n    /* \"#utility.yul\":4676:4720   */\n  add\n    /* \"#utility.yul\":4873:4875   */\n  0x20\n    /* \"#utility.yul\":4861:4871   */\n  dup6\n    /* \"#utility.yul\":4858:4876   */\n  lt\n    /* \"#utility.yul\":4855:4904   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":4894:4902   */\n  dup2\n    /* \"#utility.yul\":4879:4902   */\n  swap1\n  pop\n    /* \"#utility.yul\":4855:4904   */\ntag_142:\n    /* \"#utility.yul\":4917:4997   */\n  tag_143\n    /* \"#utility.yul\":4973:4995   */\n  tag_144\n    /* \"#utility.yul\":4991:4994   */\n  dup6\n    /* \"#utility.yul\":4973:4995   */\n  tag_61\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":4963:4971   */\n  dup4\n    /* \"#utility.yul\":4959:4996   */\n  add\n    /* \"#utility.yul\":4946:4957   */\n  dup3\n    /* \"#utility.yul\":4917:4997   */\n  tag_70\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4576:5007   */\n  pop\n  pop\n    /* \"#utility.yul\":4561:5007   */\ntag_139:\n    /* \"#utility.yul\":4471:5014   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5020:5137   */\ntag_72:\n    /* \"#utility.yul\":5074:5082   */\n  0x00\n    /* \"#utility.yul\":5124:5129   */\n  dup3\n    /* \"#utility.yul\":5118:5122   */\n  dup3\n    /* \"#utility.yul\":5114:5130   */\n  shr\n    /* \"#utility.yul\":5093:5130   */\n  swap1\n  pop\n    /* \"#utility.yul\":5020:5137   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5143:5312   */\ntag_73:\n    /* \"#utility.yul\":5187:5193   */\n  0x00\n    /* \"#utility.yul\":5220:5271   */\n  tag_147\n    /* \"#utility.yul\":5268:5269   */\n  0x00\n    /* \"#utility.yul\":5264:5270   */\n  not\n    /* \"#utility.yul\":5256:5261   */\n  dup5\n    /* \"#utility.yul\":5253:5254   */\n  0x08\n    /* \"#utility.yul\":5249:5262   */\n  mul\n    /* \"#utility.yul\":5220:5271   */\n  tag_72\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5216:5272   */\n  not\n    /* \"#utility.yul\":5301:5305   */\n  dup1\n    /* \"#utility.yul\":5295:5299   */\n  dup4\n    /* \"#utility.yul\":5291:5306   */\n  and\n    /* \"#utility.yul\":5281:5306   */\n  swap2\n  pop\n    /* \"#utility.yul\":5194:5312   */\n  pop\n    /* \"#utility.yul\":5143:5312   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5317:5612   */\ntag_74:\n    /* \"#utility.yul\":5393:5397   */\n  0x00\n    /* \"#utility.yul\":5539:5568   */\n  tag_149\n    /* \"#utility.yul\":5564:5567   */\n  dup4\n    /* \"#utility.yul\":5558:5562   */\n  dup4\n    /* \"#utility.yul\":5539:5568   */\n  tag_73\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5531:5568   */\n  swap2\n  pop\n    /* \"#utility.yul\":5601:5604   */\n  dup3\n    /* \"#utility.yul\":5598:5599   */\n  0x02\n    /* \"#utility.yul\":5594:5605   */\n  mul\n    /* \"#utility.yul\":5588:5592   */\n  dup3\n    /* \"#utility.yul\":5585:5606   */\n  or\n    /* \"#utility.yul\":5577:5606   */\n  swap1\n  pop\n    /* \"#utility.yul\":5317:5612   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5617:7012   */\ntag_9:\n    /* \"#utility.yul\":5734:5771   */\n  tag_151\n    /* \"#utility.yul\":5767:5770   */\n  dup3\n    /* \"#utility.yul\":5734:5771   */\n  tag_56\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5836:5854   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5828:5834   */\n  dup2\n    /* \"#utility.yul\":5825:5855   */\n  gt\n    /* \"#utility.yul\":5822:5878   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":5858:5876   */\n  tag_153\n  tag_57\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5822:5878   */\ntag_152:\n    /* \"#utility.yul\":5902:5940   */\n  tag_154\n    /* \"#utility.yul\":5934:5938   */\n  dup3\n    /* \"#utility.yul\":5928:5939   */\n  sload\n    /* \"#utility.yul\":5902:5940   */\n  tag_59\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5987:6054   */\n  tag_155\n    /* \"#utility.yul\":6047:6053   */\n  dup3\n    /* \"#utility.yul\":6039:6045   */\n  dup3\n    /* \"#utility.yul\":6033:6037   */\n  dup6\n    /* \"#utility.yul\":5987:6054   */\n  tag_71\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6081:6082   */\n  0x00\n    /* \"#utility.yul\":6105:6109   */\n  0x20\n    /* \"#utility.yul\":6092:6109   */\n  swap1\n  pop\n    /* \"#utility.yul\":6137:6139   */\n  0x1f\n    /* \"#utility.yul\":6129:6135   */\n  dup4\n    /* \"#utility.yul\":6126:6140   */\n  gt\n    /* \"#utility.yul\":6154:6155   */\n  0x01\n    /* \"#utility.yul\":6149:6767   */\n  dup2\n  eq\n  tag_157\n  jumpi\n    /* \"#utility.yul\":6811:6812   */\n  0x00\n    /* \"#utility.yul\":6828:6834   */\n  dup5\n    /* \"#utility.yul\":6825:6902   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":6877:6886   */\n  dup3\n    /* \"#utility.yul\":6872:6875   */\n  dup8\n    /* \"#utility.yul\":6868:6887   */\n  add\n    /* \"#utility.yul\":6862:6888   */\n  mload\n    /* \"#utility.yul\":6853:6888   */\n  swap1\n  pop\n    /* \"#utility.yul\":6825:6902   */\ntag_158:\n    /* \"#utility.yul\":6928:6995   */\n  tag_159\n    /* \"#utility.yul\":6988:6994   */\n  dup6\n    /* \"#utility.yul\":6981:6986   */\n  dup3\n    /* \"#utility.yul\":6928:6995   */\n  tag_74\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6922:6926   */\n  dup7\n    /* \"#utility.yul\":6915:6996   */\n  sstore\n    /* \"#utility.yul\":6784:7006   */\n  pop\n    /* \"#utility.yul\":6119:7006   */\n  jump(tag_156)\n    /* \"#utility.yul\":6149:6767   */\ntag_157:\n    /* \"#utility.yul\":6201:6205   */\n  0x1f\n    /* \"#utility.yul\":6197:6206   */\n  not\n    /* \"#utility.yul\":6189:6195   */\n  dup5\n    /* \"#utility.yul\":6185:6207   */\n  and\n    /* \"#utility.yul\":6235:6272   */\n  tag_160\n    /* \"#utility.yul\":6267:6271   */\n  dup7\n    /* \"#utility.yul\":6235:6272   */\n  tag_60\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6294:6295   */\n  0x00\n    /* \"#utility.yul\":6308:6516   */\ntag_161:\n    /* \"#utility.yul\":6322:6329   */\n  dup3\n    /* \"#utility.yul\":6319:6320   */\n  dup2\n    /* \"#utility.yul\":6316:6330   */\n  lt\n    /* \"#utility.yul\":6308:6516   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":6401:6410   */\n  dup5\n    /* \"#utility.yul\":6396:6399   */\n  dup10\n    /* \"#utility.yul\":6392:6411   */\n  add\n    /* \"#utility.yul\":6386:6412   */\n  mload\n    /* \"#utility.yul\":6378:6384   */\n  dup3\n    /* \"#utility.yul\":6371:6413   */\n  sstore\n    /* \"#utility.yul\":6452:6453   */\n  0x01\n    /* \"#utility.yul\":6444:6450   */\n  dup3\n    /* \"#utility.yul\":6440:6454   */\n  add\n    /* \"#utility.yul\":6430:6454   */\n  swap2\n  pop\n    /* \"#utility.yul\":6499:6501   */\n  0x20\n    /* \"#utility.yul\":6488:6497   */\n  dup6\n    /* \"#utility.yul\":6484:6502   */\n  add\n    /* \"#utility.yul\":6471:6502   */\n  swap5\n  pop\n    /* \"#utility.yul\":6345:6349   */\n  0x20\n    /* \"#utility.yul\":6342:6343   */\n  dup2\n    /* \"#utility.yul\":6338:6350   */\n  add\n    /* \"#utility.yul\":6333:6350   */\n  swap1\n  pop\n    /* \"#utility.yul\":6308:6516   */\n  jump(tag_161)\ntag_163:\n    /* \"#utility.yul\":6544:6550   */\n  dup7\n    /* \"#utility.yul\":6535:6542   */\n  dup4\n    /* \"#utility.yul\":6532:6551   */\n  lt\n    /* \"#utility.yul\":6529:6708   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":6602:6611   */\n  dup5\n    /* \"#utility.yul\":6597:6600   */\n  dup10\n    /* \"#utility.yul\":6593:6612   */\n  add\n    /* \"#utility.yul\":6587:6613   */\n  mload\n    /* \"#utility.yul\":6645:6693   */\n  tag_165\n    /* \"#utility.yul\":6687:6691   */\n  0x1f\n    /* \"#utility.yul\":6679:6685   */\n  dup10\n    /* \"#utility.yul\":6675:6692   */\n  and\n    /* \"#utility.yul\":6664:6673   */\n  dup3\n    /* \"#utility.yul\":6645:6693   */\n  tag_73\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6637:6643   */\n  dup4\n    /* \"#utility.yul\":6630:6694   */\n  sstore\n    /* \"#utility.yul\":6552:6708   */\n  pop\n    /* \"#utility.yul\":6529:6708   */\ntag_164:\n    /* \"#utility.yul\":6754:6755   */\n  0x01\n    /* \"#utility.yul\":6750:6751   */\n  0x02\n    /* \"#utility.yul\":6742:6748   */\n  dup9\n    /* \"#utility.yul\":6738:6752   */\n  mul\n    /* \"#utility.yul\":6734:6756   */\n  add\n    /* \"#utility.yul\":6728:6732   */\n  dup9\n    /* \"#utility.yul\":6721:6757   */\n  sstore\n    /* \"#utility.yul\":6156:6767   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6119:7006   */\ntag_156:\n  pop\n    /* \"#utility.yul\":5709:7012   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5617:7012   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7018:7136   */\ntag_75:\n    /* \"#utility.yul\":7105:7129   */\n  tag_167\n    /* \"#utility.yul\":7123:7128   */\n  dup2\n    /* \"#utility.yul\":7105:7129   */\n  tag_50\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7100:7103   */\n  dup3\n    /* \"#utility.yul\":7093:7130   */\n  mstore\n    /* \"#utility.yul\":7018:7136   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7142:7364   */\ntag_14:\n    /* \"#utility.yul\":7235:7239   */\n  0x00\n    /* \"#utility.yul\":7273:7275   */\n  0x20\n    /* \"#utility.yul\":7262:7271   */\n  dup3\n    /* \"#utility.yul\":7258:7276   */\n  add\n    /* \"#utility.yul\":7250:7276   */\n  swap1\n  pop\n    /* \"#utility.yul\":7286:7357   */\n  tag_169\n    /* \"#utility.yul\":7354:7355   */\n  0x00\n    /* \"#utility.yul\":7343:7352   */\n  dup4\n    /* \"#utility.yul\":7339:7356   */\n  add\n    /* \"#utility.yul\":7330:7336   */\n  dup5\n    /* \"#utility.yul\":7286:7357   */\n  tag_75\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7142:7364   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7370:7550   */\ntag_76:\n    /* \"#utility.yul\":7418:7495   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7415:7416   */\n  0x00\n    /* \"#utility.yul\":7408:7496   */\n  mstore\n    /* \"#utility.yul\":7515:7519   */\n  0x11\n    /* \"#utility.yul\":7512:7513   */\n  0x04\n    /* \"#utility.yul\":7505:7520   */\n  mstore\n    /* \"#utility.yul\":7539:7543   */\n  0x24\n    /* \"#utility.yul\":7536:7537   */\n  0x00\n    /* \"#utility.yul\":7529:7544   */\n  revert\n    /* \"#utility.yul\":7556:7658   */\ntag_77:\n    /* \"#utility.yul\":7598:7606   */\n  0x00\n    /* \"#utility.yul\":7645:7650   */\n  dup2\n    /* \"#utility.yul\":7642:7643   */\n  0x01\n    /* \"#utility.yul\":7638:7651   */\n  shr\n    /* \"#utility.yul\":7617:7651   */\n  swap1\n  pop\n    /* \"#utility.yul\":7556:7658   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7664:8512   */\ntag_78:\n    /* \"#utility.yul\":7725:7730   */\n  0x00\n    /* \"#utility.yul\":7732:7736   */\n  dup1\n    /* \"#utility.yul\":7756:7762   */\n  dup3\n    /* \"#utility.yul\":7747:7762   */\n  swap2\n  pop\n    /* \"#utility.yul\":7780:7785   */\n  dup4\n    /* \"#utility.yul\":7771:7785   */\n  swap1\n  pop\n    /* \"#utility.yul\":7794:8506   */\ntag_173:\n    /* \"#utility.yul\":7815:7816   */\n  0x01\n    /* \"#utility.yul\":7805:7813   */\n  dup6\n    /* \"#utility.yul\":7802:7817   */\n  gt\n    /* \"#utility.yul\":7794:8506   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":7910:7914   */\n  dup1\n    /* \"#utility.yul\":7905:7908   */\n  dup7\n    /* \"#utility.yul\":7901:7915   */\n  div\n    /* \"#utility.yul\":7895:7899   */\n  dup2\n    /* \"#utility.yul\":7892:7916   */\n  gt\n    /* \"#utility.yul\":7889:7939   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":7919:7937   */\n  tag_177\n  tag_76\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7889:7939   */\ntag_176:\n    /* \"#utility.yul\":7969:7970   */\n  0x01\n    /* \"#utility.yul\":7959:7967   */\n  dup6\n    /* \"#utility.yul\":7955:7971   */\n  and\n    /* \"#utility.yul\":7952:8403   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8384:8388   */\n  dup1\n    /* \"#utility.yul\":8377:8382   */\n  dup3\n    /* \"#utility.yul\":8373:8389   */\n  mul\n    /* \"#utility.yul\":8364:8389   */\n  swap2\n  pop\n    /* \"#utility.yul\":7952:8403   */\ntag_178:\n    /* \"#utility.yul\":8434:8438   */\n  dup1\n    /* \"#utility.yul\":8428:8432   */\n  dup2\n    /* \"#utility.yul\":8424:8439   */\n  mul\n    /* \"#utility.yul\":8416:8439   */\n  swap1\n  pop\n    /* \"#utility.yul\":8464:8496   */\n  tag_179\n    /* \"#utility.yul\":8487:8495   */\n  dup6\n    /* \"#utility.yul\":8464:8496   */\n  tag_77\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8452:8496   */\n  swap5\n  pop\n    /* \"#utility.yul\":7794:8506   */\n  jump(tag_173)\ntag_175:\n    /* \"#utility.yul\":7664:8512   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8518:9591   */\ntag_79:\n    /* \"#utility.yul\":8572:8577   */\n  0x00\n    /* \"#utility.yul\":8763:8771   */\n  dup3\n    /* \"#utility.yul\":8753:8793   */\n  tag_181\n  jumpi\n    /* \"#utility.yul\":8784:8785   */\n  0x01\n    /* \"#utility.yul\":8775:8785   */\n  swap1\n  pop\n    /* \"#utility.yul\":8786:8791   */\n  jump(tag_180)\n    /* \"#utility.yul\":8753:8793   */\ntag_181:\n    /* \"#utility.yul\":8812:8816   */\n  dup2\n    /* \"#utility.yul\":8802:8838   */\n  tag_182\n  jumpi\n    /* \"#utility.yul\":8829:8830   */\n  0x00\n    /* \"#utility.yul\":8820:8830   */\n  swap1\n  pop\n    /* \"#utility.yul\":8831:8836   */\n  jump(tag_180)\n    /* \"#utility.yul\":8802:8838   */\ntag_182:\n    /* \"#utility.yul\":8898:8902   */\n  dup2\n    /* \"#utility.yul\":8946:8947   */\n  0x01\n    /* \"#utility.yul\":8941:8968   */\n  dup2\n  eq\n  tag_184\n  jumpi\n    /* \"#utility.yul\":8982:8983   */\n  0x02\n    /* \"#utility.yul\":8977:9168   */\n  dup2\n  eq\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8891:9168   */\n  jump(tag_183)\n    /* \"#utility.yul\":8941:8968   */\ntag_184:\n    /* \"#utility.yul\":8959:8960   */\n  0x01\n    /* \"#utility.yul\":8950:8960   */\n  swap2\n  pop\n    /* \"#utility.yul\":8961:8966   */\n  pop\n  jump(tag_180)\n    /* \"#utility.yul\":8977:9168   */\ntag_185:\n    /* \"#utility.yul\":9022:9025   */\n  0xff\n    /* \"#utility.yul\":9012:9020   */\n  dup5\n    /* \"#utility.yul\":9009:9026   */\n  gt\n    /* \"#utility.yul\":9006:9049   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":9029:9047   */\n  tag_187\n  tag_76\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9006:9049   */\ntag_186:\n    /* \"#utility.yul\":9078:9086   */\n  dup4\n    /* \"#utility.yul\":9075:9076   */\n  0x02\n    /* \"#utility.yul\":9071:9087   */\n  exp\n    /* \"#utility.yul\":9062:9087   */\n  swap2\n  pop\n    /* \"#utility.yul\":9113:9116   */\n  dup5\n    /* \"#utility.yul\":9106:9111   */\n  dup3\n    /* \"#utility.yul\":9103:9117   */\n  gt\n    /* \"#utility.yul\":9100:9140   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":9120:9138   */\n  tag_189\n  tag_76\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9100:9140   */\ntag_188:\n    /* \"#utility.yul\":9153:9158   */\n  pop\n  jump(tag_180)\n    /* \"#utility.yul\":8891:9168   */\ntag_183:\n  pop\n    /* \"#utility.yul\":9277:9279   */\n  0x20\n    /* \"#utility.yul\":9267:9275   */\n  dup4\n    /* \"#utility.yul\":9264:9280   */\n  lt\n    /* \"#utility.yul\":9258:9261   */\n  0x0133\n    /* \"#utility.yul\":9252:9256   */\n  dup4\n    /* \"#utility.yul\":9249:9262   */\n  lt\n    /* \"#utility.yul\":9245:9281   */\n  and\n    /* \"#utility.yul\":9227:9229   */\n  0x4e\n    /* \"#utility.yul\":9217:9225   */\n  dup5\n    /* \"#utility.yul\":9214:9230   */\n  lt\n    /* \"#utility.yul\":9209:9211   */\n  0x0b\n    /* \"#utility.yul\":9203:9207   */\n  dup5\n    /* \"#utility.yul\":9200:9212   */\n  lt\n    /* \"#utility.yul\":9196:9231   */\n  and\n    /* \"#utility.yul\":9180:9291   */\n  or\n    /* \"#utility.yul\":9177:9423   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":9333:9341   */\n  dup3\n    /* \"#utility.yul\":9327:9331   */\n  dup3\n    /* \"#utility.yul\":9323:9342   */\n  exp\n    /* \"#utility.yul\":9314:9342   */\n  swap1\n  pop\n    /* \"#utility.yul\":9368:9371   */\n  dup4\n    /* \"#utility.yul\":9361:9366   */\n  dup2\n    /* \"#utility.yul\":9358:9372   */\n  gt\n    /* \"#utility.yul\":9355:9395   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":9375:9393   */\n  tag_192\n  tag_76\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9355:9395   */\ntag_191:\n    /* \"#utility.yul\":9408:9413   */\n  jump(tag_180)\n    /* \"#utility.yul\":9177:9423   */\ntag_190:\n    /* \"#utility.yul\":9448:9490   */\n  tag_193\n    /* \"#utility.yul\":9486:9489   */\n  dup5\n    /* \"#utility.yul\":9476:9484   */\n  dup5\n    /* \"#utility.yul\":9470:9474   */\n  dup5\n    /* \"#utility.yul\":9467:9468   */\n  0x01\n    /* \"#utility.yul\":9448:9490   */\n  tag_78\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9433:9490   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":9522:9526   */\n  dup2\n    /* \"#utility.yul\":9517:9520   */\n  dup5\n    /* \"#utility.yul\":9513:9527   */\n  div\n    /* \"#utility.yul\":9506:9511   */\n  dup2\n    /* \"#utility.yul\":9503:9528   */\n  gt\n    /* \"#utility.yul\":9500:9551   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9531:9549   */\n  tag_195\n  tag_76\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9500:9551   */\ntag_194:\n    /* \"#utility.yul\":9580:9584   */\n  dup2\n    /* \"#utility.yul\":9573:9578   */\n  dup2\n    /* \"#utility.yul\":9569:9585   */\n  mul\n    /* \"#utility.yul\":9560:9585   */\n  swap1\n  pop\n    /* \"#utility.yul\":8518:9591   */\ntag_180:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9597:9683   */\ntag_80:\n    /* \"#utility.yul\":9632:9639   */\n  0x00\n    /* \"#utility.yul\":9672:9676   */\n  0xff\n    /* \"#utility.yul\":9665:9670   */\n  dup3\n    /* \"#utility.yul\":9661:9677   */\n  and\n    /* \"#utility.yul\":9650:9677   */\n  swap1\n  pop\n    /* \"#utility.yul\":9597:9683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9689:9970   */\ntag_22:\n    /* \"#utility.yul\":9747:9752   */\n  0x00\n    /* \"#utility.yul\":9771:9794   */\n  tag_198\n    /* \"#utility.yul\":9789:9793   */\n  dup3\n    /* \"#utility.yul\":9771:9794   */\n  tag_53\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9763:9794   */\n  swap2\n  pop\n    /* \"#utility.yul\":9815:9840   */\n  tag_199\n    /* \"#utility.yul\":9831:9839   */\n  dup4\n    /* \"#utility.yul\":9815:9840   */\n  tag_80\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9803:9840   */\n  swap3\n  pop\n    /* \"#utility.yul\":9859:9963   */\n  tag_200\n    /* \"#utility.yul\":9896:9962   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9886:9894   */\n  dup5\n    /* \"#utility.yul\":9880:9884   */\n  dup5\n    /* \"#utility.yul\":9859:9963   */\n  tag_79\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9850:9963   */\n  swap1\n  pop\n    /* \"#utility.yul\":9689:9970   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9976:10386   */\ntag_24:\n    /* \"#utility.yul\":10016:10023   */\n  0x00\n    /* \"#utility.yul\":10039:10059   */\n  tag_202\n    /* \"#utility.yul\":10057:10058   */\n  dup3\n    /* \"#utility.yul\":10039:10059   */\n  tag_53\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10034:10059   */\n  swap2\n  pop\n    /* \"#utility.yul\":10073:10093   */\n  tag_203\n    /* \"#utility.yul\":10091:10092   */\n  dup4\n    /* \"#utility.yul\":10073:10093   */\n  tag_53\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10068:10093   */\n  swap3\n  pop\n    /* \"#utility.yul\":10128:10129   */\n  dup3\n    /* \"#utility.yul\":10125:10126   */\n  dup3\n    /* \"#utility.yul\":10121:10130   */\n  mul\n    /* \"#utility.yul\":10150:10180   */\n  tag_204\n    /* \"#utility.yul\":10168:10179   */\n  dup2\n    /* \"#utility.yul\":10150:10180   */\n  tag_53\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10139:10180   */\n  swap2\n  pop\n    /* \"#utility.yul\":10329:10330   */\n  dup3\n    /* \"#utility.yul\":10320:10327   */\n  dup3\n    /* \"#utility.yul\":10316:10331   */\n  div\n    /* \"#utility.yul\":10313:10314   */\n  dup5\n    /* \"#utility.yul\":10310:10332   */\n  eq\n    /* \"#utility.yul\":10290:10291   */\n  dup4\n    /* \"#utility.yul\":10283:10292   */\n  iszero\n    /* \"#utility.yul\":10263:10346   */\n  or\n    /* \"#utility.yul\":10240:10379   */\n  tag_205\n  jumpi\n    /* \"#utility.yul\":10359:10377   */\n  tag_206\n  tag_76\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10240:10379   */\ntag_205:\n    /* \"#utility.yul\":10024:10386   */\n  pop\n    /* \"#utility.yul\":9976:10386   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10392:10583   */\ntag_37:\n    /* \"#utility.yul\":10432:10435   */\n  0x00\n    /* \"#utility.yul\":10451:10471   */\n  tag_208\n    /* \"#utility.yul\":10469:10470   */\n  dup3\n    /* \"#utility.yul\":10451:10471   */\n  tag_53\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10446:10471   */\n  swap2\n  pop\n    /* \"#utility.yul\":10485:10505   */\n  tag_209\n    /* \"#utility.yul\":10503:10504   */\n  dup4\n    /* \"#utility.yul\":10485:10505   */\n  tag_53\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10480:10505   */\n  swap3\n  pop\n    /* \"#utility.yul\":10528:10529   */\n  dup3\n    /* \"#utility.yul\":10525:10526   */\n  dup3\n    /* \"#utility.yul\":10521:10530   */\n  add\n    /* \"#utility.yul\":10514:10530   */\n  swap1\n  pop\n    /* \"#utility.yul\":10549:10552   */\n  dup1\n    /* \"#utility.yul\":10546:10547   */\n  dup3\n    /* \"#utility.yul\":10543:10553   */\n  gt\n    /* \"#utility.yul\":10540:10576   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":10556:10574   */\n  tag_211\n  tag_76\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10540:10576   */\ntag_210:\n    /* \"#utility.yul\":10392:10583   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10589:10707   */\ntag_81:\n    /* \"#utility.yul\":10676:10700   */\n  tag_213\n    /* \"#utility.yul\":10694:10699   */\n  dup2\n    /* \"#utility.yul\":10676:10700   */\n  tag_53\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":10671:10674   */\n  dup3\n    /* \"#utility.yul\":10664:10701   */\n  mstore\n    /* \"#utility.yul\":10589:10707   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10713:11155   */\ntag_41:\n    /* \"#utility.yul\":10862:10866   */\n  0x00\n    /* \"#utility.yul\":10900:10902   */\n  0x60\n    /* \"#utility.yul\":10889:10898   */\n  dup3\n    /* \"#utility.yul\":10885:10903   */\n  add\n    /* \"#utility.yul\":10877:10903   */\n  swap1\n  pop\n    /* \"#utility.yul\":10913:10984   */\n  tag_215\n    /* \"#utility.yul\":10981:10982   */\n  0x00\n    /* \"#utility.yul\":10970:10979   */\n  dup4\n    /* \"#utility.yul\":10966:10983   */\n  add\n    /* \"#utility.yul\":10957:10963   */\n  dup7\n    /* \"#utility.yul\":10913:10984   */\n  tag_75\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":10994:11066   */\n  tag_216\n    /* \"#utility.yul\":11062:11064   */\n  0x20\n    /* \"#utility.yul\":11051:11060   */\n  dup4\n    /* \"#utility.yul\":11047:11065   */\n  add\n    /* \"#utility.yul\":11038:11044   */\n  dup6\n    /* \"#utility.yul\":10994:11066   */\n  tag_81\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":11076:11148   */\n  tag_217\n    /* \"#utility.yul\":11144:11146   */\n  0x40\n    /* \"#utility.yul\":11133:11142   */\n  dup4\n    /* \"#utility.yul\":11129:11147   */\n  add\n    /* \"#utility.yul\":11120:11126   */\n  dup5\n    /* \"#utility.yul\":11076:11148   */\n  tag_81\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":10713:11155   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11161:11383   */\ntag_45:\n    /* \"#utility.yul\":11254:11258   */\n  0x00\n    /* \"#utility.yul\":11292:11294   */\n  0x20\n    /* \"#utility.yul\":11281:11290   */\n  dup3\n    /* \"#utility.yul\":11277:11295   */\n  add\n    /* \"#utility.yul\":11269:11295   */\n  swap1\n  pop\n    /* \"#utility.yul\":11305:11376   */\n  tag_219\n    /* \"#utility.yul\":11373:11374   */\n  0x00\n    /* \"#utility.yul\":11362:11371   */\n  dup4\n    /* \"#utility.yul\":11358:11375   */\n  add\n    /* \"#utility.yul\":11349:11355   */\n  dup5\n    /* \"#utility.yul\":11305:11376   */\n  tag_81\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":11161:11383   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Erc20MNTK.sol\":243:1519  contract MyNewToken is ERC20, ERC20Burnable, Ownable {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Erc20MNTK.sol\":243:1519  contract MyNewToken is ERC20, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xac3c93cf\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xac3c93cf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbea1dcf8\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xee33bc45\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x2d44ff23\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x2d44ff23\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Erc20MNTK.sol\":335:368  uint256 public currentTaxDeducted */\n    tag_7:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Erc20MNTK.sol\":920:1007  function decimals()public view virtual override returns(uint8){... */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Erc20MNTK.sol\":732:914  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Erc20MNTK.sol\":1013:1517  function transfer(address to, uint value) public virtual override returns(bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Erc20MNTK.sol\":413:477  mapping(address => mapping(address => uint256))public _taxRecord */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Erc20MNTK.sol\":302:329  address public taxCollector */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Erc20MNTK.sol\":374:406  uint256 public grossTaxCollected */\n    tag_20:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_99\n      jump\t// in\n    tag_100:\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_102\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_101)\n    tag_102:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_103:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_103\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Erc20MNTK.sol\":335:368  uint256 public currentTaxDeducted */\n    tag_45:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/Erc20MNTK.sol\":920:1007  function decimals()public view virtual override returns(uint8){... */\n    tag_48:\n        /* \"contracts/Erc20MNTK.sol\":976:981  uint8 */\n      0x00\n        /* \"contracts/Erc20MNTK.sol\":999:1000  9 */\n      0x09\n        /* \"contracts/Erc20MNTK.sol\":992:1000  return 9 */\n      swap1\n      pop\n        /* \"contracts/Erc20MNTK.sol\":920:1007  function decimals()public view virtual override returns(uint8){... */\n      swap1\n      jump\t// out\n        /* \"contracts/Erc20MNTK.sol\":732:914  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/Erc20MNTK.sol\":815:825  msg.sender */\n      caller\n        /* \"contracts/Erc20MNTK.sol\":809:825  to == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Erc20MNTK.sol\":809:811  to */\n      dup3\n        /* \"contracts/Erc20MNTK.sol\":809:825  to == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Erc20MNTK.sol\":801:859  require(to == msg.sender, \"Minting allowed only to owner\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/Erc20MNTK.sol\":869:907  _mint(to,amount * (10 **(decimals()))) */\n      tag_124\n        /* \"contracts/Erc20MNTK.sol\":875:877  to */\n      dup3\n        /* \"contracts/Erc20MNTK.sol\":894:904  decimals() */\n      tag_125\n        /* \"contracts/Erc20MNTK.sol\":894:902  decimals */\n      tag_48\n        /* \"contracts/Erc20MNTK.sol\":894:904  decimals() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/Erc20MNTK.sol\":888:890  10 */\n      0x0a\n        /* \"contracts/Erc20MNTK.sol\":888:905  10 **(decimals()) */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"contracts/Erc20MNTK.sol\":878:884  amount */\n      dup4\n        /* \"contracts/Erc20MNTK.sol\":878:906  amount * (10 **(decimals())) */\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"contracts/Erc20MNTK.sol\":869:874  _mint */\n      tag_130\n        /* \"contracts/Erc20MNTK.sol\":869:907  _mint(to,amount * (10 **(decimals()))) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/Erc20MNTK.sol\":732:914  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_99\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_99\n      jump\t// in\n    tag_148:\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Erc20MNTK.sol\":1013:1517  function transfer(address to, uint value) public virtual override returns(bool) {... */\n    tag_77:\n        /* \"contracts/Erc20MNTK.sol\":1087:1091  bool */\n      0x00\n        /* \"contracts/Erc20MNTK.sol\":1136:1139  100 */\n      0x64\n        /* \"contracts/Erc20MNTK.sol\":1129:1134  value */\n      dup3\n        /* \"contracts/Erc20MNTK.sol\":1125:1126  5 */\n      0x05\n        /* \"contracts/Erc20MNTK.sol\":1125:1134  5 * value */\n      tag_153\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_153:\n        /* \"contracts/Erc20MNTK.sol\":1124:1139  (5 * value)/100 */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"contracts/Erc20MNTK.sol\":1103:1121  currentTaxDeducted */\n      0x07\n        /* \"contracts/Erc20MNTK.sol\":1103:1139  currentTaxDeducted = (5 * value)/100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Erc20MNTK.sol\":1149:1168  uint transferAmount */\n      0x00\n        /* \"contracts/Erc20MNTK.sol\":1179:1197  currentTaxDeducted */\n      sload(0x07)\n        /* \"contracts/Erc20MNTK.sol\":1171:1176  value */\n      dup4\n        /* \"contracts/Erc20MNTK.sol\":1171:1197  value - currentTaxDeducted */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"contracts/Erc20MNTK.sol\":1149:1197  uint transferAmount = value - currentTaxDeducted */\n      swap1\n      pop\n        /* \"contracts/Erc20MNTK.sol\":1247:1265  currentTaxDeducted */\n      sload(0x07)\n        /* \"contracts/Erc20MNTK.sol\":1227:1244  grossTaxCollected */\n      sload(0x08)\n        /* \"contracts/Erc20MNTK.sol\":1227:1265  grossTaxCollected + currentTaxDeducted */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"contracts/Erc20MNTK.sol\":1207:1224  grossTaxCollected */\n      0x08\n        /* \"contracts/Erc20MNTK.sol\":1207:1265  grossTaxCollected = grossTaxCollected + currentTaxDeducted */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Erc20MNTK.sol\":1275:1296  address _taxCollector */\n      0x00\n        /* \"contracts/Erc20MNTK.sol\":1299:1311  taxCollector */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Erc20MNTK.sol\":1275:1311  address _taxCollector = taxCollector */\n      swap1\n      pop\n        /* \"contracts/Erc20MNTK.sol\":1321:1376  _transfer(msg.sender, taxCollector, currentTaxDeducted) */\n      tag_160\n        /* \"contracts/Erc20MNTK.sol\":1331:1341  msg.sender */\n      caller\n        /* \"contracts/Erc20MNTK.sol\":1343:1355  taxCollector */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Erc20MNTK.sol\":1357:1375  currentTaxDeducted */\n      sload(0x07)\n        /* \"contracts/Erc20MNTK.sol\":1321:1330  _transfer */\n      tag_115\n        /* \"contracts/Erc20MNTK.sol\":1321:1376  _transfer(msg.sender, taxCollector, currentTaxDeducted) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/Erc20MNTK.sol\":1386:1427  _transfer(msg.sender, to, transferAmount) */\n      tag_161\n        /* \"contracts/Erc20MNTK.sol\":1396:1406  msg.sender */\n      caller\n        /* \"contracts/Erc20MNTK.sol\":1408:1410  to */\n      dup7\n        /* \"contracts/Erc20MNTK.sol\":1412:1426  transferAmount */\n      dup5\n        /* \"contracts/Erc20MNTK.sol\":1386:1395  _transfer */\n      tag_115\n        /* \"contracts/Erc20MNTK.sol\":1386:1427  _transfer(msg.sender, to, transferAmount) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/Erc20MNTK.sol\":1470:1488  currentTaxDeducted */\n      sload(0x07)\n        /* \"contracts/Erc20MNTK.sol\":1437:1447  _taxRecord */\n      0x09\n        /* \"contracts/Erc20MNTK.sol\":1437:1462  _taxRecord[_taxCollector] */\n      0x00\n        /* \"contracts/Erc20MNTK.sol\":1448:1461  _taxCollector */\n      dup4\n        /* \"contracts/Erc20MNTK.sol\":1437:1462  _taxRecord[_taxCollector] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Erc20MNTK.sol\":1437:1466  _taxRecord[_taxCollector][to] */\n      0x00\n        /* \"contracts/Erc20MNTK.sol\":1463:1465  to */\n      dup8\n        /* \"contracts/Erc20MNTK.sol\":1437:1466  _taxRecord[_taxCollector][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Erc20MNTK.sol\":1437:1488  _taxRecord[_taxCollector][to] += currentTaxDeducted */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Erc20MNTK.sol\":1505:1509  true */\n      0x01\n        /* \"contracts/Erc20MNTK.sol\":1498:1509  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Erc20MNTK.sol\":1013:1517  function transfer(address to, uint value) public virtual override returns(bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Erc20MNTK.sol\":413:477  mapping(address => mapping(address => uint256))public _taxRecord */\n    tag_82:\n      mstore(0x20, 0x09)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Erc20MNTK.sol\":302:329  address public taxCollector */\n    tag_85:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Erc20MNTK.sol\":374:406  uint256 public grossTaxCollected */\n    tag_92:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_209\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_212\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_212:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_213)\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_217)\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_219:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_220:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_221:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_252:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_252)\n    tag_254:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_222:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_223:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_257\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_219\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":818:889   */\n      tag_258\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_220\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_259\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_221\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":988:1017   */\n      tag_260\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_222\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_28:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_262\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_223\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_225:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_227:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_228:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_268\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_227\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_229:\n        /* \"#utility.yul\":1983:2007   */\n      tag_270\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_228\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_271:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_230:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_273\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_229\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_231:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_232:\n        /* \"#utility.yul\":2339:2363   */\n      tag_276\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_231\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_277:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_233:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_279\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_232\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_31:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_282\n      tag_225\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2632:2751   */\n    tag_281:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_283\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_230\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_284\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_233\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_234:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_235:\n        /* \"#utility.yul\":3196:3217   */\n      tag_287\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_234\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_34:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_289\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_235\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_236:\n        /* \"#utility.yul\":3533:3557   */\n      tag_291\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_231\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_38:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_293\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_236\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_41:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_296\n      tag_225\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3908:4027   */\n    tag_295:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_297\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_230\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_298\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_230\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_299\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_233\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_237:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_238:\n        /* \"#utility.yul\":4598:4620   */\n      tag_302\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_237\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_50:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_304\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_238\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_56:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_307\n      tag_225\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4929:5048   */\n    tag_306:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_308\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_233\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_60:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_311\n      tag_225\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5264:5383   */\n    tag_310:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_312\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_230\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_239:\n        /* \"#utility.yul\":5610:5634   */\n      tag_314\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_228\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_71:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_316\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_239\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:6349   */\n    tag_81:\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup1\n        /* \"#utility.yul\":6000:6002   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup4\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5975:5998   */\n      sub\n        /* \"#utility.yul\":5971:6003   */\n      slt\n        /* \"#utility.yul\":5968:6087   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":6006:6085   */\n      tag_319\n      tag_225\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5968:6087   */\n    tag_318:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6204   */\n      tag_320\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6151:6204   */\n      tag_230\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6141:6204   */\n      swap3\n      pop\n        /* \"#utility.yul\":6097:6214   */\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6279:6332   */\n      tag_321\n        /* \"#utility.yul\":6324:6331   */\n      dup6\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup7\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_230\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6342   */\n      pop\n        /* \"#utility.yul\":5875:6349   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6535   */\n    tag_240:\n        /* \"#utility.yul\":6403:6480   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6400:6401   */\n      0x00\n        /* \"#utility.yul\":6393:6481   */\n      mstore\n        /* \"#utility.yul\":6500:6504   */\n      0x22\n        /* \"#utility.yul\":6497:6498   */\n      0x04\n        /* \"#utility.yul\":6490:6505   */\n      mstore\n        /* \"#utility.yul\":6524:6528   */\n      0x24\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6514:6529   */\n      revert\n        /* \"#utility.yul\":6541:6861   */\n    tag_99:\n        /* \"#utility.yul\":6585:6591   */\n      0x00\n        /* \"#utility.yul\":6622:6623   */\n      0x02\n        /* \"#utility.yul\":6616:6620   */\n      dup3\n        /* \"#utility.yul\":6612:6624   */\n      div\n        /* \"#utility.yul\":6602:6624   */\n      swap1\n      pop\n        /* \"#utility.yul\":6669:6670   */\n      0x01\n        /* \"#utility.yul\":6663:6667   */\n      dup3\n        /* \"#utility.yul\":6659:6671   */\n      and\n        /* \"#utility.yul\":6690:6708   */\n      dup1\n        /* \"#utility.yul\":6680:6761   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":6746:6750   */\n      0x7f\n        /* \"#utility.yul\":6738:6744   */\n      dup3\n        /* \"#utility.yul\":6734:6751   */\n      and\n        /* \"#utility.yul\":6724:6751   */\n      swap2\n      pop\n        /* \"#utility.yul\":6680:6761   */\n    tag_324:\n        /* \"#utility.yul\":6808:6810   */\n      0x20\n        /* \"#utility.yul\":6800:6806   */\n      dup3\n        /* \"#utility.yul\":6797:6811   */\n      lt\n        /* \"#utility.yul\":6777:6795   */\n      dup2\n        /* \"#utility.yul\":6774:6812   */\n      sub\n        /* \"#utility.yul\":6771:6855   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":6827:6845   */\n      tag_326\n      tag_240\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6771:6855   */\n    tag_325:\n        /* \"#utility.yul\":6592:6861   */\n      pop\n        /* \"#utility.yul\":6541:6861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6867:7046   */\n    tag_241:\n        /* \"#utility.yul\":7007:7038   */\n      0x4d696e74696e6720616c6c6f776564206f6e6c7920746f206f776e6572000000\n        /* \"#utility.yul\":7003:7004   */\n      0x00\n        /* \"#utility.yul\":6995:7001   */\n      dup3\n        /* \"#utility.yul\":6991:7005   */\n      add\n        /* \"#utility.yul\":6984:7039   */\n      mstore\n        /* \"#utility.yul\":6867:7046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7052:7418   */\n    tag_242:\n        /* \"#utility.yul\":7194:7197   */\n      0x00\n        /* \"#utility.yul\":7215:7282   */\n      tag_329\n        /* \"#utility.yul\":7279:7281   */\n      0x1d\n        /* \"#utility.yul\":7274:7277   */\n      dup4\n        /* \"#utility.yul\":7215:7282   */\n      tag_220\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7208:7282   */\n      swap2\n      pop\n        /* \"#utility.yul\":7291:7384   */\n      tag_330\n        /* \"#utility.yul\":7380:7383   */\n      dup3\n        /* \"#utility.yul\":7291:7384   */\n      tag_241\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7409:7411   */\n      0x20\n        /* \"#utility.yul\":7404:7407   */\n      dup3\n        /* \"#utility.yul\":7400:7412   */\n      add\n        /* \"#utility.yul\":7393:7412   */\n      swap1\n      pop\n        /* \"#utility.yul\":7052:7418   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7424:7843   */\n    tag_123:\n        /* \"#utility.yul\":7590:7594   */\n      0x00\n        /* \"#utility.yul\":7628:7630   */\n      0x20\n        /* \"#utility.yul\":7617:7626   */\n      dup3\n        /* \"#utility.yul\":7613:7631   */\n      add\n        /* \"#utility.yul\":7605:7631   */\n      swap1\n      pop\n        /* \"#utility.yul\":7677:7686   */\n      dup2\n        /* \"#utility.yul\":7671:7675   */\n      dup2\n        /* \"#utility.yul\":7667:7687   */\n      sub\n        /* \"#utility.yul\":7663:7664   */\n      0x00\n        /* \"#utility.yul\":7652:7661   */\n      dup4\n        /* \"#utility.yul\":7648:7665   */\n      add\n        /* \"#utility.yul\":7641:7688   */\n      mstore\n        /* \"#utility.yul\":7705:7836   */\n      tag_332\n        /* \"#utility.yul\":7831:7835   */\n      dup2\n        /* \"#utility.yul\":7705:7836   */\n      tag_242\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7697:7836   */\n      swap1\n      pop\n        /* \"#utility.yul\":7424:7843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7849:8029   */\n    tag_243:\n        /* \"#utility.yul\":7897:7974   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7894:7895   */\n      0x00\n        /* \"#utility.yul\":7887:7975   */\n      mstore\n        /* \"#utility.yul\":7994:7998   */\n      0x11\n        /* \"#utility.yul\":7991:7992   */\n      0x04\n        /* \"#utility.yul\":7984:7999   */\n      mstore\n        /* \"#utility.yul\":8018:8022   */\n      0x24\n        /* \"#utility.yul\":8015:8016   */\n      0x00\n        /* \"#utility.yul\":8008:8023   */\n      revert\n        /* \"#utility.yul\":8035:8137   */\n    tag_244:\n        /* \"#utility.yul\":8077:8085   */\n      0x00\n        /* \"#utility.yul\":8124:8129   */\n      dup2\n        /* \"#utility.yul\":8121:8122   */\n      0x01\n        /* \"#utility.yul\":8117:8130   */\n      shr\n        /* \"#utility.yul\":8096:8130   */\n      swap1\n      pop\n        /* \"#utility.yul\":8035:8137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8143:8991   */\n    tag_245:\n        /* \"#utility.yul\":8204:8209   */\n      0x00\n        /* \"#utility.yul\":8211:8215   */\n      dup1\n        /* \"#utility.yul\":8235:8241   */\n      dup3\n        /* \"#utility.yul\":8226:8241   */\n      swap2\n      pop\n        /* \"#utility.yul\":8259:8264   */\n      dup4\n        /* \"#utility.yul\":8250:8264   */\n      swap1\n      pop\n        /* \"#utility.yul\":8273:8985   */\n    tag_336:\n        /* \"#utility.yul\":8294:8295   */\n      0x01\n        /* \"#utility.yul\":8284:8292   */\n      dup6\n        /* \"#utility.yul\":8281:8296   */\n      gt\n        /* \"#utility.yul\":8273:8985   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":8389:8393   */\n      dup1\n        /* \"#utility.yul\":8384:8387   */\n      dup7\n        /* \"#utility.yul\":8380:8394   */\n      div\n        /* \"#utility.yul\":8374:8378   */\n      dup2\n        /* \"#utility.yul\":8371:8395   */\n      gt\n        /* \"#utility.yul\":8368:8418   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":8398:8416   */\n      tag_340\n      tag_243\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8368:8418   */\n    tag_339:\n        /* \"#utility.yul\":8448:8449   */\n      0x01\n        /* \"#utility.yul\":8438:8446   */\n      dup6\n        /* \"#utility.yul\":8434:8450   */\n      and\n        /* \"#utility.yul\":8431:8882   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":8863:8867   */\n      dup1\n        /* \"#utility.yul\":8856:8861   */\n      dup3\n        /* \"#utility.yul\":8852:8868   */\n      mul\n        /* \"#utility.yul\":8843:8868   */\n      swap2\n      pop\n        /* \"#utility.yul\":8431:8882   */\n    tag_341:\n        /* \"#utility.yul\":8913:8917   */\n      dup1\n        /* \"#utility.yul\":8907:8911   */\n      dup2\n        /* \"#utility.yul\":8903:8918   */\n      mul\n        /* \"#utility.yul\":8895:8918   */\n      swap1\n      pop\n        /* \"#utility.yul\":8943:8975   */\n      tag_342\n        /* \"#utility.yul\":8966:8974   */\n      dup6\n        /* \"#utility.yul\":8943:8975   */\n      tag_244\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8931:8975   */\n      swap5\n      pop\n        /* \"#utility.yul\":8273:8985   */\n      jump(tag_336)\n    tag_338:\n        /* \"#utility.yul\":8143:8991   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8997:10070   */\n    tag_246:\n        /* \"#utility.yul\":9051:9056   */\n      0x00\n        /* \"#utility.yul\":9242:9250   */\n      dup3\n        /* \"#utility.yul\":9232:9272   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":9263:9264   */\n      0x01\n        /* \"#utility.yul\":9254:9264   */\n      swap1\n      pop\n        /* \"#utility.yul\":9265:9270   */\n      jump(tag_343)\n        /* \"#utility.yul\":9232:9272   */\n    tag_344:\n        /* \"#utility.yul\":9291:9295   */\n      dup2\n        /* \"#utility.yul\":9281:9317   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":9308:9309   */\n      0x00\n        /* \"#utility.yul\":9299:9309   */\n      swap1\n      pop\n        /* \"#utility.yul\":9310:9315   */\n      jump(tag_343)\n        /* \"#utility.yul\":9281:9317   */\n    tag_345:\n        /* \"#utility.yul\":9377:9381   */\n      dup2\n        /* \"#utility.yul\":9425:9426   */\n      0x01\n        /* \"#utility.yul\":9420:9447   */\n      dup2\n      eq\n      tag_347\n      jumpi\n        /* \"#utility.yul\":9461:9462   */\n      0x02\n        /* \"#utility.yul\":9456:9647   */\n      dup2\n      eq\n      tag_348\n      jumpi\n        /* \"#utility.yul\":9370:9647   */\n      jump(tag_346)\n        /* \"#utility.yul\":9420:9447   */\n    tag_347:\n        /* \"#utility.yul\":9438:9439   */\n      0x01\n        /* \"#utility.yul\":9429:9439   */\n      swap2\n      pop\n        /* \"#utility.yul\":9440:9445   */\n      pop\n      jump(tag_343)\n        /* \"#utility.yul\":9456:9647   */\n    tag_348:\n        /* \"#utility.yul\":9501:9504   */\n      0xff\n        /* \"#utility.yul\":9491:9499   */\n      dup5\n        /* \"#utility.yul\":9488:9505   */\n      gt\n        /* \"#utility.yul\":9485:9528   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":9508:9526   */\n      tag_350\n      tag_243\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":9485:9528   */\n    tag_349:\n        /* \"#utility.yul\":9557:9565   */\n      dup4\n        /* \"#utility.yul\":9554:9555   */\n      0x02\n        /* \"#utility.yul\":9550:9566   */\n      exp\n        /* \"#utility.yul\":9541:9566   */\n      swap2\n      pop\n        /* \"#utility.yul\":9592:9595   */\n      dup5\n        /* \"#utility.yul\":9585:9590   */\n      dup3\n        /* \"#utility.yul\":9582:9596   */\n      gt\n        /* \"#utility.yul\":9579:9619   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":9599:9617   */\n      tag_352\n      tag_243\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9579:9619   */\n    tag_351:\n        /* \"#utility.yul\":9632:9637   */\n      pop\n      jump(tag_343)\n        /* \"#utility.yul\":9370:9647   */\n    tag_346:\n      pop\n        /* \"#utility.yul\":9756:9758   */\n      0x20\n        /* \"#utility.yul\":9746:9754   */\n      dup4\n        /* \"#utility.yul\":9743:9759   */\n      lt\n        /* \"#utility.yul\":9737:9740   */\n      0x0133\n        /* \"#utility.yul\":9731:9735   */\n      dup4\n        /* \"#utility.yul\":9728:9741   */\n      lt\n        /* \"#utility.yul\":9724:9760   */\n      and\n        /* \"#utility.yul\":9706:9708   */\n      0x4e\n        /* \"#utility.yul\":9696:9704   */\n      dup5\n        /* \"#utility.yul\":9693:9709   */\n      lt\n        /* \"#utility.yul\":9688:9690   */\n      0x0b\n        /* \"#utility.yul\":9682:9686   */\n      dup5\n        /* \"#utility.yul\":9679:9691   */\n      lt\n        /* \"#utility.yul\":9675:9710   */\n      and\n        /* \"#utility.yul\":9659:9770   */\n      or\n        /* \"#utility.yul\":9656:9902   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":9812:9820   */\n      dup3\n        /* \"#utility.yul\":9806:9810   */\n      dup3\n        /* \"#utility.yul\":9802:9821   */\n      exp\n        /* \"#utility.yul\":9793:9821   */\n      swap1\n      pop\n        /* \"#utility.yul\":9847:9850   */\n      dup4\n        /* \"#utility.yul\":9840:9845   */\n      dup2\n        /* \"#utility.yul\":9837:9851   */\n      gt\n        /* \"#utility.yul\":9834:9874   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":9854:9872   */\n      tag_355\n      tag_243\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9834:9874   */\n    tag_354:\n        /* \"#utility.yul\":9887:9892   */\n      jump(tag_343)\n        /* \"#utility.yul\":9656:9902   */\n    tag_353:\n        /* \"#utility.yul\":9927:9969   */\n      tag_356\n        /* \"#utility.yul\":9965:9968   */\n      dup5\n        /* \"#utility.yul\":9955:9963   */\n      dup5\n        /* \"#utility.yul\":9949:9953   */\n      dup5\n        /* \"#utility.yul\":9946:9947   */\n      0x01\n        /* \"#utility.yul\":9927:9969   */\n      tag_245\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9912:9969   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":10001:10005   */\n      dup2\n        /* \"#utility.yul\":9996:9999   */\n      dup5\n        /* \"#utility.yul\":9992:10006   */\n      div\n        /* \"#utility.yul\":9985:9990   */\n      dup2\n        /* \"#utility.yul\":9982:10007   */\n      gt\n        /* \"#utility.yul\":9979:10030   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":10010:10028   */\n      tag_358\n      tag_243\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9979:10030   */\n    tag_357:\n        /* \"#utility.yul\":10059:10063   */\n      dup2\n        /* \"#utility.yul\":10052:10057   */\n      dup2\n        /* \"#utility.yul\":10048:10064   */\n      mul\n        /* \"#utility.yul\":10039:10064   */\n      swap1\n      pop\n        /* \"#utility.yul\":8997:10070   */\n    tag_343:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10076:10357   */\n    tag_127:\n        /* \"#utility.yul\":10134:10139   */\n      0x00\n        /* \"#utility.yul\":10158:10181   */\n      tag_360\n        /* \"#utility.yul\":10176:10180   */\n      dup3\n        /* \"#utility.yul\":10158:10181   */\n      tag_231\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":10150:10181   */\n      swap2\n      pop\n        /* \"#utility.yul\":10202:10227   */\n      tag_361\n        /* \"#utility.yul\":10218:10226   */\n      dup4\n        /* \"#utility.yul\":10202:10227   */\n      tag_237\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10190:10227   */\n      swap3\n      pop\n        /* \"#utility.yul\":10246:10350   */\n      tag_362\n        /* \"#utility.yul\":10283:10349   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10273:10281   */\n      dup5\n        /* \"#utility.yul\":10267:10271   */\n      dup5\n        /* \"#utility.yul\":10246:10350   */\n      tag_246\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":10237:10350   */\n      swap1\n      pop\n        /* \"#utility.yul\":10076:10357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10363:10773   */\n    tag_129:\n        /* \"#utility.yul\":10403:10410   */\n      0x00\n        /* \"#utility.yul\":10426:10446   */\n      tag_364\n        /* \"#utility.yul\":10444:10445   */\n      dup3\n        /* \"#utility.yul\":10426:10446   */\n      tag_231\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10421:10446   */\n      swap2\n      pop\n        /* \"#utility.yul\":10460:10480   */\n      tag_365\n        /* \"#utility.yul\":10478:10479   */\n      dup4\n        /* \"#utility.yul\":10460:10480   */\n      tag_231\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10455:10480   */\n      swap3\n      pop\n        /* \"#utility.yul\":10515:10516   */\n      dup3\n        /* \"#utility.yul\":10512:10513   */\n      dup3\n        /* \"#utility.yul\":10508:10517   */\n      mul\n        /* \"#utility.yul\":10537:10567   */\n      tag_366\n        /* \"#utility.yul\":10555:10566   */\n      dup2\n        /* \"#utility.yul\":10537:10567   */\n      tag_231\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10526:10567   */\n      swap2\n      pop\n        /* \"#utility.yul\":10716:10717   */\n      dup3\n        /* \"#utility.yul\":10707:10714   */\n      dup3\n        /* \"#utility.yul\":10703:10718   */\n      div\n        /* \"#utility.yul\":10700:10701   */\n      dup5\n        /* \"#utility.yul\":10697:10719   */\n      eq\n        /* \"#utility.yul\":10677:10678   */\n      dup4\n        /* \"#utility.yul\":10670:10679   */\n      iszero\n        /* \"#utility.yul\":10650:10733   */\n      or\n        /* \"#utility.yul\":10627:10766   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":10746:10764   */\n      tag_368\n      tag_243\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10627:10766   */\n    tag_367:\n        /* \"#utility.yul\":10411:10773   */\n      pop\n        /* \"#utility.yul\":10363:10773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10779:10959   */\n    tag_247:\n        /* \"#utility.yul\":10827:10904   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10824:10825   */\n      0x00\n        /* \"#utility.yul\":10817:10905   */\n      mstore\n        /* \"#utility.yul\":10924:10928   */\n      0x12\n        /* \"#utility.yul\":10921:10922   */\n      0x04\n        /* \"#utility.yul\":10914:10929   */\n      mstore\n        /* \"#utility.yul\":10948:10952   */\n      0x24\n        /* \"#utility.yul\":10945:10946   */\n      0x00\n        /* \"#utility.yul\":10938:10953   */\n      revert\n        /* \"#utility.yul\":10965:11150   */\n    tag_155:\n        /* \"#utility.yul\":11005:11006   */\n      0x00\n        /* \"#utility.yul\":11022:11042   */\n      tag_371\n        /* \"#utility.yul\":11040:11041   */\n      dup3\n        /* \"#utility.yul\":11022:11042   */\n      tag_231\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11017:11042   */\n      swap2\n      pop\n        /* \"#utility.yul\":11056:11076   */\n      tag_372\n        /* \"#utility.yul\":11074:11075   */\n      dup4\n        /* \"#utility.yul\":11056:11076   */\n      tag_231\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11051:11076   */\n      swap3\n      pop\n        /* \"#utility.yul\":11095:11096   */\n      dup3\n        /* \"#utility.yul\":11085:11120   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":11100:11118   */\n      tag_374\n      tag_247\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11085:11120   */\n    tag_373:\n        /* \"#utility.yul\":11142:11143   */\n      dup3\n        /* \"#utility.yul\":11139:11140   */\n      dup3\n        /* \"#utility.yul\":11135:11144   */\n      div\n        /* \"#utility.yul\":11130:11144   */\n      swap1\n      pop\n        /* \"#utility.yul\":10965:11150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11156:11350   */\n    tag_157:\n        /* \"#utility.yul\":11196:11200   */\n      0x00\n        /* \"#utility.yul\":11216:11236   */\n      tag_376\n        /* \"#utility.yul\":11234:11235   */\n      dup3\n        /* \"#utility.yul\":11216:11236   */\n      tag_231\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11211:11236   */\n      swap2\n      pop\n        /* \"#utility.yul\":11250:11270   */\n      tag_377\n        /* \"#utility.yul\":11268:11269   */\n      dup4\n        /* \"#utility.yul\":11250:11270   */\n      tag_231\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11245:11270   */\n      swap3\n      pop\n        /* \"#utility.yul\":11294:11295   */\n      dup3\n        /* \"#utility.yul\":11291:11292   */\n      dup3\n        /* \"#utility.yul\":11287:11296   */\n      sub\n        /* \"#utility.yul\":11279:11296   */\n      swap1\n      pop\n        /* \"#utility.yul\":11318:11319   */\n      dup2\n        /* \"#utility.yul\":11312:11316   */\n      dup2\n        /* \"#utility.yul\":11309:11320   */\n      gt\n        /* \"#utility.yul\":11306:11343   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":11323:11341   */\n      tag_379\n      tag_243\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":11306:11343   */\n    tag_378:\n        /* \"#utility.yul\":11156:11350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11356:11547   */\n    tag_159:\n        /* \"#utility.yul\":11396:11399   */\n      0x00\n        /* \"#utility.yul\":11415:11435   */\n      tag_381\n        /* \"#utility.yul\":11433:11434   */\n      dup3\n        /* \"#utility.yul\":11415:11435   */\n      tag_231\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11410:11435   */\n      swap2\n      pop\n        /* \"#utility.yul\":11449:11469   */\n      tag_382\n        /* \"#utility.yul\":11467:11468   */\n      dup4\n        /* \"#utility.yul\":11449:11469   */\n      tag_231\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11444:11469   */\n      swap3\n      pop\n        /* \"#utility.yul\":11492:11493   */\n      dup3\n        /* \"#utility.yul\":11489:11490   */\n      dup3\n        /* \"#utility.yul\":11485:11494   */\n      add\n        /* \"#utility.yul\":11478:11494   */\n      swap1\n      pop\n        /* \"#utility.yul\":11513:11516   */\n      dup1\n        /* \"#utility.yul\":11510:11511   */\n      dup3\n        /* \"#utility.yul\":11507:11517   */\n      gt\n        /* \"#utility.yul\":11504:11540   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":11520:11538   */\n      tag_384\n      tag_243\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11504:11540   */\n    tag_383:\n        /* \"#utility.yul\":11356:11547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11553:11995   */\n    tag_179:\n        /* \"#utility.yul\":11702:11706   */\n      0x00\n        /* \"#utility.yul\":11740:11742   */\n      0x60\n        /* \"#utility.yul\":11729:11738   */\n      dup3\n        /* \"#utility.yul\":11725:11743   */\n      add\n        /* \"#utility.yul\":11717:11743   */\n      swap1\n      pop\n        /* \"#utility.yul\":11753:11824   */\n      tag_386\n        /* \"#utility.yul\":11821:11822   */\n      0x00\n        /* \"#utility.yul\":11810:11819   */\n      dup4\n        /* \"#utility.yul\":11806:11823   */\n      add\n        /* \"#utility.yul\":11797:11803   */\n      dup7\n        /* \"#utility.yul\":11753:11824   */\n      tag_239\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11834:11906   */\n      tag_387\n        /* \"#utility.yul\":11902:11904   */\n      0x20\n        /* \"#utility.yul\":11891:11900   */\n      dup4\n        /* \"#utility.yul\":11887:11905   */\n      add\n        /* \"#utility.yul\":11878:11884   */\n      dup6\n        /* \"#utility.yul\":11834:11906   */\n      tag_236\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11916:11988   */\n      tag_388\n        /* \"#utility.yul\":11984:11986   */\n      0x40\n        /* \"#utility.yul\":11973:11982   */\n      dup4\n        /* \"#utility.yul\":11969:11987   */\n      add\n        /* \"#utility.yul\":11960:11966   */\n      dup5\n        /* \"#utility.yul\":11916:11988   */\n      tag_236\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11553:11995   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122016432430404f21e960aefdca98201b1ff1ff83485fdebd3a3fb80604c8894fb164736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1035": {
									"entryPoint": null,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 670,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 467,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 808,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_1074": {
									"entryPoint": 662,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_address_fromMemory": {
									"entryPoint": 1513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2054,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1612,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1984,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11386:8",
										"nodeType": "YulBlock",
										"src": "0:11386:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "890:32:8",
													"nodeType": "YulBlock",
													"src": "890:32:8",
													"statements": [
														{
															"nativeSrc": "900:16:8",
															"nodeType": "YulAssignment",
															"src": "900:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:8",
																"nodeType": "YulIdentifier",
																"src": "911:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:8",
														"nodeType": "YulTypedName",
														"src": "872:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:8",
														"nodeType": "YulTypedName",
														"src": "882:7:8",
														"type": ""
													}
												],
												"src": "845:77:8"
											},
											{
												"body": {
													"nativeSrc": "971:79:8",
													"nodeType": "YulBlock",
													"src": "971:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:8",
																"nodeType": "YulBlock",
																"src": "1028:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:8"
																			},
																			"nativeSrc": "1030:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:8"
																		},
																		"nativeSrc": "1030:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:8"
																				},
																				"nativeSrc": "1001:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:8"
																		},
																		"nativeSrc": "991:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:8"
																},
																"nativeSrc": "984:43:8",
																"nodeType": "YulFunctionCall",
																"src": "984:43:8"
															},
															"nativeSrc": "981:63:8",
															"nodeType": "YulIf",
															"src": "981:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:8",
														"nodeType": "YulTypedName",
														"src": "964:5:8",
														"type": ""
													}
												],
												"src": "928:122:8"
											},
											{
												"body": {
													"nativeSrc": "1119:80:8",
													"nodeType": "YulBlock",
													"src": "1119:80:8",
													"statements": [
														{
															"nativeSrc": "1129:22:8",
															"nodeType": "YulAssignment",
															"src": "1129:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:8"
																},
																"nativeSrc": "1138:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:8"
																},
																"nativeSrc": "1160:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:8"
															},
															"nativeSrc": "1160:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:8",
														"nodeType": "YulTypedName",
														"src": "1097:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:8",
														"nodeType": "YulTypedName",
														"src": "1105:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:8",
														"nodeType": "YulTypedName",
														"src": "1113:5:8",
														"type": ""
													}
												],
												"src": "1056:143:8"
											},
											{
												"body": {
													"nativeSrc": "1316:552:8",
													"nodeType": "YulBlock",
													"src": "1316:552:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:8",
																"nodeType": "YulBlock",
																"src": "1362:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:8"
																			},
																			"nativeSrc": "1364:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:8"
																		},
																		"nativeSrc": "1364:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:8"
																		},
																		"nativeSrc": "1333:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:8"
																},
																"nativeSrc": "1329:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:8"
															},
															"nativeSrc": "1326:119:8",
															"nodeType": "YulIf",
															"src": "1326:119:8"
														},
														{
															"nativeSrc": "1455:128:8",
															"nodeType": "YulBlock",
															"src": "1455:128:8",
															"statements": [
																{
																	"nativeSrc": "1470:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:8"
																				},
																				"nativeSrc": "1541:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:8"
																		},
																		"nativeSrc": "1509:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:8",
															"nodeType": "YulBlock",
															"src": "1593:129:8",
															"statements": [
																{
																	"nativeSrc": "1608:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:8"
																				},
																				"nativeSrc": "1680:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1648:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:8"
																		},
																		"nativeSrc": "1648:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:8",
															"nodeType": "YulBlock",
															"src": "1732:129:8",
															"statements": [
																{
																	"nativeSrc": "1747:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:8"
																				},
																				"nativeSrc": "1819:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1787:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:8"
																		},
																		"nativeSrc": "1787:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address_fromMemory",
												"nativeSrc": "1205:663:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:8",
														"nodeType": "YulTypedName",
														"src": "1270:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:8",
														"nodeType": "YulTypedName",
														"src": "1281:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:8",
														"nodeType": "YulTypedName",
														"src": "1293:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:8",
														"nodeType": "YulTypedName",
														"src": "1301:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:8",
														"nodeType": "YulTypedName",
														"src": "1309:6:8",
														"type": ""
													}
												],
												"src": "1205:663:8"
											},
											{
												"body": {
													"nativeSrc": "1933:40:8",
													"nodeType": "YulBlock",
													"src": "1933:40:8",
													"statements": [
														{
															"nativeSrc": "1944:22:8",
															"nodeType": "YulAssignment",
															"src": "1944:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1960:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1960:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1954:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1954:5:8"
																},
																"nativeSrc": "1954:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1954:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1874:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1916:5:8",
														"nodeType": "YulTypedName",
														"src": "1916:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1926:6:8",
														"nodeType": "YulTypedName",
														"src": "1926:6:8",
														"type": ""
													}
												],
												"src": "1874:99:8"
											},
											{
												"body": {
													"nativeSrc": "2007:152:8",
													"nodeType": "YulBlock",
													"src": "2007:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2024:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2024:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2027:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2017:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2017:6:8"
																},
																"nativeSrc": "2017:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2017:88:8"
															},
															"nativeSrc": "2017:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2017:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2121:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2121:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2124:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2124:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2114:6:8"
																},
																"nativeSrc": "2114:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2114:15:8"
															},
															"nativeSrc": "2114:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2114:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2145:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2145:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2148:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2148:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2138:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:8"
																},
																"nativeSrc": "2138:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2138:15:8"
															},
															"nativeSrc": "2138:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2138:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1979:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1979:180:8"
											},
											{
												"body": {
													"nativeSrc": "2193:152:8",
													"nodeType": "YulBlock",
													"src": "2193:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2210:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2210:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2213:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2213:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2203:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:8"
																},
																"nativeSrc": "2203:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2203:88:8"
															},
															"nativeSrc": "2203:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2203:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2307:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2307:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2310:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2310:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2300:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:8"
																},
																"nativeSrc": "2300:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2300:15:8"
															},
															"nativeSrc": "2300:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2300:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2331:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2331:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2334:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2334:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2324:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:8"
																},
																"nativeSrc": "2324:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2324:15:8"
															},
															"nativeSrc": "2324:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2324:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2165:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2165:180:8"
											},
											{
												"body": {
													"nativeSrc": "2402:269:8",
													"nodeType": "YulBlock",
													"src": "2402:269:8",
													"statements": [
														{
															"nativeSrc": "2412:22:8",
															"nodeType": "YulAssignment",
															"src": "2412:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2426:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2426:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2432:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2422:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2422:3:8"
																},
																"nativeSrc": "2422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2422:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2412:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2412:6:8"
																}
															]
														},
														{
															"nativeSrc": "2443:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2443:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2473:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2473:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2479:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2479:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2469:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:8"
																},
																"nativeSrc": "2469:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2469:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2447:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2447:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2520:51:8",
																"nodeType": "YulBlock",
																"src": "2520:51:8",
																"statements": [
																	{
																		"nativeSrc": "2534:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2534:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2548:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2548:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2556:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2556:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2544:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2544:3:8"
																			},
																			"nativeSrc": "2544:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2544:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2534:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2534:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2500:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2500:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2493:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:8"
																},
																"nativeSrc": "2493:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2493:26:8"
															},
															"nativeSrc": "2490:81:8",
															"nodeType": "YulIf",
															"src": "2490:81:8"
														},
														{
															"body": {
																"nativeSrc": "2623:42:8",
																"nodeType": "YulBlock",
																"src": "2623:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2637:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2637:16:8"
																			},
																			"nativeSrc": "2637:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2637:18:8"
																		},
																		"nativeSrc": "2637:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2637:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2587:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2587:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2610:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2618:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2618:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2607:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2607:2:8"
																		},
																		"nativeSrc": "2607:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2607:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2584:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2584:2:8"
																},
																"nativeSrc": "2584:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2584:38:8"
															},
															"nativeSrc": "2581:84:8",
															"nodeType": "YulIf",
															"src": "2581:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2351:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2386:4:8",
														"nodeType": "YulTypedName",
														"src": "2386:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2395:6:8",
														"nodeType": "YulTypedName",
														"src": "2395:6:8",
														"type": ""
													}
												],
												"src": "2351:320:8"
											},
											{
												"body": {
													"nativeSrc": "2731:87:8",
													"nodeType": "YulBlock",
													"src": "2731:87:8",
													"statements": [
														{
															"nativeSrc": "2741:11:8",
															"nodeType": "YulAssignment",
															"src": "2741:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2749:3:8",
																"nodeType": "YulIdentifier",
																"src": "2749:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2741:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2741:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2769:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2769:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2772:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2772:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2762:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:8"
																},
																"nativeSrc": "2762:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2762:14:8"
															},
															"nativeSrc": "2762:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2762:14:8"
														},
														{
															"nativeSrc": "2785:26:8",
															"nodeType": "YulAssignment",
															"src": "2785:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2803:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2803:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2806:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2806:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2793:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2793:9:8"
																},
																"nativeSrc": "2793:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2793:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2785:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2785:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2677:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2718:3:8",
														"nodeType": "YulTypedName",
														"src": "2718:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2726:4:8",
														"nodeType": "YulTypedName",
														"src": "2726:4:8",
														"type": ""
													}
												],
												"src": "2677:141:8"
											},
											{
												"body": {
													"nativeSrc": "2868:49:8",
													"nodeType": "YulBlock",
													"src": "2868:49:8",
													"statements": [
														{
															"nativeSrc": "2878:33:8",
															"nodeType": "YulAssignment",
															"src": "2878:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2896:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2896:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2903:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2892:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2892:3:8"
																		},
																		"nativeSrc": "2892:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2908:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2908:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2888:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:8"
																},
																"nativeSrc": "2888:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2888:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2878:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2878:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2824:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2851:5:8",
														"nodeType": "YulTypedName",
														"src": "2851:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2861:6:8",
														"nodeType": "YulTypedName",
														"src": "2861:6:8",
														"type": ""
													}
												],
												"src": "2824:93:8"
											},
											{
												"body": {
													"nativeSrc": "2976:54:8",
													"nodeType": "YulBlock",
													"src": "2976:54:8",
													"statements": [
														{
															"nativeSrc": "2986:37:8",
															"nodeType": "YulAssignment",
															"src": "2986:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3011:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3011:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3017:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3017:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3007:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3007:3:8"
																},
																"nativeSrc": "3007:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3007:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2986:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2986:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2923:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2951:4:8",
														"nodeType": "YulTypedName",
														"src": "2951:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2957:5:8",
														"nodeType": "YulTypedName",
														"src": "2957:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2967:8:8",
														"nodeType": "YulTypedName",
														"src": "2967:8:8",
														"type": ""
													}
												],
												"src": "2923:107:8"
											},
											{
												"body": {
													"nativeSrc": "3112:317:8",
													"nodeType": "YulBlock",
													"src": "3112:317:8",
													"statements": [
														{
															"nativeSrc": "3122:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3122:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3143:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "3143:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3155:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3155:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3139:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:8"
																},
																"nativeSrc": "3139:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3139:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3126:9:8",
																	"nodeType": "YulTypedName",
																	"src": "3126:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3166:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3166:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3197:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3197:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3208:66:8",
																		"nodeType": "YulLiteral",
																		"src": "3208:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3178:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3178:18:8"
																},
																"nativeSrc": "3178:97:8",
																"nodeType": "YulFunctionCall",
																"src": "3178:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3170:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3170:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3284:51:8",
															"nodeType": "YulAssignment",
															"src": "3284:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3315:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3315:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3326:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3326:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3296:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3296:18:8"
																},
																"nativeSrc": "3296:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3296:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3284:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3284:8:8"
																}
															]
														},
														{
															"nativeSrc": "3344:30:8",
															"nodeType": "YulAssignment",
															"src": "3344:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3357:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3357:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3368:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3368:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3364:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3364:3:8"
																		},
																		"nativeSrc": "3364:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3364:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3353:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:8"
																},
																"nativeSrc": "3353:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3353:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3344:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3344:5:8"
																}
															]
														},
														{
															"nativeSrc": "3383:40:8",
															"nodeType": "YulAssignment",
															"src": "3383:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3396:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3396:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3407:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3407:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3417:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3417:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3403:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3403:3:8"
																		},
																		"nativeSrc": "3403:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3403:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3393:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3393:2:8"
																},
																"nativeSrc": "3393:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3393:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3036:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3073:5:8",
														"nodeType": "YulTypedName",
														"src": "3073:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3080:10:8",
														"nodeType": "YulTypedName",
														"src": "3080:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3092:8:8",
														"nodeType": "YulTypedName",
														"src": "3092:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3105:6:8",
														"nodeType": "YulTypedName",
														"src": "3105:6:8",
														"type": ""
													}
												],
												"src": "3036:393:8"
											},
											{
												"body": {
													"nativeSrc": "3467:28:8",
													"nodeType": "YulBlock",
													"src": "3467:28:8",
													"statements": [
														{
															"nativeSrc": "3477:12:8",
															"nodeType": "YulAssignment",
															"src": "3477:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3484:5:8",
																"nodeType": "YulIdentifier",
																"src": "3484:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3477:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3477:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3435:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3453:5:8",
														"nodeType": "YulTypedName",
														"src": "3453:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3463:3:8",
														"nodeType": "YulTypedName",
														"src": "3463:3:8",
														"type": ""
													}
												],
												"src": "3435:60:8"
											},
											{
												"body": {
													"nativeSrc": "3561:82:8",
													"nodeType": "YulBlock",
													"src": "3561:82:8",
													"statements": [
														{
															"nativeSrc": "3571:66:8",
															"nodeType": "YulAssignment",
															"src": "3571:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3629:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3629:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3611:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3611:17:8"
																				},
																				"nativeSrc": "3611:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3611:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3602:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3602:8:8"
																		},
																		"nativeSrc": "3602:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3602:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3584:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3584:17:8"
																},
																"nativeSrc": "3584:53:8",
																"nodeType": "YulFunctionCall",
																"src": "3584:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3571:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3501:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3541:5:8",
														"nodeType": "YulTypedName",
														"src": "3541:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3551:9:8",
														"nodeType": "YulTypedName",
														"src": "3551:9:8",
														"type": ""
													}
												],
												"src": "3501:142:8"
											},
											{
												"body": {
													"nativeSrc": "3696:28:8",
													"nodeType": "YulBlock",
													"src": "3696:28:8",
													"statements": [
														{
															"nativeSrc": "3706:12:8",
															"nodeType": "YulAssignment",
															"src": "3706:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3713:5:8",
																"nodeType": "YulIdentifier",
																"src": "3713:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3706:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3706:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3649:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3682:5:8",
														"nodeType": "YulTypedName",
														"src": "3682:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3692:3:8",
														"nodeType": "YulTypedName",
														"src": "3692:3:8",
														"type": ""
													}
												],
												"src": "3649:75:8"
											},
											{
												"body": {
													"nativeSrc": "3806:193:8",
													"nodeType": "YulBlock",
													"src": "3806:193:8",
													"statements": [
														{
															"nativeSrc": "3816:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3816:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3871:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3871:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3840:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3840:30:8"
																},
																"nativeSrc": "3840:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3840:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3820:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3820:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3895:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3895:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3935:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3935:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3929:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3929:5:8"
																				},
																				"nativeSrc": "3929:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3929:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3942:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3942:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3974:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3974:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3950:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3950:23:8"
																				},
																				"nativeSrc": "3950:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3950:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3901:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3901:27:8"
																		},
																		"nativeSrc": "3901:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3888:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:8"
																},
																"nativeSrc": "3888:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3888:105:8"
															},
															"nativeSrc": "3888:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3888:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3730:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3783:4:8",
														"nodeType": "YulTypedName",
														"src": "3783:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3789:6:8",
														"nodeType": "YulTypedName",
														"src": "3789:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3797:7:8",
														"nodeType": "YulTypedName",
														"src": "3797:7:8",
														"type": ""
													}
												],
												"src": "3730:269:8"
											},
											{
												"body": {
													"nativeSrc": "4054:24:8",
													"nodeType": "YulBlock",
													"src": "4054:24:8",
													"statements": [
														{
															"nativeSrc": "4064:8:8",
															"nodeType": "YulAssignment",
															"src": "4064:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4071:1:8",
																"nodeType": "YulLiteral",
																"src": "4071:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4064:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4005:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4050:3:8",
														"nodeType": "YulTypedName",
														"src": "4050:3:8",
														"type": ""
													}
												],
												"src": "4005:73:8"
											},
											{
												"body": {
													"nativeSrc": "4137:136:8",
													"nodeType": "YulBlock",
													"src": "4137:136:8",
													"statements": [
														{
															"nativeSrc": "4147:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4147:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4161:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4161:30:8"
																},
																"nativeSrc": "4161:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4161:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4151:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4151:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4246:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4246:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4252:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4252:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4260:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4260:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4202:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4202:43:8"
																},
																"nativeSrc": "4202:65:8",
																"nodeType": "YulFunctionCall",
																"src": "4202:65:8"
															},
															"nativeSrc": "4202:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "4202:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4084:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4123:4:8",
														"nodeType": "YulTypedName",
														"src": "4123:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4129:6:8",
														"nodeType": "YulTypedName",
														"src": "4129:6:8",
														"type": ""
													}
												],
												"src": "4084:189:8"
											},
											{
												"body": {
													"nativeSrc": "4329:136:8",
													"nodeType": "YulBlock",
													"src": "4329:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4396:63:8",
																"nodeType": "YulBlock",
																"src": "4396:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4440:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4440:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4447:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4447:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4410:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "4410:29:8"
																			},
																			"nativeSrc": "4410:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4410:39:8"
																		},
																		"nativeSrc": "4410:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4410:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4349:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4349:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4356:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4356:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4346:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4346:2:8"
																},
																"nativeSrc": "4346:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4346:14:8"
															},
															"nativeSrc": "4339:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4361:26:8",
																"nodeType": "YulBlock",
																"src": "4361:26:8",
																"statements": [
																	{
																		"nativeSrc": "4363:22:8",
																		"nodeType": "YulAssignment",
																		"src": "4363:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4376:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4376:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4383:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4383:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4372:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4372:3:8"
																			},
																			"nativeSrc": "4372:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4372:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4363:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4363:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4343:2:8",
																"nodeType": "YulBlock",
																"src": "4343:2:8",
																"statements": []
															},
															"src": "4339:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4279:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4317:5:8",
														"nodeType": "YulTypedName",
														"src": "4317:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4324:3:8",
														"nodeType": "YulTypedName",
														"src": "4324:3:8",
														"type": ""
													}
												],
												"src": "4279:186:8"
											},
											{
												"body": {
													"nativeSrc": "4550:464:8",
													"nodeType": "YulBlock",
													"src": "4550:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4576:431:8",
																"nodeType": "YulBlock",
																"src": "4576:431:8",
																"statements": [
																	{
																		"nativeSrc": "4590:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4590:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4638:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4638:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4606:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4606:31:8"
																			},
																			"nativeSrc": "4606:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4606:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4594:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4594:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4657:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4657:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4680:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4680:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4708:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4708:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4690:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4690:17:8"
																					},
																					"nativeSrc": "4690:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4690:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4676:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4676:3:8"
																			},
																			"nativeSrc": "4676:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4676:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4661:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4661:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4877:27:8",
																			"nodeType": "YulBlock",
																			"src": "4877:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4879:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4879:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4894:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4894:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4879:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4879:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4861:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4861:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4873:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4873:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4858:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4858:2:8"
																			},
																			"nativeSrc": "4858:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4858:18:8"
																		},
																		"nativeSrc": "4855:49:8",
																		"nodeType": "YulIf",
																		"src": "4855:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4946:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4946:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4963:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4963:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4991:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4991:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4973:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4973:17:8"
																							},
																							"nativeSrc": "4973:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4973:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4959:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4959:3:8"
																					},
																					"nativeSrc": "4959:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4959:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4917:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4917:28:8"
																			},
																			"nativeSrc": "4917:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4917:80:8"
																		},
																		"nativeSrc": "4917:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4917:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4567:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4567:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4572:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4572:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4564:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4564:2:8"
																},
																"nativeSrc": "4564:11:8",
																"nodeType": "YulFunctionCall",
																"src": "4564:11:8"
															},
															"nativeSrc": "4561:446:8",
															"nodeType": "YulIf",
															"src": "4561:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4471:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4526:5:8",
														"nodeType": "YulTypedName",
														"src": "4526:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4533:3:8",
														"nodeType": "YulTypedName",
														"src": "4533:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4538:10:8",
														"nodeType": "YulTypedName",
														"src": "4538:10:8",
														"type": ""
													}
												],
												"src": "4471:543:8"
											},
											{
												"body": {
													"nativeSrc": "5083:54:8",
													"nodeType": "YulBlock",
													"src": "5083:54:8",
													"statements": [
														{
															"nativeSrc": "5093:37:8",
															"nodeType": "YulAssignment",
															"src": "5093:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5118:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5118:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5124:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5124:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5114:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:8"
																},
																"nativeSrc": "5114:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5114:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5093:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5093:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5020:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5058:4:8",
														"nodeType": "YulTypedName",
														"src": "5058:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5064:5:8",
														"nodeType": "YulTypedName",
														"src": "5064:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5074:8:8",
														"nodeType": "YulTypedName",
														"src": "5074:8:8",
														"type": ""
													}
												],
												"src": "5020:117:8"
											},
											{
												"body": {
													"nativeSrc": "5194:118:8",
													"nodeType": "YulBlock",
													"src": "5194:118:8",
													"statements": [
														{
															"nativeSrc": "5204:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5204:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5253:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5253:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5256:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5256:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5249:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5249:3:8"
																				},
																				"nativeSrc": "5249:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5249:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5268:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5268:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5264:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5264:3:8"
																				},
																				"nativeSrc": "5264:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5264:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5220:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5220:28:8"
																		},
																		"nativeSrc": "5220:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5220:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5216:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5216:3:8"
																},
																"nativeSrc": "5216:56:8",
																"nodeType": "YulFunctionCall",
																"src": "5216:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5208:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5208:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5281:25:8",
															"nodeType": "YulAssignment",
															"src": "5281:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5295:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5295:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5301:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5301:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5291:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5291:3:8"
																},
																"nativeSrc": "5291:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5291:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5281:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5281:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5143:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5171:4:8",
														"nodeType": "YulTypedName",
														"src": "5171:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5177:5:8",
														"nodeType": "YulTypedName",
														"src": "5177:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5187:6:8",
														"nodeType": "YulTypedName",
														"src": "5187:6:8",
														"type": ""
													}
												],
												"src": "5143:169:8"
											},
											{
												"body": {
													"nativeSrc": "5398:214:8",
													"nodeType": "YulBlock",
													"src": "5398:214:8",
													"statements": [
														{
															"nativeSrc": "5531:37:8",
															"nodeType": "YulAssignment",
															"src": "5531:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5558:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5558:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5564:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5564:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5539:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5539:18:8"
																},
																"nativeSrc": "5539:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5539:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5531:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:8"
																}
															]
														},
														{
															"nativeSrc": "5577:29:8",
															"nodeType": "YulAssignment",
															"src": "5577:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5588:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5588:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5598:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5598:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5601:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5601:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5594:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5594:3:8"
																		},
																		"nativeSrc": "5594:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5594:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5585:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5585:2:8"
																},
																"nativeSrc": "5585:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5585:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5577:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5577:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5317:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5379:4:8",
														"nodeType": "YulTypedName",
														"src": "5379:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5385:3:8",
														"nodeType": "YulTypedName",
														"src": "5385:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5393:4:8",
														"nodeType": "YulTypedName",
														"src": "5393:4:8",
														"type": ""
													}
												],
												"src": "5317:295:8"
											},
											{
												"body": {
													"nativeSrc": "5709:1303:8",
													"nodeType": "YulBlock",
													"src": "5709:1303:8",
													"statements": [
														{
															"nativeSrc": "5720:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5720:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5767:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5767:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5734:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5734:32:8"
																},
																"nativeSrc": "5734:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5734:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5724:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5724:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5856:22:8",
																"nodeType": "YulBlock",
																"src": "5856:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5858:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5858:16:8"
																			},
																			"nativeSrc": "5858:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5858:18:8"
																		},
																		"nativeSrc": "5858:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5828:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5828:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5836:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5836:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5825:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5825:2:8"
																},
																"nativeSrc": "5825:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5825:30:8"
															},
															"nativeSrc": "5822:56:8",
															"nodeType": "YulIf",
															"src": "5822:56:8"
														},
														{
															"nativeSrc": "5888:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5888:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5934:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5934:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5928:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5928:5:8"
																		},
																		"nativeSrc": "5928:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5928:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5902:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5902:25:8"
																},
																"nativeSrc": "5902:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5902:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5892:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5892:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6033:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6033:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6039:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6039:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6047:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6047:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5987:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5987:45:8"
																},
																"nativeSrc": "5987:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5987:67:8"
															},
															"nativeSrc": "5987:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5987:67:8"
														},
														{
															"nativeSrc": "6064:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6064:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6081:1:8",
																"nodeType": "YulLiteral",
																"src": "6081:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6068:9:8",
																	"nodeType": "YulTypedName",
																	"src": "6068:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6092:17:8",
															"nodeType": "YulAssignment",
															"src": "6092:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6105:4:8",
																"nodeType": "YulLiteral",
																"src": "6105:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6092:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6092:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6156:611:8",
																		"nodeType": "YulBlock",
																		"src": "6156:611:8",
																		"statements": [
																			{
																				"nativeSrc": "6170:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6170:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6189:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6189:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6201:4:8",
																									"nodeType": "YulLiteral",
																									"src": "6201:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6197:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6197:3:8"
																							},
																							"nativeSrc": "6197:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6197:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6185:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6185:3:8"
																					},
																					"nativeSrc": "6185:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6185:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6174:7:8",
																						"nodeType": "YulTypedName",
																						"src": "6174:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6221:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6221:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6267:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6267:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6235:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "6235:31:8"
																					},
																					"nativeSrc": "6235:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6235:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6225:6:8",
																						"nodeType": "YulTypedName",
																						"src": "6225:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6285:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6285:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6294:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6294:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6289:1:8",
																						"nodeType": "YulTypedName",
																						"src": "6289:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6353:163:8",
																					"nodeType": "YulBlock",
																					"src": "6353:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6378:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6378:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6396:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "6396:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6401:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "6401:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6392:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6392:3:8"
																												},
																												"nativeSrc": "6392:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6392:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6386:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "6386:5:8"
																										},
																										"nativeSrc": "6386:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6386:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6371:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6371:6:8"
																								},
																								"nativeSrc": "6371:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6371:42:8"
																							},
																							"nativeSrc": "6371:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6371:42:8"
																						},
																						{
																							"nativeSrc": "6430:24:8",
																							"nodeType": "YulAssignment",
																							"src": "6430:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6444:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6444:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6452:1:8",
																										"nodeType": "YulLiteral",
																										"src": "6452:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6440:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6440:3:8"
																								},
																								"nativeSrc": "6440:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6440:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6430:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6430:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6471:31:8",
																							"nodeType": "YulAssignment",
																							"src": "6471:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6488:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "6488:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6499:2:8",
																										"nodeType": "YulLiteral",
																										"src": "6499:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6484:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6484:3:8"
																								},
																								"nativeSrc": "6484:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6484:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6471:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "6471:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6319:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "6319:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6322:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6322:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6316:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6316:2:8"
																					},
																					"nativeSrc": "6316:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6316:14:8"
																				},
																				"nativeSrc": "6308:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6331:21:8",
																					"nodeType": "YulBlock",
																					"src": "6331:21:8",
																					"statements": [
																						{
																							"nativeSrc": "6333:17:8",
																							"nodeType": "YulAssignment",
																							"src": "6333:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6342:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "6342:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6345:4:8",
																										"nodeType": "YulLiteral",
																										"src": "6345:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6338:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6338:3:8"
																								},
																								"nativeSrc": "6338:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6338:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6333:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "6333:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6312:3:8",
																					"nodeType": "YulBlock",
																					"src": "6312:3:8",
																					"statements": []
																				},
																				"src": "6308:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "6552:156:8",
																					"nodeType": "YulBlock",
																					"src": "6552:156:8",
																					"statements": [
																						{
																							"nativeSrc": "6570:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6570:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6597:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6597:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6602:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6602:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6593:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6593:3:8"
																										},
																										"nativeSrc": "6593:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6593:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6587:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6587:5:8"
																								},
																								"nativeSrc": "6587:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6587:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6574:9:8",
																									"nodeType": "YulTypedName",
																									"src": "6574:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6637:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6637:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6664:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6664:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6679:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6679:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6687:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6687:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6675:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6675:3:8"
																												},
																												"nativeSrc": "6675:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6675:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6645:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6645:18:8"
																										},
																										"nativeSrc": "6645:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6645:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6630:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6630:6:8"
																								},
																								"nativeSrc": "6630:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6630:64:8"
																							},
																							"nativeSrc": "6630:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6630:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6535:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6535:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6544:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6544:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6532:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6532:2:8"
																					},
																					"nativeSrc": "6532:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6532:19:8"
																				},
																				"nativeSrc": "6529:179:8",
																				"nodeType": "YulIf",
																				"src": "6529:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6728:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6728:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6742:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6742:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6750:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6750:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6738:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6738:3:8"
																									},
																									"nativeSrc": "6738:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6738:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6754:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6754:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6734:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6734:3:8"
																							},
																							"nativeSrc": "6734:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6734:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6721:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6721:6:8"
																					},
																					"nativeSrc": "6721:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6721:36:8"
																				},
																				"nativeSrc": "6721:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6721:36:8"
																			}
																		]
																	},
																	"nativeSrc": "6149:618:8",
																	"nodeType": "YulCase",
																	"src": "6149:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6154:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6154:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6784:222:8",
																		"nodeType": "YulBlock",
																		"src": "6784:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6798:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6798:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6811:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6811:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6802:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6802:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6835:67:8",
																					"nodeType": "YulBlock",
																					"src": "6835:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6853:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6853:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6872:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6872:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6877:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6877:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6868:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6868:3:8"
																										},
																										"nativeSrc": "6868:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6868:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6862:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6862:5:8"
																								},
																								"nativeSrc": "6862:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6862:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6853:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6853:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6828:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6828:6:8"
																				},
																				"nativeSrc": "6825:77:8",
																				"nodeType": "YulIf",
																				"src": "6825:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6922:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6922:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6981:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6981:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6988:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6988:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6928:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6928:52:8"
																							},
																							"nativeSrc": "6928:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6928:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6915:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6915:6:8"
																					},
																					"nativeSrc": "6915:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6915:81:8"
																				},
																				"nativeSrc": "6915:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6915:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6776:230:8",
																	"nodeType": "YulCase",
																	"src": "6776:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6129:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6129:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6137:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6137:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6126:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6126:2:8"
																},
																"nativeSrc": "6126:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6126:14:8"
															},
															"nativeSrc": "6119:887:8",
															"nodeType": "YulSwitch",
															"src": "6119:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5617:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5698:4:8",
														"nodeType": "YulTypedName",
														"src": "5698:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5704:3:8",
														"nodeType": "YulTypedName",
														"src": "5704:3:8",
														"type": ""
													}
												],
												"src": "5617:1395:8"
											},
											{
												"body": {
													"nativeSrc": "7083:53:8",
													"nodeType": "YulBlock",
													"src": "7083:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7100:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7100:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7123:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7123:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7105:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7105:17:8"
																		},
																		"nativeSrc": "7105:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7105:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7093:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7093:6:8"
																},
																"nativeSrc": "7093:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7093:37:8"
															},
															"nativeSrc": "7093:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7093:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7018:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7071:5:8",
														"nodeType": "YulTypedName",
														"src": "7071:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7078:3:8",
														"nodeType": "YulTypedName",
														"src": "7078:3:8",
														"type": ""
													}
												],
												"src": "7018:118:8"
											},
											{
												"body": {
													"nativeSrc": "7240:124:8",
													"nodeType": "YulBlock",
													"src": "7240:124:8",
													"statements": [
														{
															"nativeSrc": "7250:26:8",
															"nodeType": "YulAssignment",
															"src": "7250:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7262:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7262:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7273:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7273:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7258:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:8"
																},
																"nativeSrc": "7258:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7258:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7250:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7250:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7330:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7330:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7343:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7343:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7354:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7354:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7339:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7339:3:8"
																		},
																		"nativeSrc": "7339:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7339:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7286:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7286:43:8"
																},
																"nativeSrc": "7286:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7286:71:8"
															},
															"nativeSrc": "7286:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7286:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7142:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7212:9:8",
														"nodeType": "YulTypedName",
														"src": "7212:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7224:6:8",
														"nodeType": "YulTypedName",
														"src": "7224:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7235:4:8",
														"nodeType": "YulTypedName",
														"src": "7235:4:8",
														"type": ""
													}
												],
												"src": "7142:222:8"
											},
											{
												"body": {
													"nativeSrc": "7398:152:8",
													"nodeType": "YulBlock",
													"src": "7398:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7415:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7415:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7418:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7418:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7408:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7408:6:8"
																},
																"nativeSrc": "7408:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7408:88:8"
															},
															"nativeSrc": "7408:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7408:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7512:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7512:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7515:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7515:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7505:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:8"
																},
																"nativeSrc": "7505:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7505:15:8"
															},
															"nativeSrc": "7505:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7505:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7536:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7536:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7539:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7539:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7529:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7529:6:8"
																},
																"nativeSrc": "7529:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7529:15:8"
															},
															"nativeSrc": "7529:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7529:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7370:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7370:180:8"
											},
											{
												"body": {
													"nativeSrc": "7607:51:8",
													"nodeType": "YulBlock",
													"src": "7607:51:8",
													"statements": [
														{
															"nativeSrc": "7617:34:8",
															"nodeType": "YulAssignment",
															"src": "7617:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7642:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7642:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7645:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7645:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7638:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7638:3:8"
																},
																"nativeSrc": "7638:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7638:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7617:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "7617:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7556:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7588:5:8",
														"nodeType": "YulTypedName",
														"src": "7588:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7598:8:8",
														"nodeType": "YulTypedName",
														"src": "7598:8:8",
														"type": ""
													}
												],
												"src": "7556:102:8"
											},
											{
												"body": {
													"nativeSrc": "7737:775:8",
													"nodeType": "YulBlock",
													"src": "7737:775:8",
													"statements": [
														{
															"nativeSrc": "7747:15:8",
															"nodeType": "YulAssignment",
															"src": "7747:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "7756:6:8",
																"nodeType": "YulIdentifier",
																"src": "7756:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7747:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7747:5:8"
																}
															]
														},
														{
															"nativeSrc": "7771:14:8",
															"nodeType": "YulAssignment",
															"src": "7771:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "7780:5:8",
																"nodeType": "YulIdentifier",
																"src": "7780:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7771:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7771:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7829:677:8",
																"nodeType": "YulBlock",
																"src": "7829:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7917:22:8",
																			"nodeType": "YulBlock",
																			"src": "7917:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7919:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "7919:16:8"
																						},
																						"nativeSrc": "7919:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7919:18:8"
																					},
																					"nativeSrc": "7919:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "7919:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7895:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7895:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7905:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7905:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7910:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "7910:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7901:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7901:3:8"
																					},
																					"nativeSrc": "7901:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7901:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7892:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7892:2:8"
																			},
																			"nativeSrc": "7892:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7892:24:8"
																		},
																		"nativeSrc": "7889:50:8",
																		"nodeType": "YulIf",
																		"src": "7889:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "7984:419:8",
																			"nodeType": "YulBlock",
																			"src": "7984:419:8",
																			"statements": [
																				{
																					"nativeSrc": "8364:25:8",
																					"nodeType": "YulAssignment",
																					"src": "8364:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8377:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "8377:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8384:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "8384:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8373:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8373:3:8"
																						},
																						"nativeSrc": "8373:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8373:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8364:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "8364:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7959:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7959:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7969:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7969:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7955:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7955:3:8"
																			},
																			"nativeSrc": "7955:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7955:16:8"
																		},
																		"nativeSrc": "7952:451:8",
																		"nodeType": "YulIf",
																		"src": "7952:451:8"
																	},
																	{
																		"nativeSrc": "8416:23:8",
																		"nodeType": "YulAssignment",
																		"src": "8416:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8428:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8428:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8434:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8434:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8424:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8424:3:8"
																			},
																			"nativeSrc": "8424:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8416:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8416:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8452:44:8",
																		"nodeType": "YulAssignment",
																		"src": "8452:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8487:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8487:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8464:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "8464:22:8"
																			},
																			"nativeSrc": "8464:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8464:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8452:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "8452:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7805:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "7805:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7815:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7815:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7802:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7802:2:8"
																},
																"nativeSrc": "7802:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7802:15:8"
															},
															"nativeSrc": "7794:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7818:2:8",
																"nodeType": "YulBlock",
																"src": "7818:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7798:3:8",
																"nodeType": "YulBlock",
																"src": "7798:3:8",
																"statements": []
															},
															"src": "7794:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7664:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7692:6:8",
														"nodeType": "YulTypedName",
														"src": "7692:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7700:5:8",
														"nodeType": "YulTypedName",
														"src": "7700:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7707:8:8",
														"nodeType": "YulTypedName",
														"src": "7707:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7717:3:8",
														"nodeType": "YulTypedName",
														"src": "7717:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7725:5:8",
														"nodeType": "YulTypedName",
														"src": "7725:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7732:4:8",
														"nodeType": "YulTypedName",
														"src": "7732:4:8",
														"type": ""
													}
												],
												"src": "7664:848:8"
											},
											{
												"body": {
													"nativeSrc": "8578:1013:8",
													"nodeType": "YulBlock",
													"src": "8578:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8773:20:8",
																"nodeType": "YulBlock",
																"src": "8773:20:8",
																"statements": [
																	{
																		"nativeSrc": "8775:10:8",
																		"nodeType": "YulAssignment",
																		"src": "8775:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8784:1:8",
																			"nodeType": "YulLiteral",
																			"src": "8784:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8775:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8775:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8786:5:8",
																		"nodeType": "YulLeave",
																		"src": "8786:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8763:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8763:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8756:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8756:6:8"
																},
																"nativeSrc": "8756:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8756:16:8"
															},
															"nativeSrc": "8753:40:8",
															"nodeType": "YulIf",
															"src": "8753:40:8"
														},
														{
															"body": {
																"nativeSrc": "8818:20:8",
																"nodeType": "YulBlock",
																"src": "8818:20:8",
																"statements": [
																	{
																		"nativeSrc": "8820:10:8",
																		"nodeType": "YulAssignment",
																		"src": "8820:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8829:1:8",
																			"nodeType": "YulLiteral",
																			"src": "8829:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8820:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8820:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8831:5:8",
																		"nodeType": "YulLeave",
																		"src": "8831:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8812:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8812:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8805:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8805:6:8"
																},
																"nativeSrc": "8805:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8805:12:8"
															},
															"nativeSrc": "8802:36:8",
															"nodeType": "YulIf",
															"src": "8802:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8948:20:8",
																		"nodeType": "YulBlock",
																		"src": "8948:20:8",
																		"statements": [
																			{
																				"nativeSrc": "8950:10:8",
																				"nodeType": "YulAssignment",
																				"src": "8950:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8959:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8959:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8950:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8950:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8961:5:8",
																				"nodeType": "YulLeave",
																				"src": "8961:5:8"
																			}
																		]
																	},
																	"nativeSrc": "8941:27:8",
																	"nodeType": "YulCase",
																	"src": "8941:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8946:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8946:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8992:176:8",
																		"nodeType": "YulBlock",
																		"src": "8992:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9027:22:8",
																					"nodeType": "YulBlock",
																					"src": "9027:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9029:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9029:16:8"
																								},
																								"nativeSrc": "9029:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9029:18:8"
																							},
																							"nativeSrc": "9029:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9029:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9012:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9012:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9022:3:8",
																							"nodeType": "YulLiteral",
																							"src": "9022:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9009:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9009:2:8"
																					},
																					"nativeSrc": "9009:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9009:17:8"
																				},
																				"nativeSrc": "9006:43:8",
																				"nodeType": "YulIf",
																				"src": "9006:43:8"
																			},
																			{
																				"nativeSrc": "9062:25:8",
																				"nodeType": "YulAssignment",
																				"src": "9062:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9075:1:8",
																							"nodeType": "YulLiteral",
																							"src": "9075:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9078:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9078:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9071:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9071:3:8"
																					},
																					"nativeSrc": "9071:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9071:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9062:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9062:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9118:22:8",
																					"nodeType": "YulBlock",
																					"src": "9118:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9120:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9120:16:8"
																								},
																								"nativeSrc": "9120:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9120:18:8"
																							},
																							"nativeSrc": "9120:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9120:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9106:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "9106:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9113:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9113:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9103:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9103:2:8"
																					},
																					"nativeSrc": "9103:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9103:14:8"
																				},
																				"nativeSrc": "9100:40:8",
																				"nodeType": "YulIf",
																				"src": "9100:40:8"
																			},
																			{
																				"nativeSrc": "9153:5:8",
																				"nodeType": "YulLeave",
																				"src": "9153:5:8"
																			}
																		]
																	},
																	"nativeSrc": "8977:191:8",
																	"nodeType": "YulCase",
																	"src": "8977:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8982:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8982:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8898:4:8",
																"nodeType": "YulIdentifier",
																"src": "8898:4:8"
															},
															"nativeSrc": "8891:277:8",
															"nodeType": "YulSwitch",
															"src": "8891:277:8"
														},
														{
															"body": {
																"nativeSrc": "9300:123:8",
																"nodeType": "YulBlock",
																"src": "9300:123:8",
																"statements": [
																	{
																		"nativeSrc": "9314:28:8",
																		"nodeType": "YulAssignment",
																		"src": "9314:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9327:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9327:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9333:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "9333:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9323:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9323:3:8"
																			},
																			"nativeSrc": "9323:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9323:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9314:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9314:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9373:22:8",
																			"nodeType": "YulBlock",
																			"src": "9373:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9375:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "9375:16:8"
																						},
																						"nativeSrc": "9375:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9375:18:8"
																					},
																					"nativeSrc": "9375:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "9375:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9361:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "9361:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9368:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9368:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9358:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "9358:2:8"
																			},
																			"nativeSrc": "9358:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9358:14:8"
																		},
																		"nativeSrc": "9355:40:8",
																		"nodeType": "YulIf",
																		"src": "9355:40:8"
																	},
																	{
																		"nativeSrc": "9408:5:8",
																		"nodeType": "YulLeave",
																		"src": "9408:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9203:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9203:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9209:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9209:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9200:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9200:2:8"
																				},
																				"nativeSrc": "9200:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9200:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9217:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "9217:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9227:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9227:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9214:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9214:2:8"
																				},
																				"nativeSrc": "9214:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9214:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9196:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9196:3:8"
																		},
																		"nativeSrc": "9196:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9196:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9252:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9252:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9258:3:8",
																						"nodeType": "YulLiteral",
																						"src": "9258:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9249:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9249:2:8"
																				},
																				"nativeSrc": "9249:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9249:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9267:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "9267:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9277:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9277:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9264:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9264:2:8"
																				},
																				"nativeSrc": "9264:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9264:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9245:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9245:3:8"
																		},
																		"nativeSrc": "9245:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9245:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9180:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9180:2:8"
																},
																"nativeSrc": "9180:111:8",
																"nodeType": "YulFunctionCall",
																"src": "9180:111:8"
															},
															"nativeSrc": "9177:246:8",
															"nodeType": "YulIf",
															"src": "9177:246:8"
														},
														{
															"nativeSrc": "9433:57:8",
															"nodeType": "YulAssignment",
															"src": "9433:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9467:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9467:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9470:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9470:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9476:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9476:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9486:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9486:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9448:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "9448:18:8"
																},
																"nativeSrc": "9448:42:8",
																"nodeType": "YulFunctionCall",
																"src": "9448:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9433:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9433:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "9440:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9440:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9529:22:8",
																"nodeType": "YulBlock",
																"src": "9529:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9531:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9531:16:8"
																			},
																			"nativeSrc": "9531:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9531:18:8"
																		},
																		"nativeSrc": "9531:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9531:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9506:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9506:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9517:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9517:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9522:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9522:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9513:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9513:3:8"
																		},
																		"nativeSrc": "9513:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9503:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9503:2:8"
																},
																"nativeSrc": "9503:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9503:25:8"
															},
															"nativeSrc": "9500:51:8",
															"nodeType": "YulIf",
															"src": "9500:51:8"
														},
														{
															"nativeSrc": "9560:25:8",
															"nodeType": "YulAssignment",
															"src": "9560:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9573:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9573:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9580:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9580:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9569:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9569:3:8"
																},
																"nativeSrc": "9569:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9569:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9560:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9560:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8518:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8548:4:8",
														"nodeType": "YulTypedName",
														"src": "8548:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8554:8:8",
														"nodeType": "YulTypedName",
														"src": "8554:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8564:3:8",
														"nodeType": "YulTypedName",
														"src": "8564:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8572:5:8",
														"nodeType": "YulTypedName",
														"src": "8572:5:8",
														"type": ""
													}
												],
												"src": "8518:1073:8"
											},
											{
												"body": {
													"nativeSrc": "9640:43:8",
													"nodeType": "YulBlock",
													"src": "9640:43:8",
													"statements": [
														{
															"nativeSrc": "9650:27:8",
															"nodeType": "YulAssignment",
															"src": "9650:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9665:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9665:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9672:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9672:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9661:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9661:3:8"
																},
																"nativeSrc": "9661:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9661:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9650:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9650:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9597:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9622:5:8",
														"nodeType": "YulTypedName",
														"src": "9622:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9632:7:8",
														"nodeType": "YulTypedName",
														"src": "9632:7:8",
														"type": ""
													}
												],
												"src": "9597:86:8"
											},
											{
												"body": {
													"nativeSrc": "9753:217:8",
													"nodeType": "YulBlock",
													"src": "9753:217:8",
													"statements": [
														{
															"nativeSrc": "9763:31:8",
															"nodeType": "YulAssignment",
															"src": "9763:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9789:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9789:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9771:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9771:17:8"
																},
																"nativeSrc": "9771:23:8",
																"nodeType": "YulFunctionCall",
																"src": "9771:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9763:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9763:4:8"
																}
															]
														},
														{
															"nativeSrc": "9803:37:8",
															"nodeType": "YulAssignment",
															"src": "9803:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9831:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9831:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9815:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "9815:15:8"
																},
																"nativeSrc": "9815:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9815:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9803:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "9803:8:8"
																}
															]
														},
														{
															"nativeSrc": "9850:113:8",
															"nodeType": "YulAssignment",
															"src": "9850:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9880:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9880:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9886:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9886:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9896:66:8",
																		"nodeType": "YulLiteral",
																		"src": "9896:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9859:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "9859:20:8"
																},
																"nativeSrc": "9859:104:8",
																"nodeType": "YulFunctionCall",
																"src": "9859:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9850:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9850:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9689:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9728:4:8",
														"nodeType": "YulTypedName",
														"src": "9728:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9734:8:8",
														"nodeType": "YulTypedName",
														"src": "9734:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9747:5:8",
														"nodeType": "YulTypedName",
														"src": "9747:5:8",
														"type": ""
													}
												],
												"src": "9689:281:8"
											},
											{
												"body": {
													"nativeSrc": "10024:362:8",
													"nodeType": "YulBlock",
													"src": "10024:362:8",
													"statements": [
														{
															"nativeSrc": "10034:25:8",
															"nodeType": "YulAssignment",
															"src": "10034:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10057:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10057:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10039:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10039:17:8"
																},
																"nativeSrc": "10039:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10039:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10034:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10034:1:8"
																}
															]
														},
														{
															"nativeSrc": "10068:25:8",
															"nodeType": "YulAssignment",
															"src": "10068:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10091:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10091:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10073:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10073:17:8"
																},
																"nativeSrc": "10073:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10073:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10068:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10068:1:8"
																}
															]
														},
														{
															"nativeSrc": "10102:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10102:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10125:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10125:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10128:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10128:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10121:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10121:3:8"
																},
																"nativeSrc": "10121:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10121:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10106:11:8",
																	"nodeType": "YulTypedName",
																	"src": "10106:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10139:41:8",
															"nodeType": "YulAssignment",
															"src": "10139:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10168:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "10168:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10150:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10150:17:8"
																},
																"nativeSrc": "10150:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10150:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10139:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "10139:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10357:22:8",
																"nodeType": "YulBlock",
																"src": "10357:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10359:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10359:16:8"
																			},
																			"nativeSrc": "10359:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10359:18:8"
																		},
																		"nativeSrc": "10359:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10359:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10290:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10290:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10283:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "10283:6:8"
																				},
																				"nativeSrc": "10283:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10283:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10313:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10313:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10320:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "10320:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10329:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "10329:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10316:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "10316:3:8"
																						},
																						"nativeSrc": "10316:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10316:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10310:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10310:2:8"
																				},
																				"nativeSrc": "10310:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10310:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10263:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10263:2:8"
																		},
																		"nativeSrc": "10263:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10263:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10243:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10243:6:8"
																},
																"nativeSrc": "10243:113:8",
																"nodeType": "YulFunctionCall",
																"src": "10243:113:8"
															},
															"nativeSrc": "10240:139:8",
															"nodeType": "YulIf",
															"src": "10240:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9976:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10007:1:8",
														"nodeType": "YulTypedName",
														"src": "10007:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10010:1:8",
														"nodeType": "YulTypedName",
														"src": "10010:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10016:7:8",
														"nodeType": "YulTypedName",
														"src": "10016:7:8",
														"type": ""
													}
												],
												"src": "9976:410:8"
											},
											{
												"body": {
													"nativeSrc": "10436:147:8",
													"nodeType": "YulBlock",
													"src": "10436:147:8",
													"statements": [
														{
															"nativeSrc": "10446:25:8",
															"nodeType": "YulAssignment",
															"src": "10446:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10469:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10469:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10451:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10451:17:8"
																},
																"nativeSrc": "10451:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10451:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10446:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10446:1:8"
																}
															]
														},
														{
															"nativeSrc": "10480:25:8",
															"nodeType": "YulAssignment",
															"src": "10480:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10503:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10503:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10485:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10485:17:8"
																},
																"nativeSrc": "10485:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10485:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10480:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10480:1:8"
																}
															]
														},
														{
															"nativeSrc": "10514:16:8",
															"nodeType": "YulAssignment",
															"src": "10514:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10525:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10525:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10528:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10528:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10521:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10521:3:8"
																},
																"nativeSrc": "10521:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10521:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10514:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10514:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10554:22:8",
																"nodeType": "YulBlock",
																"src": "10554:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10556:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10556:16:8"
																			},
																			"nativeSrc": "10556:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10556:18:8"
																		},
																		"nativeSrc": "10556:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10556:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10546:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10546:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10549:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10549:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10543:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10543:2:8"
																},
																"nativeSrc": "10543:10:8",
																"nodeType": "YulFunctionCall",
																"src": "10543:10:8"
															},
															"nativeSrc": "10540:36:8",
															"nodeType": "YulIf",
															"src": "10540:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10392:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10423:1:8",
														"nodeType": "YulTypedName",
														"src": "10423:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10426:1:8",
														"nodeType": "YulTypedName",
														"src": "10426:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10432:3:8",
														"nodeType": "YulTypedName",
														"src": "10432:3:8",
														"type": ""
													}
												],
												"src": "10392:191:8"
											},
											{
												"body": {
													"nativeSrc": "10654:53:8",
													"nodeType": "YulBlock",
													"src": "10654:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10671:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10671:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10694:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10694:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10676:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "10676:17:8"
																		},
																		"nativeSrc": "10676:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10676:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10664:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10664:6:8"
																},
																"nativeSrc": "10664:37:8",
																"nodeType": "YulFunctionCall",
																"src": "10664:37:8"
															},
															"nativeSrc": "10664:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "10664:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10589:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10642:5:8",
														"nodeType": "YulTypedName",
														"src": "10642:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10649:3:8",
														"nodeType": "YulTypedName",
														"src": "10649:3:8",
														"type": ""
													}
												],
												"src": "10589:118:8"
											},
											{
												"body": {
													"nativeSrc": "10867:288:8",
													"nodeType": "YulBlock",
													"src": "10867:288:8",
													"statements": [
														{
															"nativeSrc": "10877:26:8",
															"nodeType": "YulAssignment",
															"src": "10877:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10889:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10889:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10900:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10900:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10885:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10885:3:8"
																},
																"nativeSrc": "10885:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10885:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10877:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10877:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10957:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10957:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10970:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10970:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10981:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10981:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10966:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10966:3:8"
																		},
																		"nativeSrc": "10966:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10966:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10913:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10913:43:8"
																},
																"nativeSrc": "10913:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10913:71:8"
															},
															"nativeSrc": "10913:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10913:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11038:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11038:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11051:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11051:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11062:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11062:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11047:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11047:3:8"
																		},
																		"nativeSrc": "11047:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11047:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10994:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10994:43:8"
																},
																"nativeSrc": "10994:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10994:72:8"
															},
															"nativeSrc": "10994:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10994:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11120:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11120:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11133:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11133:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11144:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11144:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11129:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11129:3:8"
																		},
																		"nativeSrc": "11129:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11129:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11076:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11076:43:8"
																},
																"nativeSrc": "11076:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11076:72:8"
															},
															"nativeSrc": "11076:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11076:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10713:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10823:9:8",
														"nodeType": "YulTypedName",
														"src": "10823:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10835:6:8",
														"nodeType": "YulTypedName",
														"src": "10835:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10843:6:8",
														"nodeType": "YulTypedName",
														"src": "10843:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10851:6:8",
														"nodeType": "YulTypedName",
														"src": "10851:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10862:4:8",
														"nodeType": "YulTypedName",
														"src": "10862:4:8",
														"type": ""
													}
												],
												"src": "10713:442:8"
											},
											{
												"body": {
													"nativeSrc": "11259:124:8",
													"nodeType": "YulBlock",
													"src": "11259:124:8",
													"statements": [
														{
															"nativeSrc": "11269:26:8",
															"nodeType": "YulAssignment",
															"src": "11269:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11281:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11281:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11292:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11292:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11277:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11277:3:8"
																},
																"nativeSrc": "11277:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11277:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11269:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11269:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11349:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11349:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11362:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11362:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11373:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11373:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11358:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11358:3:8"
																		},
																		"nativeSrc": "11358:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11358:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11305:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11305:43:8"
																},
																"nativeSrc": "11305:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11305:71:8"
															},
															"nativeSrc": "11305:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11305:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11161:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11231:9:8",
														"nodeType": "YulTypedName",
														"src": "11231:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11243:6:8",
														"nodeType": "YulTypedName",
														"src": "11243:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11254:4:8",
														"nodeType": "YulTypedName",
														"src": "11254:4:8",
														"type": ""
													}
												],
												"src": "11161:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002454380380620024548339818101604052810190620000369190620005e9565b826040518060400160405280600a81526020017f4d794e6577546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d4e544b000000000000000000000000000000000000000000000000000000008152508160039081620000b491906200089d565b508060049081620000c691906200089d565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013c575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000133919062000992565b60405180910390fd5b6200014d81620001d360201b60201c565b508060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001ca83620001a36200029660201b60201c565b600a620001b1919062000b36565b84620001be919062000b86565b6200029e60201b60201c565b50505062000c71565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6009905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000311575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000308919062000992565b60405180910390fd5b620003245f83836200032860201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200037c578060025f8282546200036f919062000bd0565b925050819055506200044d565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000408578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620003ff9392919062000c1b565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000496578060025f8282540392505081905550620004e0565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200053f919062000c56565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200057b8262000550565b9050919050565b6200058d816200056f565b811462000598575f80fd5b50565b5f81519050620005ab8162000582565b92915050565b5f819050919050565b620005c581620005b1565b8114620005d0575f80fd5b50565b5f81519050620005e381620005ba565b92915050565b5f805f606084860312156200060357620006026200054c565b5b5f62000612868287016200059b565b93505060206200062586828701620005d3565b925050604062000638868287016200059b565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620006be57607f821691505b602082108103620006d457620006d362000679565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620007387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620006fb565b620007448683620006fb565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620007856200077f6200077984620005b1565b6200075c565b620005b1565b9050919050565b5f819050919050565b620007a08362000765565b620007b8620007af826200078c565b84845462000707565b825550505050565b5f90565b620007ce620007c0565b620007db81848462000795565b505050565b5b818110156200080257620007f65f82620007c4565b600181019050620007e1565b5050565b601f82111562000851576200081b81620006da565b6200082684620006ec565b8101602085101562000836578190505b6200084e6200084585620006ec565b830182620007e0565b50505b505050565b5f82821c905092915050565b5f620008735f198460080262000856565b1980831691505092915050565b5f6200088d838362000862565b9150826002028217905092915050565b620008a88262000642565b67ffffffffffffffff811115620008c457620008c36200064c565b5b620008d08254620006a6565b620008dd82828562000806565b5f60209050601f83116001811462000913575f8415620008fe578287015190505b6200090a858262000880565b86555062000979565b601f1984166200092386620006da565b5f5b828110156200094c5784890151825560018201915060208501945060208101905062000925565b868310156200096c578489015162000968601f89168262000862565b8355505b6001600288020188555050505b505050505050565b6200098c816200056f565b82525050565b5f602082019050620009a75f83018462000981565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111562000a375780860481111562000a0f5762000a0e620009ad565b5b600185161562000a1f5780820291505b808102905062000a2f85620009da565b9450620009ef565b94509492505050565b5f8262000a51576001905062000b23565b8162000a60575f905062000b23565b816001811462000a79576002811462000a845762000aba565b600191505062000b23565b60ff84111562000a995762000a98620009ad565b5b8360020a91508482111562000ab35762000ab2620009ad565b5b5062000b23565b5060208310610133831016604e8410600b841016171562000af45782820a90508381111562000aee5762000aed620009ad565b5b62000b23565b62000b038484846001620009e6565b9250905081840481111562000b1d5762000b1c620009ad565b5b81810290505b9392505050565b5f60ff82169050919050565b5f62000b4282620005b1565b915062000b4f8362000b2a565b925062000b7e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000a40565b905092915050565b5f62000b9282620005b1565b915062000b9f83620005b1565b925082820262000baf81620005b1565b9150828204841483151762000bc95762000bc8620009ad565b5b5092915050565b5f62000bdc82620005b1565b915062000be983620005b1565b925082820190508082111562000c045762000c03620009ad565b5b92915050565b62000c1581620005b1565b82525050565b5f60608201905062000c305f83018662000981565b62000c3f602083018562000c0a565b62000c4e604083018462000c0a565b949350505050565b5f60208201905062000c6b5f83018462000c0a565b92915050565b6117d58062000c7f5f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c8063715018a6116100ab578063ac3c93cf1161006f578063ac3c93cf146102f5578063bea1dcf814610325578063dd62ed3e14610343578063ee33bc4514610373578063f2fde38b146103915761011f565b8063715018a61461026357806379cc67901461026d5780638da5cb5b1461028957806395d89b41146102a7578063a9059cbb146102c55761011f565b80632d44ff23116100f25780632d44ff23146101bf578063313ce567146101dd57806340c10f19146101fb57806342966c681461021757806370a08231146102335761011f565b806306fdde0314610123578063095ea7b31461014157806318160ddd1461017157806323b872dd1461018f575b5f80fd5b61012b6103ad565b6040516101389190611171565b60405180910390f35b61015b60048036038101906101569190611222565b61043d565b604051610168919061127a565b60405180910390f35b61017961045f565b60405161018691906112a2565b60405180910390f35b6101a960048036038101906101a491906112bb565b610468565b6040516101b6919061127a565b60405180910390f35b6101c7610496565b6040516101d491906112a2565b60405180910390f35b6101e561049c565b6040516101f29190611326565b60405180910390f35b61021560048036038101906102109190611222565b6104a4565b005b610231600480360381019061022c919061133f565b610546565b005b61024d6004803603810190610248919061136a565b61055a565b60405161025a91906112a2565b60405180910390f35b61026b61059f565b005b61028760048036038101906102829190611222565b6105b2565b005b6102916105d2565b60405161029e91906113a4565b60405180910390f35b6102af6105fa565b6040516102bc9190611171565b60405180910390f35b6102df60048036038101906102da9190611222565b61068a565b6040516102ec919061127a565b60405180910390f35b61030f600480360381019061030a91906113bd565b6107cb565b60405161031c91906112a2565b60405180910390f35b61032d6107eb565b60405161033a91906113a4565b60405180910390f35b61035d600480360381019061035891906113bd565b610810565b60405161036a91906112a2565b60405180910390f35b61037b610892565b60405161038891906112a2565b60405180910390f35b6103ab60048036038101906103a6919061136a565b610898565b005b6060600380546103bc90611428565b80601f01602080910402602001604051908101604052809291908181526020018280546103e890611428565b80156104335780601f1061040a57610100808354040283529160200191610433565b820191905f5260205f20905b81548152906001019060200180831161041657829003601f168201915b5050505050905090565b5f8061044761091c565b9050610454818585610923565b600191505092915050565b5f600254905090565b5f8061047261091c565b905061047f858285610935565b61048a8585856109c7565b60019150509392505050565b60075481565b5f6009905090565b6104ac610ab7565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461051a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610511906114a2565b60405180910390fd5b6105428261052661049c565b600a610532919061161c565b8361053d9190611666565b610b3e565b5050565b61055761055161091c565b82610bbd565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6105a7610ab7565b6105b05f610c3c565b565b6105c4826105be61091c565b83610935565b6105ce8282610bbd565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461060990611428565b80601f016020809104026020016040519081016040528092919081815260200182805461063590611428565b80156106805780601f1061065757610100808354040283529160200191610680565b820191905f5260205f20905b81548152906001019060200180831161066357829003601f168201915b5050505050905090565b5f606482600561069a9190611666565b6106a491906116d4565b6007819055505f600754836106b99190611704565b90506007546008546106cb9190611737565b6008819055505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506107243360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166007546109c7565b61072f3386846109c7565b60075460095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107b89190611737565b9250508190555060019250505092915050565b6009602052815f5260405f20602052805f5260405f205f91509150505481565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60085481565b6108a0610ab7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610910575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161090791906113a4565b60405180910390fd5b61091981610c3c565b50565b5f33905090565b6109308383836001610cff565b505050565b5f6109408484610810565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109c157818110156109b2578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109a99392919061176a565b60405180910390fd5b6109c084848484035f610cff565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a37575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a2e91906113a4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aa7575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a9e91906113a4565b60405180910390fd5b610ab2838383610ece565b505050565b610abf61091c565b73ffffffffffffffffffffffffffffffffffffffff16610add6105d2565b73ffffffffffffffffffffffffffffffffffffffff1614610b3c57610b0061091c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b3391906113a4565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bae575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ba591906113a4565b60405180910390fd5b610bb95f8383610ece565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c2d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c2491906113a4565b60405180910390fd5b610c38825f83610ece565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d6f575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d6691906113a4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ddf575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610dd691906113a4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610ec8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ebf91906112a2565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f1e578060025f828254610f129190611737565b92505081905550610fec565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610fa7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f9e9392919061176a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611033578060025f828254039250508190555061107d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110da91906112a2565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561111e578082015181840152602081019050611103565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611143826110e7565b61114d81856110f1565b935061115d818560208601611101565b61116681611129565b840191505092915050565b5f6020820190508181035f8301526111898184611139565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111be82611195565b9050919050565b6111ce816111b4565b81146111d8575f80fd5b50565b5f813590506111e9816111c5565b92915050565b5f819050919050565b611201816111ef565b811461120b575f80fd5b50565b5f8135905061121c816111f8565b92915050565b5f806040838503121561123857611237611191565b5b5f611245858286016111db565b92505060206112568582860161120e565b9150509250929050565b5f8115159050919050565b61127481611260565b82525050565b5f60208201905061128d5f83018461126b565b92915050565b61129c816111ef565b82525050565b5f6020820190506112b55f830184611293565b92915050565b5f805f606084860312156112d2576112d1611191565b5b5f6112df868287016111db565b93505060206112f0868287016111db565b92505060406113018682870161120e565b9150509250925092565b5f60ff82169050919050565b6113208161130b565b82525050565b5f6020820190506113395f830184611317565b92915050565b5f6020828403121561135457611353611191565b5b5f6113618482850161120e565b91505092915050565b5f6020828403121561137f5761137e611191565b5b5f61138c848285016111db565b91505092915050565b61139e816111b4565b82525050565b5f6020820190506113b75f830184611395565b92915050565b5f80604083850312156113d3576113d2611191565b5b5f6113e0858286016111db565b92505060206113f1858286016111db565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061143f57607f821691505b602082108103611452576114516113fb565b5b50919050565b7f4d696e74696e6720616c6c6f776564206f6e6c7920746f206f776e65720000005f82015250565b5f61148c601d836110f1565b915061149782611458565b602082019050919050565b5f6020820190508181035f8301526114b981611480565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156115425780860481111561151e5761151d6114c0565b5b600185161561152d5780820291505b808102905061153b856114ed565b9450611502565b94509492505050565b5f8261155a5760019050611615565b81611567575f9050611615565b816001811461157d5760028114611587576115b6565b6001915050611615565b60ff841115611599576115986114c0565b5b8360020a9150848211156115b0576115af6114c0565b5b50611615565b5060208310610133831016604e8410600b84101617156115eb5782820a9050838111156115e6576115e56114c0565b5b611615565b6115f884848460016114f9565b9250905081840481111561160f5761160e6114c0565b5b81810290505b9392505050565b5f611626826111ef565b91506116318361130b565b925061165e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461154b565b905092915050565b5f611670826111ef565b915061167b836111ef565b9250828202611689816111ef565b915082820484148315176116a05761169f6114c0565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6116de826111ef565b91506116e9836111ef565b9250826116f9576116f86116a7565b5b828204905092915050565b5f61170e826111ef565b9150611719836111ef565b9250828203905081811115611731576117306114c0565b5b92915050565b5f611741826111ef565b915061174c836111ef565b9250828201905080821115611764576117636114c0565b5b92915050565b5f60608201905061177d5f830186611395565b61178a6020830185611293565b6117976040830184611293565b94935050505056fea264697066735822122016432430404f21e960aefdca98201b1ff1ff83485fdebd3a3fb80604c8894fb164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2454 CODESIZE SUB DUP1 PUSH3 0x2454 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x5E9 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D794E6577546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D4E544B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x89D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x89D JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x133 SWAP2 SWAP1 PUSH3 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14D DUP2 PUSH3 0x1D3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x1CA DUP4 PUSH3 0x1A3 PUSH3 0x296 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x1B1 SWAP2 SWAP1 PUSH3 0xB36 JUMP JUMPDEST DUP5 PUSH3 0x1BE SWAP2 SWAP1 PUSH3 0xB86 JUMP JUMPDEST PUSH3 0x29E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xC71 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x9 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x311 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x308 SWAP2 SWAP1 PUSH3 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x324 PUSH0 DUP4 DUP4 PUSH3 0x328 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x37C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x36F SWAP2 SWAP1 PUSH3 0xBD0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x44D JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x408 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x496 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4E0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x53F SWAP2 SWAP1 PUSH3 0xC56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x57B DUP3 PUSH3 0x550 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x58D DUP2 PUSH3 0x56F JUMP JUMPDEST DUP2 EQ PUSH3 0x598 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x5AB DUP2 PUSH3 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5C5 DUP2 PUSH3 0x5B1 JUMP JUMPDEST DUP2 EQ PUSH3 0x5D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x5E3 DUP2 PUSH3 0x5BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x603 JUMPI PUSH3 0x602 PUSH3 0x54C JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x612 DUP7 DUP3 DUP8 ADD PUSH3 0x59B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x625 DUP7 DUP3 DUP8 ADD PUSH3 0x5D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x638 DUP7 DUP3 DUP8 ADD PUSH3 0x59B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x6BE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x6D4 JUMPI PUSH3 0x6D3 PUSH3 0x679 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x738 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x6FB JUMP JUMPDEST PUSH3 0x744 DUP7 DUP4 PUSH3 0x6FB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x785 PUSH3 0x77F PUSH3 0x779 DUP5 PUSH3 0x5B1 JUMP JUMPDEST PUSH3 0x75C JUMP JUMPDEST PUSH3 0x5B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7A0 DUP4 PUSH3 0x765 JUMP JUMPDEST PUSH3 0x7B8 PUSH3 0x7AF DUP3 PUSH3 0x78C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x707 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x7CE PUSH3 0x7C0 JUMP JUMPDEST PUSH3 0x7DB DUP2 DUP5 DUP5 PUSH3 0x795 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x802 JUMPI PUSH3 0x7F6 PUSH0 DUP3 PUSH3 0x7C4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x7E1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x851 JUMPI PUSH3 0x81B DUP2 PUSH3 0x6DA JUMP JUMPDEST PUSH3 0x826 DUP5 PUSH3 0x6EC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x836 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x84E PUSH3 0x845 DUP6 PUSH3 0x6EC JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x7E0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x873 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x856 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x88D DUP4 DUP4 PUSH3 0x862 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x8A8 DUP3 PUSH3 0x642 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8C4 JUMPI PUSH3 0x8C3 PUSH3 0x64C JUMP JUMPDEST JUMPDEST PUSH3 0x8D0 DUP3 SLOAD PUSH3 0x6A6 JUMP JUMPDEST PUSH3 0x8DD DUP3 DUP3 DUP6 PUSH3 0x806 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x913 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x8FE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x90A DUP6 DUP3 PUSH3 0x880 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x979 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x923 DUP7 PUSH3 0x6DA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x94C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x925 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x96C JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x968 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x862 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x98C DUP2 PUSH3 0x56F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x9A7 PUSH0 DUP4 ADD DUP5 PUSH3 0x981 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xA37 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xA0F JUMPI PUSH3 0xA0E PUSH3 0x9AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xA1F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xA2F DUP6 PUSH3 0x9DA JUMP JUMPDEST SWAP5 POP PUSH3 0x9EF JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0xA51 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xB23 JUMP JUMPDEST DUP2 PUSH3 0xA60 JUMPI PUSH0 SWAP1 POP PUSH3 0xB23 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xA79 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xA84 JUMPI PUSH3 0xABA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xB23 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xA99 JUMPI PUSH3 0xA98 PUSH3 0x9AD JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xAB3 JUMPI PUSH3 0xAB2 PUSH3 0x9AD JUMP JUMPDEST JUMPDEST POP PUSH3 0xB23 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xAF4 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xAEE JUMPI PUSH3 0xAED PUSH3 0x9AD JUMP JUMPDEST JUMPDEST PUSH3 0xB23 JUMP JUMPDEST PUSH3 0xB03 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x9E6 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xB1D JUMPI PUSH3 0xB1C PUSH3 0x9AD JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xB42 DUP3 PUSH3 0x5B1 JUMP JUMPDEST SWAP2 POP PUSH3 0xB4F DUP4 PUSH3 0xB2A JUMP JUMPDEST SWAP3 POP PUSH3 0xB7E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xA40 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB92 DUP3 PUSH3 0x5B1 JUMP JUMPDEST SWAP2 POP PUSH3 0xB9F DUP4 PUSH3 0x5B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xBAF DUP2 PUSH3 0x5B1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xBC9 JUMPI PUSH3 0xBC8 PUSH3 0x9AD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xBDC DUP3 PUSH3 0x5B1 JUMP JUMPDEST SWAP2 POP PUSH3 0xBE9 DUP4 PUSH3 0x5B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xC04 JUMPI PUSH3 0xC03 PUSH3 0x9AD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC15 DUP2 PUSH3 0x5B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xC30 PUSH0 DUP4 ADD DUP7 PUSH3 0x981 JUMP JUMPDEST PUSH3 0xC3F PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xC0A JUMP JUMPDEST PUSH3 0xC4E PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xC0A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC6B PUSH0 DUP4 ADD DUP5 PUSH3 0xC0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17D5 DUP1 PUSH3 0xC7F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xAC3C93CF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAC3C93CF EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xBEA1DCF8 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xEE33BC45 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x391 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C5 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x2D44FF23 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x2D44FF23 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x233 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3BC SWAP1 PUSH2 0x1428 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E8 SWAP1 PUSH2 0x1428 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x433 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x40A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x433 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x416 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x447 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP PUSH2 0x454 DUP2 DUP6 DUP6 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x472 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP PUSH2 0x47F DUP6 DUP3 DUP6 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x48A DUP6 DUP6 DUP6 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x9 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AC PUSH2 0xAB7 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x511 SWAP1 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x542 DUP3 PUSH2 0x526 PUSH2 0x49C JUMP JUMPDEST PUSH1 0xA PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP4 PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x1666 JUMP JUMPDEST PUSH2 0xB3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x557 PUSH2 0x551 PUSH2 0x91C JUMP JUMPDEST DUP3 PUSH2 0xBBD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A7 PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0x5B0 PUSH0 PUSH2 0xC3C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5C4 DUP3 PUSH2 0x5BE PUSH2 0x91C JUMP JUMPDEST DUP4 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x5CE DUP3 DUP3 PUSH2 0xBBD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x609 SWAP1 PUSH2 0x1428 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x635 SWAP1 PUSH2 0x1428 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x680 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x657 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x680 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x663 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x64 DUP3 PUSH1 0x5 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x1666 JUMP JUMPDEST PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x724 CALLER PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 SLOAD PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x72F CALLER DUP7 DUP5 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0xAB7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x910 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x919 DUP2 PUSH2 0xC3C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x930 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x940 DUP5 DUP5 PUSH2 0x810 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x9C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCFF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB2 DUP4 DUP4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xABF PUSH2 0x91C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xADD PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB3C JUMPI PUSH2 0xB00 PUSH2 0x91C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB9 PUSH0 DUP4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC2D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC38 DUP3 PUSH0 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD66 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xEC8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF1E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF12 SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFEC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFA7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1033 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x107D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10DA SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x111E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1103 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1143 DUP3 PUSH2 0x10E7 JUMP JUMPDEST PUSH2 0x114D DUP2 DUP6 PUSH2 0x10F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x115D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x1166 DUP2 PUSH2 0x1129 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1189 DUP2 DUP5 PUSH2 0x1139 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11BE DUP3 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11CE DUP2 PUSH2 0x11B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x11D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E9 DUP2 PUSH2 0x11C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1201 DUP2 PUSH2 0x11EF JUMP JUMPDEST DUP2 EQ PUSH2 0x120B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x121C DUP2 PUSH2 0x11F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1238 JUMPI PUSH2 0x1237 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1245 DUP6 DUP3 DUP7 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1256 DUP6 DUP3 DUP7 ADD PUSH2 0x120E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1274 DUP2 PUSH2 0x1260 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x128D PUSH0 DUP4 ADD DUP5 PUSH2 0x126B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x129C DUP2 PUSH2 0x11EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1293 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12D2 JUMPI PUSH2 0x12D1 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DF DUP7 DUP3 DUP8 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12F0 DUP7 DUP3 DUP8 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1301 DUP7 DUP3 DUP8 ADD PUSH2 0x120E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1320 DUP2 PUSH2 0x130B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1339 PUSH0 DUP4 ADD DUP5 PUSH2 0x1317 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1354 JUMPI PUSH2 0x1353 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1361 DUP5 DUP3 DUP6 ADD PUSH2 0x120E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137F JUMPI PUSH2 0x137E PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x138C DUP5 DUP3 DUP6 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x139E DUP2 PUSH2 0x11B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D3 JUMPI PUSH2 0x13D2 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E0 DUP6 DUP3 DUP7 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13F1 DUP6 DUP3 DUP7 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x143F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1452 JUMPI PUSH2 0x1451 PUSH2 0x13FB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E74696E6720616C6C6F776564206F6E6C7920746F206F776E6572000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x148C PUSH1 0x1D DUP4 PUSH2 0x10F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1497 DUP3 PUSH2 0x1458 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14B9 DUP2 PUSH2 0x1480 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1542 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x151E JUMPI PUSH2 0x151D PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x152D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x153B DUP6 PUSH2 0x14ED JUMP JUMPDEST SWAP5 POP PUSH2 0x1502 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x155A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1615 JUMP JUMPDEST DUP2 PUSH2 0x1567 JUMPI PUSH0 SWAP1 POP PUSH2 0x1615 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x157D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1587 JUMPI PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1615 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1599 JUMPI PUSH2 0x1598 PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x15B0 JUMPI PUSH2 0x15AF PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1615 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x15EB JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST PUSH2 0x1615 JUMP JUMPDEST PUSH2 0x15F8 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x14F9 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x160F JUMPI PUSH2 0x160E PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1626 DUP3 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1631 DUP4 PUSH2 0x130B JUMP JUMPDEST SWAP3 POP PUSH2 0x165E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x154B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1670 DUP3 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP PUSH2 0x167B DUP4 PUSH2 0x11EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1689 DUP2 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x16A0 JUMPI PUSH2 0x169F PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16DE DUP3 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP PUSH2 0x16E9 DUP4 PUSH2 0x11EF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16F9 JUMPI PUSH2 0x16F8 PUSH2 0x16A7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x170E DUP3 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1719 DUP4 PUSH2 0x11EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1731 JUMPI PUSH2 0x1730 PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1741 DUP3 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP PUSH2 0x174C DUP4 PUSH2 0x11EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x177D PUSH0 DUP4 ADD DUP7 PUSH2 0x1395 JUMP JUMPDEST PUSH2 0x178A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x1797 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1293 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NUMBER 0x24 ADDRESS BLOCKHASH 0x4F 0x21 0xE9 PUSH1 0xAE REVERT 0xCA SWAP9 KECCAK256 SHL 0x1F CALL SELFDESTRUCT DUP4 BASEFEE PUSH0 0xDE 0xBD GASPRICE EXTCODEHASH 0xB8 MOD DIV 0xC8 DUP10 0x4F 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "243:1276:7:-:0;;;483:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;605:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;648:13:7::2;633:12;;:28;;;;;;;;;;;;;;;;;;671:48;677:12;706:10;:8;;;:10;;:::i;:::-;700:2;:17;;;;:::i;:::-;690:6;:28;;;;:::i;:::-;671:5;;;:48;;:::i;:::-;483:243:::0;;;243:1276;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;920:87:7:-;976:5;999:1;992:8;;920:87;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:99::-;1926:6;1960:5;1954:12;1944:22;;1874:99;;;:::o;1979:180::-;2027:77;2024:1;2017:88;2124:4;2121:1;2114:15;2148:4;2145:1;2138:15;2165:180;2213:77;2210:1;2203:88;2310:4;2307:1;2300:15;2334:4;2331:1;2324:15;2351:320;2395:6;2432:1;2426:4;2422:12;2412:22;;2479:1;2473:4;2469:12;2500:18;2490:81;;2556:4;2548:6;2544:17;2534:27;;2490:81;2618:2;2610:6;2607:14;2587:18;2584:38;2581:84;;2637:18;;:::i;:::-;2581:84;2402:269;2351:320;;;:::o;2677:141::-;2726:4;2749:3;2741:11;;2772:3;2769:1;2762:14;2806:4;2803:1;2793:18;2785:26;;2677:141;;;:::o;2824:93::-;2861:6;2908:2;2903;2896:5;2892:14;2888:23;2878:33;;2824:93;;;:::o;2923:107::-;2967:8;3017:5;3011:4;3007:16;2986:37;;2923:107;;;;:::o;3036:393::-;3105:6;3155:1;3143:10;3139:18;3178:97;3208:66;3197:9;3178:97;:::i;:::-;3296:39;3326:8;3315:9;3296:39;:::i;:::-;3284:51;;3368:4;3364:9;3357:5;3353:21;3344:30;;3417:4;3407:8;3403:19;3396:5;3393:30;3383:40;;3112:317;;3036:393;;;;;:::o;3435:60::-;3463:3;3484:5;3477:12;;3435:60;;;:::o;3501:142::-;3551:9;3584:53;3602:34;3611:24;3629:5;3611:24;:::i;:::-;3602:34;:::i;:::-;3584:53;:::i;:::-;3571:66;;3501:142;;;:::o;3649:75::-;3692:3;3713:5;3706:12;;3649:75;;;:::o;3730:269::-;3840:39;3871:7;3840:39;:::i;:::-;3901:91;3950:41;3974:16;3950:41;:::i;:::-;3942:6;3935:4;3929:11;3901:91;:::i;:::-;3895:4;3888:105;3806:193;3730:269;;;:::o;4005:73::-;4050:3;4005:73;:::o;4084:189::-;4161:32;;:::i;:::-;4202:65;4260:6;4252;4246:4;4202:65;:::i;:::-;4137:136;4084:189;;:::o;4279:186::-;4339:120;4356:3;4349:5;4346:14;4339:120;;;4410:39;4447:1;4440:5;4410:39;:::i;:::-;4383:1;4376:5;4372:13;4363:22;;4339:120;;;4279:186;;:::o;4471:543::-;4572:2;4567:3;4564:11;4561:446;;;4606:38;4638:5;4606:38;:::i;:::-;4690:29;4708:10;4690:29;:::i;:::-;4680:8;4676:44;4873:2;4861:10;4858:18;4855:49;;;4894:8;4879:23;;4855:49;4917:80;4973:22;4991:3;4973:22;:::i;:::-;4963:8;4959:37;4946:11;4917:80;:::i;:::-;4576:431;;4561:446;4471:543;;;:::o;5020:117::-;5074:8;5124:5;5118:4;5114:16;5093:37;;5020:117;;;;:::o;5143:169::-;5187:6;5220:51;5268:1;5264:6;5256:5;5253:1;5249:13;5220:51;:::i;:::-;5216:56;5301:4;5295;5291:15;5281:25;;5194:118;5143:169;;;;:::o;5317:295::-;5393:4;5539:29;5564:3;5558:4;5539:29;:::i;:::-;5531:37;;5601:3;5598:1;5594:11;5588:4;5585:21;5577:29;;5317:295;;;;:::o;5617:1395::-;5734:37;5767:3;5734:37;:::i;:::-;5836:18;5828:6;5825:30;5822:56;;;5858:18;;:::i;:::-;5822:56;5902:38;5934:4;5928:11;5902:38;:::i;:::-;5987:67;6047:6;6039;6033:4;5987:67;:::i;:::-;6081:1;6105:4;6092:17;;6137:2;6129:6;6126:14;6154:1;6149:618;;;;6811:1;6828:6;6825:77;;;6877:9;6872:3;6868:19;6862:26;6853:35;;6825:77;6928:67;6988:6;6981:5;6928:67;:::i;:::-;6922:4;6915:81;6784:222;6119:887;;6149:618;6201:4;6197:9;6189:6;6185:22;6235:37;6267:4;6235:37;:::i;:::-;6294:1;6308:208;6322:7;6319:1;6316:14;6308:208;;;6401:9;6396:3;6392:19;6386:26;6378:6;6371:42;6452:1;6444:6;6440:14;6430:24;;6499:2;6488:9;6484:18;6471:31;;6345:4;6342:1;6338:12;6333:17;;6308:208;;;6544:6;6535:7;6532:19;6529:179;;;6602:9;6597:3;6593:19;6587:26;6645:48;6687:4;6679:6;6675:17;6664:9;6645:48;:::i;:::-;6637:6;6630:64;6552:156;6529:179;6754:1;6750;6742:6;6738:14;6734:22;6728:4;6721:36;6156:611;;;6119:887;;5709:1303;;;5617:1395;;:::o;7018:118::-;7105:24;7123:5;7105:24;:::i;:::-;7100:3;7093:37;7018:118;;:::o;7142:222::-;7235:4;7273:2;7262:9;7258:18;7250:26;;7286:71;7354:1;7343:9;7339:17;7330:6;7286:71;:::i;:::-;7142:222;;;;:::o;7370:180::-;7418:77;7415:1;7408:88;7515:4;7512:1;7505:15;7539:4;7536:1;7529:15;7556:102;7598:8;7645:5;7642:1;7638:13;7617:34;;7556:102;;;:::o;7664:848::-;7725:5;7732:4;7756:6;7747:15;;7780:5;7771:14;;7794:712;7815:1;7805:8;7802:15;7794:712;;;7910:4;7905:3;7901:14;7895:4;7892:24;7889:50;;;7919:18;;:::i;:::-;7889:50;7969:1;7959:8;7955:16;7952:451;;;8384:4;8377:5;8373:16;8364:25;;7952:451;8434:4;8428;8424:15;8416:23;;8464:32;8487:8;8464:32;:::i;:::-;8452:44;;7794:712;;;7664:848;;;;;;;:::o;8518:1073::-;8572:5;8763:8;8753:40;;8784:1;8775:10;;8786:5;;8753:40;8812:4;8802:36;;8829:1;8820:10;;8831:5;;8802:36;8898:4;8946:1;8941:27;;;;8982:1;8977:191;;;;8891:277;;8941:27;8959:1;8950:10;;8961:5;;;8977:191;9022:3;9012:8;9009:17;9006:43;;;9029:18;;:::i;:::-;9006:43;9078:8;9075:1;9071:16;9062:25;;9113:3;9106:5;9103:14;9100:40;;;9120:18;;:::i;:::-;9100:40;9153:5;;;8891:277;;9277:2;9267:8;9264:16;9258:3;9252:4;9249:13;9245:36;9227:2;9217:8;9214:16;9209:2;9203:4;9200:12;9196:35;9180:111;9177:246;;;9333:8;9327:4;9323:19;9314:28;;9368:3;9361:5;9358:14;9355:40;;;9375:18;;:::i;:::-;9355:40;9408:5;;9177:246;9448:42;9486:3;9476:8;9470:4;9467:1;9448:42;:::i;:::-;9433:57;;;;9522:4;9517:3;9513:14;9506:5;9503:25;9500:51;;;9531:18;;:::i;:::-;9500:51;9580:4;9573:5;9569:16;9560:25;;8518:1073;;;;;;:::o;9597:86::-;9632:7;9672:4;9665:5;9661:16;9650:27;;9597:86;;;:::o;9689:281::-;9747:5;9771:23;9789:4;9771:23;:::i;:::-;9763:31;;9815:25;9831:8;9815:25;:::i;:::-;9803:37;;9859:104;9896:66;9886:8;9880:4;9859:104;:::i;:::-;9850:113;;9689:281;;;;:::o;9976:410::-;10016:7;10039:20;10057:1;10039:20;:::i;:::-;10034:25;;10073:20;10091:1;10073:20;:::i;:::-;10068:25;;10128:1;10125;10121:9;10150:30;10168:11;10150:30;:::i;:::-;10139:41;;10329:1;10320:7;10316:15;10313:1;10310:22;10290:1;10283:9;10263:83;10240:139;;10359:18;;:::i;:::-;10240:139;10024:362;9976:410;;;;:::o;10392:191::-;10432:3;10451:20;10469:1;10451:20;:::i;:::-;10446:25;;10485:20;10503:1;10485:20;:::i;:::-;10480:25;;10528:1;10525;10521:9;10514:16;;10549:3;10546:1;10543:10;10540:36;;;10556:18;;:::i;:::-;10540:36;10392:191;;;;:::o;10589:118::-;10676:24;10694:5;10676:24;:::i;:::-;10671:3;10664:37;10589:118;;:::o;10713:442::-;10862:4;10900:2;10889:9;10885:18;10877:26;;10913:71;10981:1;10970:9;10966:17;10957:6;10913:71;:::i;:::-;10994:72;11062:2;11051:9;11047:18;11038:6;10994:72;:::i;:::-;11076;11144:2;11133:9;11129:18;11120:6;11076:72;:::i;:::-;10713:442;;;;;;:::o;11161:222::-;11254:4;11292:2;11281:9;11277:18;11269:26;;11305:71;11373:1;11362:9;11358:17;11349:6;11305:71;:::i;:::-;11161:222;;;;:::o;243:1276:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2339,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3327,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 3005,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2743,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2878,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": 2332,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2357,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_taxRecord_1002": {
									"entryPoint": 1995,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3132,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2503,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3790,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2064,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1085,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1370,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 1458,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 1350,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentTaxDeducted_994": {
									"entryPoint": 1174,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1074": {
									"entryPoint": 1180,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@grossTaxCollected_996": {
									"entryPoint": 2194,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1065": {
									"entryPoint": 1188,
									"id": 1065,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 941,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1490,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1439,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1530,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxCollector_992": {
									"entryPoint": 2027,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1119,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1128,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2200,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1134": {
									"entryPoint": 1674,
									"id": 1134,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5369,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5451,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4353,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5312,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 5357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae": {
									"entryPoint": 5208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11998:8",
										"nodeType": "YulBlock",
										"src": "0:11998:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:184:8",
													"nodeType": "YulBlock",
													"src": "349:184:8",
													"statements": [
														{
															"nativeSrc": "359:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:8",
																"nodeType": "YulLiteral",
																"src": "368:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:8",
																	"nodeType": "YulTypedName",
																	"src": "363:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:8",
																"nodeType": "YulBlock",
																"src": "428:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:8"
																					},
																					"nativeSrc": "449:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:8"
																							},
																							"nativeSrc": "468:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:8"
																					},
																					"nativeSrc": "462:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:8"
																			},
																			"nativeSrc": "442:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:8"
																		},
																		"nativeSrc": "442:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:8"
																},
																"nativeSrc": "386:13:8",
																"nodeType": "YulFunctionCall",
																"src": "386:13:8"
															},
															"nativeSrc": "378:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:8",
																"nodeType": "YulBlock",
																"src": "400:19:8",
																"statements": [
																	{
																		"nativeSrc": "402:15:8",
																		"nodeType": "YulAssignment",
																		"src": "402:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:8",
																					"nodeType": "YulLiteral",
																					"src": "414:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:8"
																			},
																			"nativeSrc": "407:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:8",
																"nodeType": "YulBlock",
																"src": "382:3:8",
																"statements": []
															},
															"src": "378:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:8"
																		},
																		"nativeSrc": "507:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:8",
																		"nodeType": "YulLiteral",
																		"src": "525:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:8"
																},
																"nativeSrc": "500:27:8",
																"nodeType": "YulFunctionCall",
																"src": "500:27:8"
															},
															"nativeSrc": "500:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:246:8"
											},
											{
												"body": {
													"nativeSrc": "587:54:8",
													"nodeType": "YulBlock",
													"src": "587:54:8",
													"statements": [
														{
															"nativeSrc": "597:38:8",
															"nodeType": "YulAssignment",
															"src": "597:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:8",
																				"nodeType": "YulLiteral",
																				"src": "622:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:8"
																		},
																		"nativeSrc": "611:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:8",
																				"nodeType": "YulLiteral",
																				"src": "631:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:8"
																		},
																		"nativeSrc": "627:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:8"
																},
																"nativeSrc": "607:28:8",
																"nodeType": "YulFunctionCall",
																"src": "607:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:8",
														"nodeType": "YulTypedName",
														"src": "570:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:8",
														"nodeType": "YulTypedName",
														"src": "580:6:8",
														"type": ""
													}
												],
												"src": "539:102:8"
											},
											{
												"body": {
													"nativeSrc": "739:285:8",
													"nodeType": "YulBlock",
													"src": "739:285:8",
													"statements": [
														{
															"nativeSrc": "749:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:8"
																},
																"nativeSrc": "763:39:8",
																"nodeType": "YulFunctionCall",
																"src": "763:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:8",
																	"nodeType": "YulTypedName",
																	"src": "753:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:8",
															"nodeType": "YulAssignment",
															"src": "811:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:8"
																},
																"nativeSrc": "818:71:8",
																"nodeType": "YulFunctionCall",
																"src": "818:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:8",
																				"nodeType": "YulLiteral",
																				"src": "944:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:8"
																		},
																		"nativeSrc": "933:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:8"
																},
																"nativeSrc": "898:65:8",
																"nodeType": "YulFunctionCall",
																"src": "898:65:8"
															},
															"nativeSrc": "898:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:8"
														},
														{
															"nativeSrc": "972:46:8",
															"nodeType": "YulAssignment",
															"src": "972:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:8"
																		},
																		"nativeSrc": "988:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:8"
																},
																"nativeSrc": "979:39:8",
																"nodeType": "YulFunctionCall",
																"src": "979:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:8",
														"nodeType": "YulTypedName",
														"src": "720:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:8",
														"nodeType": "YulTypedName",
														"src": "727:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:8",
														"nodeType": "YulTypedName",
														"src": "735:3:8",
														"type": ""
													}
												],
												"src": "647:377:8"
											},
											{
												"body": {
													"nativeSrc": "1148:195:8",
													"nodeType": "YulBlock",
													"src": "1148:195:8",
													"statements": [
														{
															"nativeSrc": "1158:26:8",
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nativeSrc": "1166:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:8"
																		},
																		"nativeSrc": "1201:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:8"
																		},
																		"nativeSrc": "1220:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:8"
																},
																"nativeSrc": "1194:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:8"
															},
															"nativeSrc": "1194:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:8"
														},
														{
															"nativeSrc": "1250:86:8",
															"nodeType": "YulAssignment",
															"src": "1250:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:8"
																},
																"nativeSrc": "1258:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:8",
														"nodeType": "YulTypedName",
														"src": "1120:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:8",
														"nodeType": "YulTypedName",
														"src": "1132:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:8",
														"nodeType": "YulTypedName",
														"src": "1143:4:8",
														"type": ""
													}
												],
												"src": "1030:313:8"
											},
											{
												"body": {
													"nativeSrc": "1389:35:8",
													"nodeType": "YulBlock",
													"src": "1389:35:8",
													"statements": [
														{
															"nativeSrc": "1399:19:8",
															"nodeType": "YulAssignment",
															"src": "1399:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:8"
																},
																"nativeSrc": "1409:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:8",
														"nodeType": "YulTypedName",
														"src": "1382:6:8",
														"type": ""
													}
												],
												"src": "1349:75:8"
											},
											{
												"body": {
													"nativeSrc": "1519:28:8",
													"nodeType": "YulBlock",
													"src": "1519:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:8"
																},
																"nativeSrc": "1529:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:8"
															},
															"nativeSrc": "1529:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:8"
											},
											{
												"body": {
													"nativeSrc": "1642:28:8",
													"nodeType": "YulBlock",
													"src": "1642:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:8"
																},
																"nativeSrc": "1652:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:8"
															},
															"nativeSrc": "1652:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:8"
											},
											{
												"body": {
													"nativeSrc": "1721:81:8",
													"nodeType": "YulBlock",
													"src": "1721:81:8",
													"statements": [
														{
															"nativeSrc": "1731:65:8",
															"nodeType": "YulAssignment",
															"src": "1731:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:8"
																},
																"nativeSrc": "1742:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:8",
														"nodeType": "YulTypedName",
														"src": "1703:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:8",
														"nodeType": "YulTypedName",
														"src": "1713:7:8",
														"type": ""
													}
												],
												"src": "1676:126:8"
											},
											{
												"body": {
													"nativeSrc": "1853:51:8",
													"nodeType": "YulBlock",
													"src": "1853:51:8",
													"statements": [
														{
															"nativeSrc": "1863:35:8",
															"nodeType": "YulAssignment",
															"src": "1863:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:8"
																},
																"nativeSrc": "1874:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:8",
														"nodeType": "YulTypedName",
														"src": "1835:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:8",
														"nodeType": "YulTypedName",
														"src": "1845:7:8",
														"type": ""
													}
												],
												"src": "1808:96:8"
											},
											{
												"body": {
													"nativeSrc": "1953:79:8",
													"nodeType": "YulBlock",
													"src": "1953:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:8",
																"nodeType": "YulBlock",
																"src": "2010:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:8"
																			},
																			"nativeSrc": "2012:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:8"
																		},
																		"nativeSrc": "2012:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:8"
																				},
																				"nativeSrc": "1983:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:8"
																		},
																		"nativeSrc": "1973:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:8"
																},
																"nativeSrc": "1966:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:8"
															},
															"nativeSrc": "1963:63:8",
															"nodeType": "YulIf",
															"src": "1963:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:8",
														"nodeType": "YulTypedName",
														"src": "1946:5:8",
														"type": ""
													}
												],
												"src": "1910:122:8"
											},
											{
												"body": {
													"nativeSrc": "2090:87:8",
													"nodeType": "YulBlock",
													"src": "2090:87:8",
													"statements": [
														{
															"nativeSrc": "2100:29:8",
															"nodeType": "YulAssignment",
															"src": "2100:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:8"
																},
																"nativeSrc": "2109:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:8"
																},
																"nativeSrc": "2138:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:8"
															},
															"nativeSrc": "2138:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:8",
														"nodeType": "YulTypedName",
														"src": "2068:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:8",
														"nodeType": "YulTypedName",
														"src": "2076:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:8",
														"nodeType": "YulTypedName",
														"src": "2084:5:8",
														"type": ""
													}
												],
												"src": "2038:139:8"
											},
											{
												"body": {
													"nativeSrc": "2228:32:8",
													"nodeType": "YulBlock",
													"src": "2228:32:8",
													"statements": [
														{
															"nativeSrc": "2238:16:8",
															"nodeType": "YulAssignment",
															"src": "2238:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:8",
																"nodeType": "YulIdentifier",
																"src": "2249:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:8",
														"nodeType": "YulTypedName",
														"src": "2210:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:8",
														"nodeType": "YulTypedName",
														"src": "2220:7:8",
														"type": ""
													}
												],
												"src": "2183:77:8"
											},
											{
												"body": {
													"nativeSrc": "2309:79:8",
													"nodeType": "YulBlock",
													"src": "2309:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:8",
																"nodeType": "YulBlock",
																"src": "2366:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:8"
																			},
																			"nativeSrc": "2368:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:8"
																		},
																		"nativeSrc": "2368:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:8"
																				},
																				"nativeSrc": "2339:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:8"
																		},
																		"nativeSrc": "2329:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:8"
																},
																"nativeSrc": "2322:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:8"
															},
															"nativeSrc": "2319:63:8",
															"nodeType": "YulIf",
															"src": "2319:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:8",
														"nodeType": "YulTypedName",
														"src": "2302:5:8",
														"type": ""
													}
												],
												"src": "2266:122:8"
											},
											{
												"body": {
													"nativeSrc": "2446:87:8",
													"nodeType": "YulBlock",
													"src": "2446:87:8",
													"statements": [
														{
															"nativeSrc": "2456:29:8",
															"nodeType": "YulAssignment",
															"src": "2456:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:8"
																},
																"nativeSrc": "2465:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:8"
																},
																"nativeSrc": "2494:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:8"
															},
															"nativeSrc": "2494:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:8",
														"nodeType": "YulTypedName",
														"src": "2424:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:8",
														"nodeType": "YulTypedName",
														"src": "2432:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:8",
														"nodeType": "YulTypedName",
														"src": "2440:5:8",
														"type": ""
													}
												],
												"src": "2394:139:8"
											},
											{
												"body": {
													"nativeSrc": "2622:391:8",
													"nodeType": "YulBlock",
													"src": "2622:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:8",
																"nodeType": "YulBlock",
																"src": "2668:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:8"
																			},
																			"nativeSrc": "2670:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:8"
																		},
																		"nativeSrc": "2670:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:8"
																		},
																		"nativeSrc": "2639:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:8"
																},
																"nativeSrc": "2635:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:8"
															},
															"nativeSrc": "2632:119:8",
															"nodeType": "YulIf",
															"src": "2632:119:8"
														},
														{
															"nativeSrc": "2761:117:8",
															"nodeType": "YulBlock",
															"src": "2761:117:8",
															"statements": [
																{
																	"nativeSrc": "2776:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:8"
																				},
																				"nativeSrc": "2836:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:8"
																		},
																		"nativeSrc": "2815:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:8",
															"nodeType": "YulBlock",
															"src": "2888:118:8",
															"statements": [
																{
																	"nativeSrc": "2903:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:8"
																				},
																				"nativeSrc": "2964:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:8"
																		},
																		"nativeSrc": "2943:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:8",
														"nodeType": "YulTypedName",
														"src": "2584:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:8",
														"nodeType": "YulTypedName",
														"src": "2595:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:8",
														"nodeType": "YulTypedName",
														"src": "2607:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:8",
														"nodeType": "YulTypedName",
														"src": "2615:6:8",
														"type": ""
													}
												],
												"src": "2539:474:8"
											},
											{
												"body": {
													"nativeSrc": "3061:48:8",
													"nodeType": "YulBlock",
													"src": "3061:48:8",
													"statements": [
														{
															"nativeSrc": "3071:32:8",
															"nodeType": "YulAssignment",
															"src": "3071:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:8"
																		},
																		"nativeSrc": "3089:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:8"
																},
																"nativeSrc": "3082:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:8",
														"nodeType": "YulTypedName",
														"src": "3043:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:8",
														"nodeType": "YulTypedName",
														"src": "3053:7:8",
														"type": ""
													}
												],
												"src": "3019:90:8"
											},
											{
												"body": {
													"nativeSrc": "3174:50:8",
													"nodeType": "YulBlock",
													"src": "3174:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:8"
																		},
																		"nativeSrc": "3196:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:8"
																},
																"nativeSrc": "3184:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:8"
															},
															"nativeSrc": "3184:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:8",
														"nodeType": "YulTypedName",
														"src": "3162:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:8",
														"nodeType": "YulTypedName",
														"src": "3169:3:8",
														"type": ""
													}
												],
												"src": "3115:109:8"
											},
											{
												"body": {
													"nativeSrc": "3322:118:8",
													"nodeType": "YulBlock",
													"src": "3322:118:8",
													"statements": [
														{
															"nativeSrc": "3332:26:8",
															"nodeType": "YulAssignment",
															"src": "3332:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:8"
																},
																"nativeSrc": "3340:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:8"
																		},
																		"nativeSrc": "3415:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:8"
																},
																"nativeSrc": "3368:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:8"
															},
															"nativeSrc": "3368:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:8",
														"nodeType": "YulTypedName",
														"src": "3294:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:8",
														"nodeType": "YulTypedName",
														"src": "3306:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:8",
														"nodeType": "YulTypedName",
														"src": "3317:4:8",
														"type": ""
													}
												],
												"src": "3230:210:8"
											},
											{
												"body": {
													"nativeSrc": "3511:53:8",
													"nodeType": "YulBlock",
													"src": "3511:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:8"
																		},
																		"nativeSrc": "3533:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:8"
																},
																"nativeSrc": "3521:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:8"
															},
															"nativeSrc": "3521:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:8",
														"nodeType": "YulTypedName",
														"src": "3499:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:8",
														"nodeType": "YulTypedName",
														"src": "3506:3:8",
														"type": ""
													}
												],
												"src": "3446:118:8"
											},
											{
												"body": {
													"nativeSrc": "3668:124:8",
													"nodeType": "YulBlock",
													"src": "3668:124:8",
													"statements": [
														{
															"nativeSrc": "3678:26:8",
															"nodeType": "YulAssignment",
															"src": "3678:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:8"
																},
																"nativeSrc": "3686:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:8"
																		},
																		"nativeSrc": "3767:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:8"
																},
																"nativeSrc": "3714:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:8"
															},
															"nativeSrc": "3714:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:8",
														"nodeType": "YulTypedName",
														"src": "3640:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:8",
														"nodeType": "YulTypedName",
														"src": "3652:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:8",
														"nodeType": "YulTypedName",
														"src": "3663:4:8",
														"type": ""
													}
												],
												"src": "3570:222:8"
											},
											{
												"body": {
													"nativeSrc": "3898:519:8",
													"nodeType": "YulBlock",
													"src": "3898:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:8",
																"nodeType": "YulBlock",
																"src": "3944:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:8"
																			},
																			"nativeSrc": "3946:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:8"
																		},
																		"nativeSrc": "3946:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:8"
																		},
																		"nativeSrc": "3915:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:8"
																},
																"nativeSrc": "3911:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:8"
															},
															"nativeSrc": "3908:119:8",
															"nodeType": "YulIf",
															"src": "3908:119:8"
														},
														{
															"nativeSrc": "4037:117:8",
															"nodeType": "YulBlock",
															"src": "4037:117:8",
															"statements": [
																{
																	"nativeSrc": "4052:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:8"
																				},
																				"nativeSrc": "4112:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:8"
																		},
																		"nativeSrc": "4091:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:8",
															"nodeType": "YulBlock",
															"src": "4164:118:8",
															"statements": [
																{
																	"nativeSrc": "4179:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:8"
																				},
																				"nativeSrc": "4240:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:8"
																		},
																		"nativeSrc": "4219:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:8",
															"nodeType": "YulBlock",
															"src": "4292:118:8",
															"statements": [
																{
																	"nativeSrc": "4307:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:8"
																				},
																				"nativeSrc": "4368:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:8"
																		},
																		"nativeSrc": "4347:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:8",
														"nodeType": "YulTypedName",
														"src": "3852:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:8",
														"nodeType": "YulTypedName",
														"src": "3863:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:8",
														"nodeType": "YulTypedName",
														"src": "3875:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:8",
														"nodeType": "YulTypedName",
														"src": "3883:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:8",
														"nodeType": "YulTypedName",
														"src": "3891:6:8",
														"type": ""
													}
												],
												"src": "3798:619:8"
											},
											{
												"body": {
													"nativeSrc": "4466:43:8",
													"nodeType": "YulBlock",
													"src": "4466:43:8",
													"statements": [
														{
															"nativeSrc": "4476:27:8",
															"nodeType": "YulAssignment",
															"src": "4476:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:8"
																},
																"nativeSrc": "4487:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:8",
														"nodeType": "YulTypedName",
														"src": "4448:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:8",
														"nodeType": "YulTypedName",
														"src": "4458:7:8",
														"type": ""
													}
												],
												"src": "4423:86:8"
											},
											{
												"body": {
													"nativeSrc": "4576:51:8",
													"nodeType": "YulBlock",
													"src": "4576:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:8"
																		},
																		"nativeSrc": "4598:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:8"
																},
																"nativeSrc": "4586:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:8"
															},
															"nativeSrc": "4586:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:8",
														"nodeType": "YulTypedName",
														"src": "4564:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:8",
														"nodeType": "YulTypedName",
														"src": "4571:3:8",
														"type": ""
													}
												],
												"src": "4515:112:8"
											},
											{
												"body": {
													"nativeSrc": "4727:120:8",
													"nodeType": "YulBlock",
													"src": "4727:120:8",
													"statements": [
														{
															"nativeSrc": "4737:26:8",
															"nodeType": "YulAssignment",
															"src": "4737:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:8"
																},
																"nativeSrc": "4745:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:8"
																		},
																		"nativeSrc": "4822:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:8"
																},
																"nativeSrc": "4773:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:8"
															},
															"nativeSrc": "4773:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:8",
														"nodeType": "YulTypedName",
														"src": "4699:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:8",
														"nodeType": "YulTypedName",
														"src": "4711:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:8",
														"nodeType": "YulTypedName",
														"src": "4722:4:8",
														"type": ""
													}
												],
												"src": "4633:214:8"
											},
											{
												"body": {
													"nativeSrc": "4919:263:8",
													"nodeType": "YulBlock",
													"src": "4919:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:8",
																"nodeType": "YulBlock",
																"src": "4965:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:8"
																			},
																			"nativeSrc": "4967:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:8"
																		},
																		"nativeSrc": "4967:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:8"
																		},
																		"nativeSrc": "4936:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:8"
																},
																"nativeSrc": "4932:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:8"
															},
															"nativeSrc": "4929:119:8",
															"nodeType": "YulIf",
															"src": "4929:119:8"
														},
														{
															"nativeSrc": "5058:117:8",
															"nodeType": "YulBlock",
															"src": "5058:117:8",
															"statements": [
																{
																	"nativeSrc": "5073:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:8"
																				},
																				"nativeSrc": "5133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:8"
																		},
																		"nativeSrc": "5112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4853:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:8",
														"nodeType": "YulTypedName",
														"src": "4889:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:8",
														"nodeType": "YulTypedName",
														"src": "4900:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:8",
														"nodeType": "YulTypedName",
														"src": "4912:6:8",
														"type": ""
													}
												],
												"src": "4853:329:8"
											},
											{
												"body": {
													"nativeSrc": "5254:263:8",
													"nodeType": "YulBlock",
													"src": "5254:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5300:83:8",
																"nodeType": "YulBlock",
																"src": "5300:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5302:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:8"
																			},
																			"nativeSrc": "5302:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:8"
																		},
																		"nativeSrc": "5302:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5275:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5284:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5271:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:8"
																		},
																		"nativeSrc": "5271:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5296:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5267:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:8"
																},
																"nativeSrc": "5267:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5267:32:8"
															},
															"nativeSrc": "5264:119:8",
															"nodeType": "YulIf",
															"src": "5264:119:8"
														},
														{
															"nativeSrc": "5393:117:8",
															"nodeType": "YulBlock",
															"src": "5393:117:8",
															"statements": [
																{
																	"nativeSrc": "5408:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5422:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5412:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5437:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5437:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5472:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5483:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5468:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:8"
																				},
																				"nativeSrc": "5468:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5492:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5447:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:8"
																		},
																		"nativeSrc": "5447:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5437:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5188:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5224:9:8",
														"nodeType": "YulTypedName",
														"src": "5224:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5235:7:8",
														"nodeType": "YulTypedName",
														"src": "5235:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5247:6:8",
														"nodeType": "YulTypedName",
														"src": "5247:6:8",
														"type": ""
													}
												],
												"src": "5188:329:8"
											},
											{
												"body": {
													"nativeSrc": "5588:53:8",
													"nodeType": "YulBlock",
													"src": "5588:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5605:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5628:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5610:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:8"
																		},
																		"nativeSrc": "5610:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5598:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:8"
																},
																"nativeSrc": "5598:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5598:37:8"
															},
															"nativeSrc": "5598:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5523:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5576:5:8",
														"nodeType": "YulTypedName",
														"src": "5576:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5583:3:8",
														"nodeType": "YulTypedName",
														"src": "5583:3:8",
														"type": ""
													}
												],
												"src": "5523:118:8"
											},
											{
												"body": {
													"nativeSrc": "5745:124:8",
													"nodeType": "YulBlock",
													"src": "5745:124:8",
													"statements": [
														{
															"nativeSrc": "5755:26:8",
															"nodeType": "YulAssignment",
															"src": "5755:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5767:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5778:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5763:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:8"
																},
																"nativeSrc": "5763:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5763:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5755:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5835:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5848:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5859:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5844:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:8"
																		},
																		"nativeSrc": "5844:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5791:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:8"
																},
																"nativeSrc": "5791:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5791:71:8"
															},
															"nativeSrc": "5791:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5647:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5717:9:8",
														"nodeType": "YulTypedName",
														"src": "5717:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5729:6:8",
														"nodeType": "YulTypedName",
														"src": "5729:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5740:4:8",
														"nodeType": "YulTypedName",
														"src": "5740:4:8",
														"type": ""
													}
												],
												"src": "5647:222:8"
											},
											{
												"body": {
													"nativeSrc": "5958:391:8",
													"nodeType": "YulBlock",
													"src": "5958:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6004:83:8",
																"nodeType": "YulBlock",
																"src": "6004:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6006:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6006:77:8"
																			},
																			"nativeSrc": "6006:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6006:79:8"
																		},
																		"nativeSrc": "6006:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5979:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5988:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5975:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:8"
																		},
																		"nativeSrc": "5975:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5975:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6000:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5971:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:8"
																},
																"nativeSrc": "5971:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5971:32:8"
															},
															"nativeSrc": "5968:119:8",
															"nodeType": "YulIf",
															"src": "5968:119:8"
														},
														{
															"nativeSrc": "6097:117:8",
															"nodeType": "YulBlock",
															"src": "6097:117:8",
															"statements": [
																{
																	"nativeSrc": "6112:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6112:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6126:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6126:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6116:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6116:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6141:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6141:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6176:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6187:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6172:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:8"
																				},
																				"nativeSrc": "6172:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6196:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6151:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6151:20:8"
																		},
																		"nativeSrc": "6151:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6151:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6141:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6224:118:8",
															"nodeType": "YulBlock",
															"src": "6224:118:8",
															"statements": [
																{
																	"nativeSrc": "6239:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6253:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6243:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6269:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6269:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6304:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6315:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6300:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:8"
																				},
																				"nativeSrc": "6300:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6324:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6279:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:8"
																		},
																		"nativeSrc": "6279:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6269:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5875:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5920:9:8",
														"nodeType": "YulTypedName",
														"src": "5920:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5931:7:8",
														"nodeType": "YulTypedName",
														"src": "5931:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5943:6:8",
														"nodeType": "YulTypedName",
														"src": "5943:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5951:6:8",
														"nodeType": "YulTypedName",
														"src": "5951:6:8",
														"type": ""
													}
												],
												"src": "5875:474:8"
											},
											{
												"body": {
													"nativeSrc": "6383:152:8",
													"nodeType": "YulBlock",
													"src": "6383:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6400:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6400:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6403:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6403:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6393:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:8"
																},
																"nativeSrc": "6393:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6393:88:8"
															},
															"nativeSrc": "6393:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6393:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6497:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6497:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6500:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6500:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6490:6:8"
																},
																"nativeSrc": "6490:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6490:15:8"
															},
															"nativeSrc": "6490:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6490:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6521:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6521:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6524:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6524:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6514:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:8"
																},
																"nativeSrc": "6514:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6514:15:8"
															},
															"nativeSrc": "6514:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6514:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6355:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6355:180:8"
											},
											{
												"body": {
													"nativeSrc": "6592:269:8",
													"nodeType": "YulBlock",
													"src": "6592:269:8",
													"statements": [
														{
															"nativeSrc": "6602:22:8",
															"nodeType": "YulAssignment",
															"src": "6602:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6616:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6616:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6622:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6622:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6612:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6612:3:8"
																},
																"nativeSrc": "6612:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6612:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6602:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6602:6:8"
																}
															]
														},
														{
															"nativeSrc": "6633:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6633:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6663:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6663:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6669:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6669:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6659:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:8"
																},
																"nativeSrc": "6659:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6659:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6637:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6637:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6710:51:8",
																"nodeType": "YulBlock",
																"src": "6710:51:8",
																"statements": [
																	{
																		"nativeSrc": "6724:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6724:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6738:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6738:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6746:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6746:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6734:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6734:3:8"
																			},
																			"nativeSrc": "6734:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6734:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6724:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6724:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6690:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6690:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6683:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6683:6:8"
																},
																"nativeSrc": "6683:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6683:26:8"
															},
															"nativeSrc": "6680:81:8",
															"nodeType": "YulIf",
															"src": "6680:81:8"
														},
														{
															"body": {
																"nativeSrc": "6813:42:8",
																"nodeType": "YulBlock",
																"src": "6813:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6827:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6827:16:8"
																			},
																			"nativeSrc": "6827:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6827:18:8"
																		},
																		"nativeSrc": "6827:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6827:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6777:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6777:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6800:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6808:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6808:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6797:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6797:2:8"
																		},
																		"nativeSrc": "6797:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6797:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6774:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6774:2:8"
																},
																"nativeSrc": "6774:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6774:38:8"
															},
															"nativeSrc": "6771:84:8",
															"nodeType": "YulIf",
															"src": "6771:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6541:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6576:4:8",
														"nodeType": "YulTypedName",
														"src": "6576:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6585:6:8",
														"nodeType": "YulTypedName",
														"src": "6585:6:8",
														"type": ""
													}
												],
												"src": "6541:320:8"
											},
											{
												"body": {
													"nativeSrc": "6973:73:8",
													"nodeType": "YulBlock",
													"src": "6973:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6995:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6995:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7003:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7003:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6991:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6991:3:8"
																		},
																		"nativeSrc": "6991:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6991:14:8"
																	},
																	{
																		"hexValue": "4d696e74696e6720616c6c6f776564206f6e6c7920746f206f776e6572",
																		"kind": "string",
																		"nativeSrc": "7007:31:8",
																		"nodeType": "YulLiteral",
																		"src": "7007:31:8",
																		"type": "",
																		"value": "Minting allowed only to owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6984:6:8"
																},
																"nativeSrc": "6984:55:8",
																"nodeType": "YulFunctionCall",
																"src": "6984:55:8"
															},
															"nativeSrc": "6984:55:8",
															"nodeType": "YulExpressionStatement",
															"src": "6984:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae",
												"nativeSrc": "6867:179:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6965:6:8",
														"nodeType": "YulTypedName",
														"src": "6965:6:8",
														"type": ""
													}
												],
												"src": "6867:179:8"
											},
											{
												"body": {
													"nativeSrc": "7198:220:8",
													"nodeType": "YulBlock",
													"src": "7198:220:8",
													"statements": [
														{
															"nativeSrc": "7208:74:8",
															"nodeType": "YulAssignment",
															"src": "7208:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7274:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7274:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7279:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7279:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7215:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7215:58:8"
																},
																"nativeSrc": "7215:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7215:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7208:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7208:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7380:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7380:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae",
																	"nativeSrc": "7291:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7291:88:8"
																},
																"nativeSrc": "7291:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7291:93:8"
															},
															"nativeSrc": "7291:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7291:93:8"
														},
														{
															"nativeSrc": "7393:19:8",
															"nodeType": "YulAssignment",
															"src": "7393:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7404:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7404:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7409:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7409:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7400:3:8"
																},
																"nativeSrc": "7400:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7400:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7393:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7393:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7052:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7186:3:8",
														"nodeType": "YulTypedName",
														"src": "7186:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7194:3:8",
														"nodeType": "YulTypedName",
														"src": "7194:3:8",
														"type": ""
													}
												],
												"src": "7052:366:8"
											},
											{
												"body": {
													"nativeSrc": "7595:248:8",
													"nodeType": "YulBlock",
													"src": "7595:248:8",
													"statements": [
														{
															"nativeSrc": "7605:26:8",
															"nodeType": "YulAssignment",
															"src": "7605:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7617:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7617:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7628:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7628:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7613:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7613:3:8"
																},
																"nativeSrc": "7613:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7613:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7605:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7605:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7652:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7652:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7663:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7663:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7648:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7648:3:8"
																		},
																		"nativeSrc": "7648:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7648:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7671:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7671:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7677:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7677:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7667:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7667:3:8"
																		},
																		"nativeSrc": "7667:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7667:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7641:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7641:6:8"
																},
																"nativeSrc": "7641:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7641:47:8"
															},
															"nativeSrc": "7641:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7641:47:8"
														},
														{
															"nativeSrc": "7697:139:8",
															"nodeType": "YulAssignment",
															"src": "7697:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7831:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7831:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7705:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7705:124:8"
																},
																"nativeSrc": "7705:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7705:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7697:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7697:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7424:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7575:9:8",
														"nodeType": "YulTypedName",
														"src": "7575:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7590:4:8",
														"nodeType": "YulTypedName",
														"src": "7590:4:8",
														"type": ""
													}
												],
												"src": "7424:419:8"
											},
											{
												"body": {
													"nativeSrc": "7877:152:8",
													"nodeType": "YulBlock",
													"src": "7877:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7894:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7894:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7897:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7897:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7887:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7887:6:8"
																},
																"nativeSrc": "7887:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7887:88:8"
															},
															"nativeSrc": "7887:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7887:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7991:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7991:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7994:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7994:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7984:6:8"
																},
																"nativeSrc": "7984:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7984:15:8"
															},
															"nativeSrc": "7984:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7984:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8015:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8015:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8018:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8018:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8008:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8008:6:8"
																},
																"nativeSrc": "8008:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8008:15:8"
															},
															"nativeSrc": "8008:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8008:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7849:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7849:180:8"
											},
											{
												"body": {
													"nativeSrc": "8086:51:8",
													"nodeType": "YulBlock",
													"src": "8086:51:8",
													"statements": [
														{
															"nativeSrc": "8096:34:8",
															"nodeType": "YulAssignment",
															"src": "8096:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8121:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8121:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8124:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8124:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8117:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8117:3:8"
																},
																"nativeSrc": "8117:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8117:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8096:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "8096:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "8035:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8067:5:8",
														"nodeType": "YulTypedName",
														"src": "8067:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8077:8:8",
														"nodeType": "YulTypedName",
														"src": "8077:8:8",
														"type": ""
													}
												],
												"src": "8035:102:8"
											},
											{
												"body": {
													"nativeSrc": "8216:775:8",
													"nodeType": "YulBlock",
													"src": "8216:775:8",
													"statements": [
														{
															"nativeSrc": "8226:15:8",
															"nodeType": "YulAssignment",
															"src": "8226:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "8235:6:8",
																"nodeType": "YulIdentifier",
																"src": "8235:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8226:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:8"
																}
															]
														},
														{
															"nativeSrc": "8250:14:8",
															"nodeType": "YulAssignment",
															"src": "8250:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "8259:5:8",
																"nodeType": "YulIdentifier",
																"src": "8259:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8250:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8250:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8308:677:8",
																"nodeType": "YulBlock",
																"src": "8308:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8396:22:8",
																			"nodeType": "YulBlock",
																			"src": "8396:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8398:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "8398:16:8"
																						},
																						"nativeSrc": "8398:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8398:18:8"
																					},
																					"nativeSrc": "8398:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "8398:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8374:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8374:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8384:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8384:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8389:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8389:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8380:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8380:3:8"
																					},
																					"nativeSrc": "8380:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8380:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8371:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "8371:2:8"
																			},
																			"nativeSrc": "8371:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8371:24:8"
																		},
																		"nativeSrc": "8368:50:8",
																		"nodeType": "YulIf",
																		"src": "8368:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "8463:419:8",
																			"nodeType": "YulBlock",
																			"src": "8463:419:8",
																			"statements": [
																				{
																					"nativeSrc": "8843:25:8",
																					"nodeType": "YulAssignment",
																					"src": "8843:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8856:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "8856:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8863:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "8863:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8852:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8852:3:8"
																						},
																						"nativeSrc": "8852:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8852:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8843:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "8843:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8438:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8438:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8448:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8448:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8434:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8434:3:8"
																			},
																			"nativeSrc": "8434:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8434:16:8"
																		},
																		"nativeSrc": "8431:451:8",
																		"nodeType": "YulIf",
																		"src": "8431:451:8"
																	},
																	{
																		"nativeSrc": "8895:23:8",
																		"nodeType": "YulAssignment",
																		"src": "8895:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8907:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8907:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8913:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8913:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8903:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8903:3:8"
																			},
																			"nativeSrc": "8903:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8903:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8895:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8895:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8931:44:8",
																		"nodeType": "YulAssignment",
																		"src": "8931:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8966:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8966:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8943:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "8943:22:8"
																			},
																			"nativeSrc": "8943:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8943:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8931:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "8931:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8284:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8284:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8294:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8294:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8281:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8281:2:8"
																},
																"nativeSrc": "8281:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8281:15:8"
															},
															"nativeSrc": "8273:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8297:2:8",
																"nodeType": "YulBlock",
																"src": "8297:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8277:3:8",
																"nodeType": "YulBlock",
																"src": "8277:3:8",
																"statements": []
															},
															"src": "8273:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8143:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "8171:6:8",
														"nodeType": "YulTypedName",
														"src": "8171:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "8179:5:8",
														"nodeType": "YulTypedName",
														"src": "8179:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8186:8:8",
														"nodeType": "YulTypedName",
														"src": "8186:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8196:3:8",
														"nodeType": "YulTypedName",
														"src": "8196:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8204:5:8",
														"nodeType": "YulTypedName",
														"src": "8204:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8211:4:8",
														"nodeType": "YulTypedName",
														"src": "8211:4:8",
														"type": ""
													}
												],
												"src": "8143:848:8"
											},
											{
												"body": {
													"nativeSrc": "9057:1013:8",
													"nodeType": "YulBlock",
													"src": "9057:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9252:20:8",
																"nodeType": "YulBlock",
																"src": "9252:20:8",
																"statements": [
																	{
																		"nativeSrc": "9254:10:8",
																		"nodeType": "YulAssignment",
																		"src": "9254:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9263:1:8",
																			"nodeType": "YulLiteral",
																			"src": "9263:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9254:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9254:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9265:5:8",
																		"nodeType": "YulLeave",
																		"src": "9265:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9242:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9242:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9235:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9235:6:8"
																},
																"nativeSrc": "9235:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9235:16:8"
															},
															"nativeSrc": "9232:40:8",
															"nodeType": "YulIf",
															"src": "9232:40:8"
														},
														{
															"body": {
																"nativeSrc": "9297:20:8",
																"nodeType": "YulBlock",
																"src": "9297:20:8",
																"statements": [
																	{
																		"nativeSrc": "9299:10:8",
																		"nodeType": "YulAssignment",
																		"src": "9299:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9308:1:8",
																			"nodeType": "YulLiteral",
																			"src": "9308:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9299:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9299:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9310:5:8",
																		"nodeType": "YulLeave",
																		"src": "9310:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9291:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9291:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9284:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9284:6:8"
																},
																"nativeSrc": "9284:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9284:12:8"
															},
															"nativeSrc": "9281:36:8",
															"nodeType": "YulIf",
															"src": "9281:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9427:20:8",
																		"nodeType": "YulBlock",
																		"src": "9427:20:8",
																		"statements": [
																			{
																				"nativeSrc": "9429:10:8",
																				"nodeType": "YulAssignment",
																				"src": "9429:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9438:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9438:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9429:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9429:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "9440:5:8",
																				"nodeType": "YulLeave",
																				"src": "9440:5:8"
																			}
																		]
																	},
																	"nativeSrc": "9420:27:8",
																	"nodeType": "YulCase",
																	"src": "9420:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9425:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9425:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9471:176:8",
																		"nodeType": "YulBlock",
																		"src": "9471:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9506:22:8",
																					"nodeType": "YulBlock",
																					"src": "9506:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9508:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9508:16:8"
																								},
																								"nativeSrc": "9508:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9508:18:8"
																							},
																							"nativeSrc": "9508:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9508:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9491:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9491:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9501:3:8",
																							"nodeType": "YulLiteral",
																							"src": "9501:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9488:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9488:2:8"
																					},
																					"nativeSrc": "9488:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9488:17:8"
																				},
																				"nativeSrc": "9485:43:8",
																				"nodeType": "YulIf",
																				"src": "9485:43:8"
																			},
																			{
																				"nativeSrc": "9541:25:8",
																				"nodeType": "YulAssignment",
																				"src": "9541:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9554:1:8",
																							"nodeType": "YulLiteral",
																							"src": "9554:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9557:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9557:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9550:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9550:3:8"
																					},
																					"nativeSrc": "9550:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9550:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9541:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9541:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9597:22:8",
																					"nodeType": "YulBlock",
																					"src": "9597:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9599:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9599:16:8"
																								},
																								"nativeSrc": "9599:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9599:18:8"
																							},
																							"nativeSrc": "9599:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9599:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9585:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "9585:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9592:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9592:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9582:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9582:2:8"
																					},
																					"nativeSrc": "9582:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9582:14:8"
																				},
																				"nativeSrc": "9579:40:8",
																				"nodeType": "YulIf",
																				"src": "9579:40:8"
																			},
																			{
																				"nativeSrc": "9632:5:8",
																				"nodeType": "YulLeave",
																				"src": "9632:5:8"
																			}
																		]
																	},
																	"nativeSrc": "9456:191:8",
																	"nodeType": "YulCase",
																	"src": "9456:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9461:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9461:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "9377:4:8",
																"nodeType": "YulIdentifier",
																"src": "9377:4:8"
															},
															"nativeSrc": "9370:277:8",
															"nodeType": "YulSwitch",
															"src": "9370:277:8"
														},
														{
															"body": {
																"nativeSrc": "9779:123:8",
																"nodeType": "YulBlock",
																"src": "9779:123:8",
																"statements": [
																	{
																		"nativeSrc": "9793:28:8",
																		"nodeType": "YulAssignment",
																		"src": "9793:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9806:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9806:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9812:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "9812:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9802:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9802:3:8"
																			},
																			"nativeSrc": "9802:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9802:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9793:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9793:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9852:22:8",
																			"nodeType": "YulBlock",
																			"src": "9852:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9854:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "9854:16:8"
																						},
																						"nativeSrc": "9854:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9854:18:8"
																					},
																					"nativeSrc": "9854:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "9854:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9840:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "9840:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9847:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9847:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9837:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "9837:2:8"
																			},
																			"nativeSrc": "9837:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9837:14:8"
																		},
																		"nativeSrc": "9834:40:8",
																		"nodeType": "YulIf",
																		"src": "9834:40:8"
																	},
																	{
																		"nativeSrc": "9887:5:8",
																		"nodeType": "YulLeave",
																		"src": "9887:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9682:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9682:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9688:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9688:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9679:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9679:2:8"
																				},
																				"nativeSrc": "9679:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9679:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9696:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "9696:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9706:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9706:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9693:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9693:2:8"
																				},
																				"nativeSrc": "9693:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9693:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9675:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9675:3:8"
																		},
																		"nativeSrc": "9675:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9675:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9731:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9731:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9737:3:8",
																						"nodeType": "YulLiteral",
																						"src": "9737:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9728:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9728:2:8"
																				},
																				"nativeSrc": "9728:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9728:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9746:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "9746:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9756:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9756:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9743:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9743:2:8"
																				},
																				"nativeSrc": "9743:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9743:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9724:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9724:3:8"
																		},
																		"nativeSrc": "9724:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9724:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9659:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9659:2:8"
																},
																"nativeSrc": "9659:111:8",
																"nodeType": "YulFunctionCall",
																"src": "9659:111:8"
															},
															"nativeSrc": "9656:246:8",
															"nodeType": "YulIf",
															"src": "9656:246:8"
														},
														{
															"nativeSrc": "9912:57:8",
															"nodeType": "YulAssignment",
															"src": "9912:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9946:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9946:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9949:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9949:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9955:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9955:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9965:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9965:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9927:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "9927:18:8"
																},
																"nativeSrc": "9927:42:8",
																"nodeType": "YulFunctionCall",
																"src": "9927:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9912:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9912:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "9919:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9919:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10008:22:8",
																"nodeType": "YulBlock",
																"src": "10008:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10010:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10010:16:8"
																			},
																			"nativeSrc": "10010:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10010:18:8"
																		},
																		"nativeSrc": "10010:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10010:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9985:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9985:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9996:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9996:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "10001:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10001:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9992:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9992:3:8"
																		},
																		"nativeSrc": "9992:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9992:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9982:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9982:2:8"
																},
																"nativeSrc": "9982:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9982:25:8"
															},
															"nativeSrc": "9979:51:8",
															"nodeType": "YulIf",
															"src": "9979:51:8"
														},
														{
															"nativeSrc": "10039:25:8",
															"nodeType": "YulAssignment",
															"src": "10039:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10052:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10052:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10059:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10059:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10048:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10048:3:8"
																},
																"nativeSrc": "10048:16:8",
																"nodeType": "YulFunctionCall",
																"src": "10048:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10039:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10039:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8997:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9027:4:8",
														"nodeType": "YulTypedName",
														"src": "9027:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9033:8:8",
														"nodeType": "YulTypedName",
														"src": "9033:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9043:3:8",
														"nodeType": "YulTypedName",
														"src": "9043:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9051:5:8",
														"nodeType": "YulTypedName",
														"src": "9051:5:8",
														"type": ""
													}
												],
												"src": "8997:1073:8"
											},
											{
												"body": {
													"nativeSrc": "10140:217:8",
													"nodeType": "YulBlock",
													"src": "10140:217:8",
													"statements": [
														{
															"nativeSrc": "10150:31:8",
															"nodeType": "YulAssignment",
															"src": "10150:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10176:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10176:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10158:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10158:17:8"
																},
																"nativeSrc": "10158:23:8",
																"nodeType": "YulFunctionCall",
																"src": "10158:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10150:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10150:4:8"
																}
															]
														},
														{
															"nativeSrc": "10190:37:8",
															"nodeType": "YulAssignment",
															"src": "10190:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10218:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10218:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "10202:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "10202:15:8"
																},
																"nativeSrc": "10202:25:8",
																"nodeType": "YulFunctionCall",
																"src": "10202:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10190:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "10190:8:8"
																}
															]
														},
														{
															"nativeSrc": "10237:113:8",
															"nodeType": "YulAssignment",
															"src": "10237:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10267:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10267:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10273:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10273:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10283:66:8",
																		"nodeType": "YulLiteral",
																		"src": "10283:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10246:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "10246:20:8"
																},
																"nativeSrc": "10246:104:8",
																"nodeType": "YulFunctionCall",
																"src": "10246:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10237:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10237:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "10076:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10115:4:8",
														"nodeType": "YulTypedName",
														"src": "10115:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10121:8:8",
														"nodeType": "YulTypedName",
														"src": "10121:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10134:5:8",
														"nodeType": "YulTypedName",
														"src": "10134:5:8",
														"type": ""
													}
												],
												"src": "10076:281:8"
											},
											{
												"body": {
													"nativeSrc": "10411:362:8",
													"nodeType": "YulBlock",
													"src": "10411:362:8",
													"statements": [
														{
															"nativeSrc": "10421:25:8",
															"nodeType": "YulAssignment",
															"src": "10421:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10444:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10444:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10426:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10426:17:8"
																},
																"nativeSrc": "10426:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10426:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10421:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10421:1:8"
																}
															]
														},
														{
															"nativeSrc": "10455:25:8",
															"nodeType": "YulAssignment",
															"src": "10455:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10478:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10478:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10460:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10460:17:8"
																},
																"nativeSrc": "10460:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10460:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10455:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10455:1:8"
																}
															]
														},
														{
															"nativeSrc": "10489:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10489:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10512:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10512:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10515:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10515:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10508:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10508:3:8"
																},
																"nativeSrc": "10508:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10508:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10493:11:8",
																	"nodeType": "YulTypedName",
																	"src": "10493:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10526:41:8",
															"nodeType": "YulAssignment",
															"src": "10526:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10555:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "10555:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10537:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10537:17:8"
																},
																"nativeSrc": "10537:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10537:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10526:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "10526:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10744:22:8",
																"nodeType": "YulBlock",
																"src": "10744:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10746:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10746:16:8"
																			},
																			"nativeSrc": "10746:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10746:18:8"
																		},
																		"nativeSrc": "10746:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10746:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10677:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10677:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10670:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "10670:6:8"
																				},
																				"nativeSrc": "10670:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10670:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10700:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10700:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10707:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "10707:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10716:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "10716:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10703:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "10703:3:8"
																						},
																						"nativeSrc": "10703:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10703:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10697:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10697:2:8"
																				},
																				"nativeSrc": "10697:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10697:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10650:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10650:2:8"
																		},
																		"nativeSrc": "10650:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10650:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10630:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:8"
																},
																"nativeSrc": "10630:113:8",
																"nodeType": "YulFunctionCall",
																"src": "10630:113:8"
															},
															"nativeSrc": "10627:139:8",
															"nodeType": "YulIf",
															"src": "10627:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10363:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10394:1:8",
														"nodeType": "YulTypedName",
														"src": "10394:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10397:1:8",
														"nodeType": "YulTypedName",
														"src": "10397:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10403:7:8",
														"nodeType": "YulTypedName",
														"src": "10403:7:8",
														"type": ""
													}
												],
												"src": "10363:410:8"
											},
											{
												"body": {
													"nativeSrc": "10807:152:8",
													"nodeType": "YulBlock",
													"src": "10807:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10824:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10824:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10827:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10827:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10817:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10817:6:8"
																},
																"nativeSrc": "10817:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10817:88:8"
															},
															"nativeSrc": "10817:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10817:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10921:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10921:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10924:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10924:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10914:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10914:6:8"
																},
																"nativeSrc": "10914:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10914:15:8"
															},
															"nativeSrc": "10914:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10914:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10945:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10945:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10948:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10948:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10938:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10938:6:8"
																},
																"nativeSrc": "10938:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10938:15:8"
															},
															"nativeSrc": "10938:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10938:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10779:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10779:180:8"
											},
											{
												"body": {
													"nativeSrc": "11007:143:8",
													"nodeType": "YulBlock",
													"src": "11007:143:8",
													"statements": [
														{
															"nativeSrc": "11017:25:8",
															"nodeType": "YulAssignment",
															"src": "11017:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11040:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11040:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11022:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11022:17:8"
																},
																"nativeSrc": "11022:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11022:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11017:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11017:1:8"
																}
															]
														},
														{
															"nativeSrc": "11051:25:8",
															"nodeType": "YulAssignment",
															"src": "11051:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11074:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11074:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11056:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11056:17:8"
																},
																"nativeSrc": "11056:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11056:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11051:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11051:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11098:22:8",
																"nodeType": "YulBlock",
																"src": "11098:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11100:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11100:16:8"
																			},
																			"nativeSrc": "11100:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11100:18:8"
																		},
																		"nativeSrc": "11100:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11100:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11095:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11095:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11088:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11088:6:8"
																},
																"nativeSrc": "11088:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11088:9:8"
															},
															"nativeSrc": "11085:35:8",
															"nodeType": "YulIf",
															"src": "11085:35:8"
														},
														{
															"nativeSrc": "11130:14:8",
															"nodeType": "YulAssignment",
															"src": "11130:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11139:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11139:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11142:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11142:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11135:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11135:3:8"
																},
																"nativeSrc": "11135:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11135:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11130:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11130:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10965:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10996:1:8",
														"nodeType": "YulTypedName",
														"src": "10996:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10999:1:8",
														"nodeType": "YulTypedName",
														"src": "10999:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11005:1:8",
														"nodeType": "YulTypedName",
														"src": "11005:1:8",
														"type": ""
													}
												],
												"src": "10965:185:8"
											},
											{
												"body": {
													"nativeSrc": "11201:149:8",
													"nodeType": "YulBlock",
													"src": "11201:149:8",
													"statements": [
														{
															"nativeSrc": "11211:25:8",
															"nodeType": "YulAssignment",
															"src": "11211:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11234:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11234:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11216:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11216:17:8"
																},
																"nativeSrc": "11216:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11216:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11211:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11211:1:8"
																}
															]
														},
														{
															"nativeSrc": "11245:25:8",
															"nodeType": "YulAssignment",
															"src": "11245:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11268:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11268:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11250:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11250:17:8"
																},
																"nativeSrc": "11250:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11250:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11245:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11245:1:8"
																}
															]
														},
														{
															"nativeSrc": "11279:17:8",
															"nodeType": "YulAssignment",
															"src": "11279:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11291:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11291:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11294:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11294:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11287:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11287:3:8"
																},
																"nativeSrc": "11287:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11287:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11279:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11279:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11321:22:8",
																"nodeType": "YulBlock",
																"src": "11321:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11323:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11323:16:8"
																			},
																			"nativeSrc": "11323:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11323:18:8"
																		},
																		"nativeSrc": "11323:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11323:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11312:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11312:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11318:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11318:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11309:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11309:2:8"
																},
																"nativeSrc": "11309:11:8",
																"nodeType": "YulFunctionCall",
																"src": "11309:11:8"
															},
															"nativeSrc": "11306:37:8",
															"nodeType": "YulIf",
															"src": "11306:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11156:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11187:1:8",
														"nodeType": "YulTypedName",
														"src": "11187:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11190:1:8",
														"nodeType": "YulTypedName",
														"src": "11190:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11196:4:8",
														"nodeType": "YulTypedName",
														"src": "11196:4:8",
														"type": ""
													}
												],
												"src": "11156:194:8"
											},
											{
												"body": {
													"nativeSrc": "11400:147:8",
													"nodeType": "YulBlock",
													"src": "11400:147:8",
													"statements": [
														{
															"nativeSrc": "11410:25:8",
															"nodeType": "YulAssignment",
															"src": "11410:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11433:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11433:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11415:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11415:17:8"
																},
																"nativeSrc": "11415:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11415:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11410:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11410:1:8"
																}
															]
														},
														{
															"nativeSrc": "11444:25:8",
															"nodeType": "YulAssignment",
															"src": "11444:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11467:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11467:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11449:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11449:17:8"
																},
																"nativeSrc": "11449:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11449:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11444:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11444:1:8"
																}
															]
														},
														{
															"nativeSrc": "11478:16:8",
															"nodeType": "YulAssignment",
															"src": "11478:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11489:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11489:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11492:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11492:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11485:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11485:3:8"
																},
																"nativeSrc": "11485:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11485:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11478:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11478:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11518:22:8",
																"nodeType": "YulBlock",
																"src": "11518:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11520:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11520:16:8"
																			},
																			"nativeSrc": "11520:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11520:18:8"
																		},
																		"nativeSrc": "11520:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11520:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11510:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11510:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11513:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11513:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11507:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11507:2:8"
																},
																"nativeSrc": "11507:10:8",
																"nodeType": "YulFunctionCall",
																"src": "11507:10:8"
															},
															"nativeSrc": "11504:36:8",
															"nodeType": "YulIf",
															"src": "11504:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11356:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11387:1:8",
														"nodeType": "YulTypedName",
														"src": "11387:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11390:1:8",
														"nodeType": "YulTypedName",
														"src": "11390:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11396:3:8",
														"nodeType": "YulTypedName",
														"src": "11396:3:8",
														"type": ""
													}
												],
												"src": "11356:191:8"
											},
											{
												"body": {
													"nativeSrc": "11707:288:8",
													"nodeType": "YulBlock",
													"src": "11707:288:8",
													"statements": [
														{
															"nativeSrc": "11717:26:8",
															"nodeType": "YulAssignment",
															"src": "11717:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11729:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11729:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11740:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11740:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11725:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11725:3:8"
																},
																"nativeSrc": "11725:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11725:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11717:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11717:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11797:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11797:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11810:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11810:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11821:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11821:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11806:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11806:3:8"
																		},
																		"nativeSrc": "11806:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11806:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11753:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11753:43:8"
																},
																"nativeSrc": "11753:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11753:71:8"
															},
															"nativeSrc": "11753:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11753:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11878:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11878:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11891:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11891:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11902:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11902:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11887:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11887:3:8"
																		},
																		"nativeSrc": "11887:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11887:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11834:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11834:43:8"
																},
																"nativeSrc": "11834:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11834:72:8"
															},
															"nativeSrc": "11834:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11834:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11960:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11960:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11973:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11973:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11984:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11984:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11969:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11969:3:8"
																		},
																		"nativeSrc": "11969:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11969:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11916:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11916:43:8"
																},
																"nativeSrc": "11916:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11916:72:8"
															},
															"nativeSrc": "11916:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11916:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11553:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11663:9:8",
														"nodeType": "YulTypedName",
														"src": "11663:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11675:6:8",
														"nodeType": "YulTypedName",
														"src": "11675:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11683:6:8",
														"nodeType": "YulTypedName",
														"src": "11683:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11691:6:8",
														"nodeType": "YulTypedName",
														"src": "11691:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11702:4:8",
														"nodeType": "YulTypedName",
														"src": "11702:4:8",
														"type": ""
													}
												],
												"src": "11553:442:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minting allowed only to owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xAC3C93CF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAC3C93CF EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xBEA1DCF8 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xEE33BC45 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x391 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C5 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x2D44FF23 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x2D44FF23 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x233 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3BC SWAP1 PUSH2 0x1428 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E8 SWAP1 PUSH2 0x1428 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x433 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x40A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x433 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x416 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x447 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP PUSH2 0x454 DUP2 DUP6 DUP6 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x472 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP PUSH2 0x47F DUP6 DUP3 DUP6 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x48A DUP6 DUP6 DUP6 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x9 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AC PUSH2 0xAB7 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x511 SWAP1 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x542 DUP3 PUSH2 0x526 PUSH2 0x49C JUMP JUMPDEST PUSH1 0xA PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST DUP4 PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x1666 JUMP JUMPDEST PUSH2 0xB3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x557 PUSH2 0x551 PUSH2 0x91C JUMP JUMPDEST DUP3 PUSH2 0xBBD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A7 PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0x5B0 PUSH0 PUSH2 0xC3C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5C4 DUP3 PUSH2 0x5BE PUSH2 0x91C JUMP JUMPDEST DUP4 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x5CE DUP3 DUP3 PUSH2 0xBBD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x609 SWAP1 PUSH2 0x1428 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x635 SWAP1 PUSH2 0x1428 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x680 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x657 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x680 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x663 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x64 DUP3 PUSH1 0x5 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x1666 JUMP JUMPDEST PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 SLOAD DUP4 PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x724 CALLER PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 SLOAD PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x72F CALLER DUP7 DUP5 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0xAB7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x910 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x919 DUP2 PUSH2 0xC3C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x930 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x940 DUP5 DUP5 PUSH2 0x810 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x9C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCFF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB2 DUP4 DUP4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xABF PUSH2 0x91C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xADD PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB3C JUMPI PUSH2 0xB00 PUSH2 0x91C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB9 PUSH0 DUP4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC2D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC38 DUP3 PUSH0 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD66 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xEC8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF1E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF12 SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFEC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFA7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1033 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x107D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10DA SWAP2 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x111E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1103 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1143 DUP3 PUSH2 0x10E7 JUMP JUMPDEST PUSH2 0x114D DUP2 DUP6 PUSH2 0x10F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x115D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x1166 DUP2 PUSH2 0x1129 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1189 DUP2 DUP5 PUSH2 0x1139 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11BE DUP3 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11CE DUP2 PUSH2 0x11B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x11D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E9 DUP2 PUSH2 0x11C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1201 DUP2 PUSH2 0x11EF JUMP JUMPDEST DUP2 EQ PUSH2 0x120B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x121C DUP2 PUSH2 0x11F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1238 JUMPI PUSH2 0x1237 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1245 DUP6 DUP3 DUP7 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1256 DUP6 DUP3 DUP7 ADD PUSH2 0x120E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1274 DUP2 PUSH2 0x1260 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x128D PUSH0 DUP4 ADD DUP5 PUSH2 0x126B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x129C DUP2 PUSH2 0x11EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1293 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12D2 JUMPI PUSH2 0x12D1 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DF DUP7 DUP3 DUP8 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12F0 DUP7 DUP3 DUP8 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1301 DUP7 DUP3 DUP8 ADD PUSH2 0x120E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1320 DUP2 PUSH2 0x130B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1339 PUSH0 DUP4 ADD DUP5 PUSH2 0x1317 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1354 JUMPI PUSH2 0x1353 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1361 DUP5 DUP3 DUP6 ADD PUSH2 0x120E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137F JUMPI PUSH2 0x137E PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x138C DUP5 DUP3 DUP6 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x139E DUP2 PUSH2 0x11B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D3 JUMPI PUSH2 0x13D2 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E0 DUP6 DUP3 DUP7 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13F1 DUP6 DUP3 DUP7 ADD PUSH2 0x11DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x143F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1452 JUMPI PUSH2 0x1451 PUSH2 0x13FB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E74696E6720616C6C6F776564206F6E6C7920746F206F776E6572000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x148C PUSH1 0x1D DUP4 PUSH2 0x10F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1497 DUP3 PUSH2 0x1458 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14B9 DUP2 PUSH2 0x1480 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1542 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x151E JUMPI PUSH2 0x151D PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x152D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x153B DUP6 PUSH2 0x14ED JUMP JUMPDEST SWAP5 POP PUSH2 0x1502 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x155A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1615 JUMP JUMPDEST DUP2 PUSH2 0x1567 JUMPI PUSH0 SWAP1 POP PUSH2 0x1615 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x157D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1587 JUMPI PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1615 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1599 JUMPI PUSH2 0x1598 PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x15B0 JUMPI PUSH2 0x15AF PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1615 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x15EB JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST PUSH2 0x1615 JUMP JUMPDEST PUSH2 0x15F8 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x14F9 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x160F JUMPI PUSH2 0x160E PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1626 DUP3 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1631 DUP4 PUSH2 0x130B JUMP JUMPDEST SWAP3 POP PUSH2 0x165E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x154B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1670 DUP3 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP PUSH2 0x167B DUP4 PUSH2 0x11EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1689 DUP2 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x16A0 JUMPI PUSH2 0x169F PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16DE DUP3 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP PUSH2 0x16E9 DUP4 PUSH2 0x11EF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16F9 JUMPI PUSH2 0x16F8 PUSH2 0x16A7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x170E DUP3 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP PUSH2 0x1719 DUP4 PUSH2 0x11EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1731 JUMPI PUSH2 0x1730 PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1741 DUP3 PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP PUSH2 0x174C DUP4 PUSH2 0x11EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x14C0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x177D PUSH0 DUP4 ADD DUP7 PUSH2 0x1395 JUMP JUMPDEST PUSH2 0x178A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x1797 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1293 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NUMBER 0x24 ADDRESS BLOCKHASH 0x4F 0x21 0xE9 PUSH1 0xAE REVERT 0xCA SWAP9 KECCAK256 SHL 0x1F CALL SELFDESTRUCT DUP4 BASEFEE PUSH0 0xDE 0xBD GASPRICE EXTCODEHASH 0xB8 MOD DIV 0xC8 DUP10 0x4F 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "243:1276:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;335:33:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;920:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;732:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1013:504:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;413:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;302:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;374:32:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;335:33:7:-;;;;:::o;920:87::-;976:5;999:1;992:8;;920:87;:::o;732:182::-;1531:13:0;:11;:13::i;:::-;815:10:7::1;809:16;;:2;:16;;;801:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;869:38;875:2;894:10;:8;:10::i;:::-;888:2;:17;;;;:::i;:::-;878:6;:28;;;;:::i;:::-;869:5;:38::i;:::-;732:182:::0;;:::o;618:87:4:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;1013:504:7:-;1087:4;1136:3;1129:5;1125:1;:9;;;;:::i;:::-;1124:15;;;;:::i;:::-;1103:18;:36;;;;1149:19;1179:18;;1171:5;:26;;;;:::i;:::-;1149:48;;1247:18;;1227:17;;:38;;;;:::i;:::-;1207:17;:58;;;;1275:21;1299:12;;;;;;;;;;;1275:36;;1321:55;1331:10;1343:12;;;;;;;;;;;1357:18;;1321:9;:55::i;:::-;1386:41;1396:10;1408:2;1412:14;1386:9;:41::i;:::-;1470:18;;1437:10;:25;1448:13;1437:25;;;;;;;;;;;;;;;:29;1463:2;1437:29;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;1505:4;1498:11;;;;1013:504;;;;:::o;413:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;302:27::-;;;;;;;;;;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;374:32:7:-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:180::-;6403:77;6400:1;6393:88;6500:4;6497:1;6490:15;6524:4;6521:1;6514:15;6541:320;6585:6;6622:1;6616:4;6612:12;6602:22;;6669:1;6663:4;6659:12;6690:18;6680:81;;6746:4;6738:6;6734:17;6724:27;;6680:81;6808:2;6800:6;6797:14;6777:18;6774:38;6771:84;;6827:18;;:::i;:::-;6771:84;6592:269;6541:320;;;:::o;6867:179::-;7007:31;7003:1;6995:6;6991:14;6984:55;6867:179;:::o;7052:366::-;7194:3;7215:67;7279:2;7274:3;7215:67;:::i;:::-;7208:74;;7291:93;7380:3;7291:93;:::i;:::-;7409:2;7404:3;7400:12;7393:19;;7052:366;;;:::o;7424:419::-;7590:4;7628:2;7617:9;7613:18;7605:26;;7677:9;7671:4;7667:20;7663:1;7652:9;7648:17;7641:47;7705:131;7831:4;7705:131;:::i;:::-;7697:139;;7424:419;;;:::o;7849:180::-;7897:77;7894:1;7887:88;7994:4;7991:1;7984:15;8018:4;8015:1;8008:15;8035:102;8077:8;8124:5;8121:1;8117:13;8096:34;;8035:102;;;:::o;8143:848::-;8204:5;8211:4;8235:6;8226:15;;8259:5;8250:14;;8273:712;8294:1;8284:8;8281:15;8273:712;;;8389:4;8384:3;8380:14;8374:4;8371:24;8368:50;;;8398:18;;:::i;:::-;8368:50;8448:1;8438:8;8434:16;8431:451;;;8863:4;8856:5;8852:16;8843:25;;8431:451;8913:4;8907;8903:15;8895:23;;8943:32;8966:8;8943:32;:::i;:::-;8931:44;;8273:712;;;8143:848;;;;;;;:::o;8997:1073::-;9051:5;9242:8;9232:40;;9263:1;9254:10;;9265:5;;9232:40;9291:4;9281:36;;9308:1;9299:10;;9310:5;;9281:36;9377:4;9425:1;9420:27;;;;9461:1;9456:191;;;;9370:277;;9420:27;9438:1;9429:10;;9440:5;;;9456:191;9501:3;9491:8;9488:17;9485:43;;;9508:18;;:::i;:::-;9485:43;9557:8;9554:1;9550:16;9541:25;;9592:3;9585:5;9582:14;9579:40;;;9599:18;;:::i;:::-;9579:40;9632:5;;;9370:277;;9756:2;9746:8;9743:16;9737:3;9731:4;9728:13;9724:36;9706:2;9696:8;9693:16;9688:2;9682:4;9679:12;9675:35;9659:111;9656:246;;;9812:8;9806:4;9802:19;9793:28;;9847:3;9840:5;9837:14;9834:40;;;9854:18;;:::i;:::-;9834:40;9887:5;;9656:246;9927:42;9965:3;9955:8;9949:4;9946:1;9927:42;:::i;:::-;9912:57;;;;10001:4;9996:3;9992:14;9985:5;9982:25;9979:51;;;10010:18;;:::i;:::-;9979:51;10059:4;10052:5;10048:16;10039:25;;8997:1073;;;;;;:::o;10076:281::-;10134:5;10158:23;10176:4;10158:23;:::i;:::-;10150:31;;10202:25;10218:8;10202:25;:::i;:::-;10190:37;;10246:104;10283:66;10273:8;10267:4;10246:104;:::i;:::-;10237:113;;10076:281;;;;:::o;10363:410::-;10403:7;10426:20;10444:1;10426:20;:::i;:::-;10421:25;;10460:20;10478:1;10460:20;:::i;:::-;10455:25;;10515:1;10512;10508:9;10537:30;10555:11;10537:30;:::i;:::-;10526:41;;10716:1;10707:7;10703:15;10700:1;10697:22;10677:1;10670:9;10650:83;10627:139;;10746:18;;:::i;:::-;10627:139;10411:362;10363:410;;;;:::o;10779:180::-;10827:77;10824:1;10817:88;10924:4;10921:1;10914:15;10948:4;10945:1;10938:15;10965:185;11005:1;11022:20;11040:1;11022:20;:::i;:::-;11017:25;;11056:20;11074:1;11056:20;:::i;:::-;11051:25;;11095:1;11085:35;;11100:18;;:::i;:::-;11085:35;11142:1;11139;11135:9;11130:14;;10965:185;;;;:::o;11156:194::-;11196:4;11216:20;11234:1;11216:20;:::i;:::-;11211:25;;11250:20;11268:1;11250:20;:::i;:::-;11245:25;;11294:1;11291;11287:9;11279:17;;11318:1;11312:4;11309:11;11306:37;;;11323:18;;:::i;:::-;11306:37;11156:194;;;;:::o;11356:191::-;11396:3;11415:20;11433:1;11415:20;:::i;:::-;11410:25;;11449:20;11467:1;11449:20;:::i;:::-;11444:25;;11492:1;11489;11485:9;11478:16;;11513:3;11510:1;11507:10;11504:36;;;11520:18;;:::i;:::-;11504:36;11356:191;;;;:::o;11553:442::-;11702:4;11740:2;11729:9;11725:18;11717:26;;11753:71;11821:1;11810:9;11806:17;11797:6;11753:71;:::i;:::-;11834:72;11902:2;11891:9;11887:18;11878:6;11834:72;:::i;:::-;11916;11984:2;11973:9;11969:18;11960:6;11916:72;:::i;:::-;11553:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1220200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_taxRecord(address,address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"currentTaxDeducted()": "2448",
								"decimals()": "383",
								"grossTaxCollected()": "2513",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"taxCollector()": "2552",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 605,
									"end": 617,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4D794E6577546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4D4E544B00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 648,
									"end": 661,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 633,
									"end": 645,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 633,
									"end": 645,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 671,
									"end": 719,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 677,
									"end": 689,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 706,
									"end": 716,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 706,
									"end": 714,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 706,
									"end": 714,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 706,
									"end": 714,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 706,
									"end": 716,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 706,
									"end": 716,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 706,
									"end": 716,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 706,
									"end": 716,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 706,
									"end": 716,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 700,
									"end": 702,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 700,
									"end": 717,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 700,
									"end": 717,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 700,
									"end": 717,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 700,
									"end": 717,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 700,
									"end": 717,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 700,
									"end": 717,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 700,
									"end": 717,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 690,
									"end": 696,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 690,
									"end": 718,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 690,
									"end": 718,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 690,
									"end": 718,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 690,
									"end": 718,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 690,
									"end": 718,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 690,
									"end": 718,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 690,
									"end": 718,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 671,
									"end": 676,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 671,
									"end": 676,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 671,
									"end": 676,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 671,
									"end": 719,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 671,
									"end": 719,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 671,
									"end": 719,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 671,
									"end": 719,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 671,
									"end": 719,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 920,
									"end": 1007,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 920,
									"end": 1007,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 976,
									"end": 981,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 999,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 992,
									"end": 1000,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 992,
									"end": 1000,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1007,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1007,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1926,
									"end": 1932,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1960,
									"end": 1965,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1966,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1966,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1979,
									"end": 2159,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1979,
									"end": 2159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2027,
									"end": 2104,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2024,
									"end": 2025,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2017,
									"end": 2105,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2124,
									"end": 2128,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2121,
									"end": 2122,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2114,
									"end": 2129,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2152,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2145,
									"end": 2146,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2138,
									"end": 2153,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2165,
									"end": 2345,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2165,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2213,
									"end": 2290,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2203,
									"end": 2291,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2310,
									"end": 2314,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2307,
									"end": 2308,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2338,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2331,
									"end": 2332,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2324,
									"end": 2339,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2395,
									"end": 2401,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2433,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2426,
									"end": 2430,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2422,
									"end": 2434,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2434,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2434,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2480,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2469,
									"end": 2481,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2500,
									"end": 2518,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2556,
									"end": 2560,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2548,
									"end": 2554,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2544,
									"end": 2561,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2561,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2561,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2618,
									"end": 2620,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2610,
									"end": 2616,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2607,
									"end": 2621,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2587,
									"end": 2605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2584,
									"end": 2622,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2637,
									"end": 2655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2402,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2752,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2741,
									"end": 2752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2741,
									"end": 2752,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2772,
									"end": 2775,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2769,
									"end": 2770,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2776,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2806,
									"end": 2810,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2803,
									"end": 2804,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2793,
									"end": 2811,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2785,
									"end": 2811,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2785,
									"end": 2811,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2861,
									"end": 2867,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2908,
									"end": 2910,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2903,
									"end": 2905,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2896,
									"end": 2901,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2892,
									"end": 2906,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2911,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2878,
									"end": 2911,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2878,
									"end": 2911,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2967,
									"end": 2975,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3022,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3007,
									"end": 3023,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2986,
									"end": 3023,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2986,
									"end": 3023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3111,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3155,
									"end": 3156,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3143,
									"end": 3153,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3139,
									"end": 3157,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3208,
									"end": 3274,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3206,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 3178,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 3326,
									"end": 3334,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3324,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 3296,
									"end": 3335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3335,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3335,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3368,
									"end": 3372,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3364,
									"end": 3373,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3357,
									"end": 3362,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3353,
									"end": 3374,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3374,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3374,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3417,
									"end": 3421,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3407,
									"end": 3415,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3403,
									"end": 3422,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3396,
									"end": 3401,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3393,
									"end": 3423,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3383,
									"end": 3423,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3383,
									"end": 3423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3463,
									"end": 3466,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3484,
									"end": 3489,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3477,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3477,
									"end": 3489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3551,
									"end": 3560,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3629,
									"end": 3634,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 3611,
									"end": 3635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3602,
									"end": 3636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 3584,
									"end": 3637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3637,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3637,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3692,
									"end": 3695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3713,
									"end": 3718,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3706,
									"end": 3718,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3706,
									"end": 3718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3871,
									"end": 3878,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3840,
									"end": 3879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3974,
									"end": 3990,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3950,
									"end": 3991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3942,
									"end": 3948,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3935,
									"end": 3939,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3929,
									"end": 3940,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3901,
									"end": 3992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3895,
									"end": 3899,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3888,
									"end": 3993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3806,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4050,
									"end": 4053,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4078,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 4161,
									"end": 4193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 4260,
									"end": 4266,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4252,
									"end": 4258,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4246,
									"end": 4250,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 4202,
									"end": 4267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4137,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4356,
									"end": 4359,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4349,
									"end": 4354,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4346,
									"end": 4360,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4447,
									"end": 4448,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4440,
									"end": 4445,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 4410,
									"end": 4449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4383,
									"end": 4384,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4376,
									"end": 4381,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4385,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4363,
									"end": 4385,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4363,
									"end": 4385,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4572,
									"end": 4574,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4567,
									"end": 4570,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4564,
									"end": 4575,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4638,
									"end": 4643,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4606,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4708,
									"end": 4718,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 4690,
									"end": 4719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4680,
									"end": 4688,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4676,
									"end": 4720,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 4875,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4861,
									"end": 4871,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4894,
									"end": 4902,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4879,
									"end": 4902,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4879,
									"end": 4902,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 4991,
									"end": 4994,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 4973,
									"end": 4995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4963,
									"end": 4971,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4959,
									"end": 4996,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4946,
									"end": 4957,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 4917,
									"end": 4997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 5007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 5007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5074,
									"end": 5082,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5124,
									"end": 5129,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5118,
									"end": 5122,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5114,
									"end": 5130,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5130,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5130,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5187,
									"end": 5193,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5268,
									"end": 5269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5264,
									"end": 5270,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5256,
									"end": 5261,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5253,
									"end": 5254,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5249,
									"end": 5262,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 5220,
									"end": 5271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5216,
									"end": 5272,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5301,
									"end": 5305,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5295,
									"end": 5299,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5291,
									"end": 5306,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5281,
									"end": 5306,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5281,
									"end": 5306,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5194,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5393,
									"end": 5397,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5564,
									"end": 5567,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5558,
									"end": 5562,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5539,
									"end": 5568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5531,
									"end": 5568,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5531,
									"end": 5568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5601,
									"end": 5604,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5598,
									"end": 5599,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5594,
									"end": 5605,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5588,
									"end": 5592,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5585,
									"end": 5606,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5606,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5606,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 5767,
									"end": 5770,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 5734,
									"end": 5771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5836,
									"end": 5854,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5828,
									"end": 5834,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5825,
									"end": 5855,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 5858,
									"end": 5876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 5934,
									"end": 5938,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5928,
									"end": 5939,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 5902,
									"end": 5940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6047,
									"end": 6053,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6039,
									"end": 6045,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6033,
									"end": 6037,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 5987,
									"end": 6054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6081,
									"end": 6082,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6105,
									"end": 6109,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6092,
									"end": 6109,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6092,
									"end": 6109,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6137,
									"end": 6139,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6129,
									"end": 6135,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6126,
									"end": 6140,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6154,
									"end": 6155,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6811,
									"end": 6812,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6828,
									"end": 6834,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6877,
									"end": 6886,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6872,
									"end": 6875,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6868,
									"end": 6887,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6888,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6888,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6888,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 6988,
									"end": 6994,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6981,
									"end": 6986,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 6928,
									"end": 6995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6922,
									"end": 6926,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6915,
									"end": 6996,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6784,
									"end": 7006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6201,
									"end": 6205,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6197,
									"end": 6206,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6189,
									"end": 6195,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6185,
									"end": 6207,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 6267,
									"end": 6271,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6235,
									"end": 6272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6294,
									"end": 6295,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6322,
									"end": 6329,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6319,
									"end": 6320,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6316,
									"end": 6330,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6401,
									"end": 6410,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6399,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6392,
									"end": 6411,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6386,
									"end": 6412,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6378,
									"end": 6384,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6371,
									"end": 6413,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6452,
									"end": 6453,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6444,
									"end": 6450,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6440,
									"end": 6454,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6430,
									"end": 6454,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6430,
									"end": 6454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6499,
									"end": 6501,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6488,
									"end": 6497,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6484,
									"end": 6502,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6471,
									"end": 6502,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6471,
									"end": 6502,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6345,
									"end": 6349,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6342,
									"end": 6343,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6338,
									"end": 6350,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6544,
									"end": 6550,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6535,
									"end": 6542,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6532,
									"end": 6551,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6602,
									"end": 6611,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6597,
									"end": 6600,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6593,
									"end": 6612,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6587,
									"end": 6613,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 6687,
									"end": 6691,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6679,
									"end": 6685,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6675,
									"end": 6692,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6664,
									"end": 6673,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 6645,
									"end": 6693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6637,
									"end": 6643,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6630,
									"end": 6694,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6552,
									"end": 6708,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6754,
									"end": 6755,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6750,
									"end": 6751,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6742,
									"end": 6748,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6738,
									"end": 6752,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6734,
									"end": 6756,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6728,
									"end": 6732,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6721,
									"end": 6757,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7123,
									"end": 7128,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 7105,
									"end": 7129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7100,
									"end": 7103,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7093,
									"end": 7130,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7235,
									"end": 7239,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7273,
									"end": 7275,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7262,
									"end": 7271,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7258,
									"end": 7276,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7250,
									"end": 7276,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7250,
									"end": 7276,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7354,
									"end": 7355,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7343,
									"end": 7352,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7339,
									"end": 7356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7330,
									"end": 7336,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 7286,
									"end": 7357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7550,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 7370,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7418,
									"end": 7495,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7415,
									"end": 7416,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7408,
									"end": 7496,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7515,
									"end": 7519,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 7512,
									"end": 7513,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 7505,
									"end": 7520,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7539,
									"end": 7543,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7536,
									"end": 7537,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7529,
									"end": 7544,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7556,
									"end": 7658,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 7556,
									"end": 7658,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7598,
									"end": 7606,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7645,
									"end": 7650,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7642,
									"end": 7643,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7638,
									"end": 7651,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 7617,
									"end": 7651,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7617,
									"end": 7651,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7556,
									"end": 7658,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7556,
									"end": 7658,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7556,
									"end": 7658,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7556,
									"end": 7658,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7725,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7732,
									"end": 7736,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7756,
									"end": 7762,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7747,
									"end": 7762,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7747,
									"end": 7762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7780,
									"end": 7785,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7771,
									"end": 7785,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7771,
									"end": 7785,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7815,
									"end": 7816,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7805,
									"end": 7813,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7802,
									"end": 7817,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7910,
									"end": 7914,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7905,
									"end": 7908,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7901,
									"end": 7915,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 7895,
									"end": 7899,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7892,
									"end": 7916,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7889,
									"end": 7939,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7889,
									"end": 7939,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 7889,
									"end": 7939,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7919,
									"end": 7937,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 7919,
									"end": 7937,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 7919,
									"end": 7937,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7919,
									"end": 7937,
									"name": "tag",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 7919,
									"end": 7937,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7889,
									"end": 7939,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 7889,
									"end": 7939,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7969,
									"end": 7970,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7959,
									"end": 7967,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7955,
									"end": 7971,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7952,
									"end": 8403,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7952,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7952,
									"end": 8403,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8384,
									"end": 8388,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 8377,
									"end": 8382,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8373,
									"end": 8389,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8364,
									"end": 8389,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8364,
									"end": 8389,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7952,
									"end": 8403,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7952,
									"end": 8403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8438,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 8428,
									"end": 8432,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8424,
									"end": 8439,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8416,
									"end": 8439,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8416,
									"end": 8439,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8464,
									"end": 8496,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 8487,
									"end": 8495,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8464,
									"end": 8496,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 8464,
									"end": 8496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8464,
									"end": 8496,
									"name": "tag",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 8464,
									"end": 8496,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8452,
									"end": 8496,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 8452,
									"end": 8496,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7794,
									"end": 8506,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7664,
									"end": 8512,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8572,
									"end": 8577,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8763,
									"end": 8771,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8753,
									"end": 8793,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8753,
									"end": 8793,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8784,
									"end": 8785,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8775,
									"end": 8785,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8775,
									"end": 8785,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8786,
									"end": 8791,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8786,
									"end": 8791,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8753,
									"end": 8793,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8753,
									"end": 8793,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8812,
									"end": 8816,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8802,
									"end": 8838,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8802,
									"end": 8838,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8829,
									"end": 8830,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8820,
									"end": 8830,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8820,
									"end": 8830,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8831,
									"end": 8836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8831,
									"end": 8836,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8802,
									"end": 8838,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8802,
									"end": 8838,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8898,
									"end": 8902,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8946,
									"end": 8947,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8982,
									"end": 8983,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8891,
									"end": 9168,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 8891,
									"end": 9168,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8941,
									"end": 8968,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8959,
									"end": 8960,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8950,
									"end": 8960,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8950,
									"end": 8960,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8961,
									"end": 8966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8961,
									"end": 8966,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8961,
									"end": 8966,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 8977,
									"end": 9168,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9022,
									"end": 9025,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 9012,
									"end": 9020,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9009,
									"end": 9026,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9006,
									"end": 9049,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9006,
									"end": 9049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 9006,
									"end": 9049,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9029,
									"end": 9047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 9029,
									"end": 9047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 9029,
									"end": 9047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9029,
									"end": 9047,
									"name": "tag",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 9029,
									"end": 9047,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9006,
									"end": 9049,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 9006,
									"end": 9049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9078,
									"end": 9086,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9075,
									"end": 9076,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 9071,
									"end": 9087,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 9062,
									"end": 9087,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9062,
									"end": 9087,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9113,
									"end": 9116,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9106,
									"end": 9111,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9103,
									"end": 9117,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9100,
									"end": 9140,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9100,
									"end": 9140,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 9100,
									"end": 9140,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9120,
									"end": 9138,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 9120,
									"end": 9138,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 9120,
									"end": 9138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9120,
									"end": 9138,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 9120,
									"end": 9138,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9100,
									"end": 9140,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 9100,
									"end": 9140,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9153,
									"end": 9158,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9153,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 9153,
									"end": 9158,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8891,
									"end": 9168,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 8891,
									"end": 9168,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8891,
									"end": 9168,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9277,
									"end": 9279,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9267,
									"end": 9275,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9264,
									"end": 9280,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 9258,
									"end": 9261,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 9252,
									"end": 9256,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9249,
									"end": 9262,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 9245,
									"end": 9281,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9227,
									"end": 9229,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 9217,
									"end": 9225,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9214,
									"end": 9230,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 9209,
									"end": 9211,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 9203,
									"end": 9207,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9200,
									"end": 9212,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 9196,
									"end": 9231,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9180,
									"end": 9291,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 9177,
									"end": 9423,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9177,
									"end": 9423,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 9177,
									"end": 9423,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9333,
									"end": 9341,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9327,
									"end": 9331,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9323,
									"end": 9342,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 9314,
									"end": 9342,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9314,
									"end": 9342,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9368,
									"end": 9371,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9361,
									"end": 9366,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9358,
									"end": 9372,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9355,
									"end": 9395,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9355,
									"end": 9395,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9355,
									"end": 9395,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9375,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 9375,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 9375,
									"end": 9393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9375,
									"end": 9393,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 9375,
									"end": 9393,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9355,
									"end": 9395,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9355,
									"end": 9395,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9408,
									"end": 9413,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 9408,
									"end": 9413,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9177,
									"end": 9423,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 9177,
									"end": 9423,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9448,
									"end": 9490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 9486,
									"end": 9489,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9476,
									"end": 9484,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9470,
									"end": 9474,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9467,
									"end": 9468,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 9448,
									"end": 9490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 9448,
									"end": 9490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9448,
									"end": 9490,
									"name": "tag",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 9448,
									"end": 9490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9433,
									"end": 9490,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9433,
									"end": 9490,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9433,
									"end": 9490,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9433,
									"end": 9490,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9522,
									"end": 9526,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9517,
									"end": 9520,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9513,
									"end": 9527,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 9506,
									"end": 9511,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9503,
									"end": 9528,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9500,
									"end": 9551,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9500,
									"end": 9551,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 9500,
									"end": 9551,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9531,
									"end": 9549,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 9531,
									"end": 9549,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 9531,
									"end": 9549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9531,
									"end": 9549,
									"name": "tag",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 9531,
									"end": 9549,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9500,
									"end": 9551,
									"name": "tag",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 9500,
									"end": 9551,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9580,
									"end": 9584,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9573,
									"end": 9578,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9569,
									"end": 9585,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 9560,
									"end": 9585,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9560,
									"end": 9585,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8518,
									"end": 9591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9597,
									"end": 9683,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 9597,
									"end": 9683,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9632,
									"end": 9639,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9672,
									"end": 9676,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 9665,
									"end": 9670,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9661,
									"end": 9677,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9650,
									"end": 9677,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9650,
									"end": 9677,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9597,
									"end": 9683,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9597,
									"end": 9683,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9597,
									"end": 9683,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9597,
									"end": 9683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9747,
									"end": 9752,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9771,
									"end": 9794,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 9789,
									"end": 9793,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9771,
									"end": 9794,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 9771,
									"end": 9794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9771,
									"end": 9794,
									"name": "tag",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 9771,
									"end": 9794,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9763,
									"end": 9794,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9763,
									"end": 9794,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9815,
									"end": 9840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9831,
									"end": 9839,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9815,
									"end": 9840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 9815,
									"end": 9840,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9815,
									"end": 9840,
									"name": "tag",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9815,
									"end": 9840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9840,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9803,
									"end": 9840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9859,
									"end": 9963,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 9896,
									"end": 9962,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9886,
									"end": 9894,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9880,
									"end": 9884,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9859,
									"end": 9963,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 9859,
									"end": 9963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9859,
									"end": 9963,
									"name": "tag",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 9859,
									"end": 9963,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9850,
									"end": 9963,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9850,
									"end": 9963,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9689,
									"end": 9970,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10016,
									"end": 10023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10039,
									"end": 10059,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 10057,
									"end": 10058,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10039,
									"end": 10059,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 10039,
									"end": 10059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10039,
									"end": 10059,
									"name": "tag",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 10039,
									"end": 10059,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10034,
									"end": 10059,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10034,
									"end": 10059,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10073,
									"end": 10093,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 10091,
									"end": 10092,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10073,
									"end": 10093,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 10073,
									"end": 10093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10073,
									"end": 10093,
									"name": "tag",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 10073,
									"end": 10093,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10068,
									"end": 10093,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10068,
									"end": 10093,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10128,
									"end": 10129,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10125,
									"end": 10126,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10121,
									"end": 10130,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 10150,
									"end": 10180,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 10168,
									"end": 10179,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10150,
									"end": 10180,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 10150,
									"end": 10180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10150,
									"end": 10180,
									"name": "tag",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 10150,
									"end": 10180,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10139,
									"end": 10180,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10139,
									"end": 10180,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10329,
									"end": 10330,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10320,
									"end": 10327,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10316,
									"end": 10331,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 10313,
									"end": 10314,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10310,
									"end": 10332,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 10290,
									"end": 10291,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10283,
									"end": 10292,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 10263,
									"end": 10346,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 10240,
									"end": 10379,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 10240,
									"end": 10379,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10359,
									"end": 10377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 10359,
									"end": 10377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 10359,
									"end": 10377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10359,
									"end": 10377,
									"name": "tag",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 10359,
									"end": 10377,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10240,
									"end": 10379,
									"name": "tag",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 10240,
									"end": 10379,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10024,
									"end": 10386,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9976,
									"end": 10386,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10432,
									"end": 10435,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10451,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 10469,
									"end": 10470,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10451,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 10451,
									"end": 10471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10451,
									"end": 10471,
									"name": "tag",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 10451,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10446,
									"end": 10471,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10446,
									"end": 10471,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10485,
									"end": 10505,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 10503,
									"end": 10504,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10485,
									"end": 10505,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 10485,
									"end": 10505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10485,
									"end": 10505,
									"name": "tag",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 10485,
									"end": 10505,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10480,
									"end": 10505,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10480,
									"end": 10505,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10528,
									"end": 10529,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10525,
									"end": 10526,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10521,
									"end": 10530,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10514,
									"end": 10530,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10514,
									"end": 10530,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10549,
									"end": 10552,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 10546,
									"end": 10547,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10543,
									"end": 10553,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 10540,
									"end": 10576,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 10540,
									"end": 10576,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 10540,
									"end": 10576,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10556,
									"end": 10574,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 10556,
									"end": 10574,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 10556,
									"end": 10574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10556,
									"end": 10574,
									"name": "tag",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 10556,
									"end": 10574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10540,
									"end": 10576,
									"name": "tag",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 10540,
									"end": 10576,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10392,
									"end": 10583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10589,
									"end": 10707,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 10589,
									"end": 10707,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10676,
									"end": 10700,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "213"
								},
								{
									"begin": 10694,
									"end": 10699,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10676,
									"end": 10700,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 10676,
									"end": 10700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10676,
									"end": 10700,
									"name": "tag",
									"source": 8,
									"value": "213"
								},
								{
									"begin": 10676,
									"end": 10700,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10671,
									"end": 10674,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10664,
									"end": 10701,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10589,
									"end": 10707,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10589,
									"end": 10707,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10589,
									"end": 10707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10862,
									"end": 10866,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10900,
									"end": 10902,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 10889,
									"end": 10898,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10885,
									"end": 10903,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10877,
									"end": 10903,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10877,
									"end": 10903,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10913,
									"end": 10984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 10981,
									"end": 10982,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10970,
									"end": 10979,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10966,
									"end": 10983,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10957,
									"end": 10963,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 10913,
									"end": 10984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 10913,
									"end": 10984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10913,
									"end": 10984,
									"name": "tag",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 10913,
									"end": 10984,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10994,
									"end": 11066,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 11062,
									"end": 11064,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11051,
									"end": 11060,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11047,
									"end": 11065,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11038,
									"end": 11044,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 10994,
									"end": 11066,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 10994,
									"end": 11066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10994,
									"end": 11066,
									"name": "tag",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 10994,
									"end": 11066,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11076,
									"end": 11148,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 11144,
									"end": 11146,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 11133,
									"end": 11142,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11129,
									"end": 11147,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11120,
									"end": 11126,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11076,
									"end": 11148,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 11076,
									"end": 11148,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11076,
									"end": 11148,
									"name": "tag",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 11076,
									"end": 11148,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10713,
									"end": 11155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11254,
									"end": 11258,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11292,
									"end": 11294,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11281,
									"end": 11290,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11277,
									"end": 11295,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11269,
									"end": 11295,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11269,
									"end": 11295,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11305,
									"end": 11376,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "219"
								},
								{
									"begin": 11373,
									"end": 11374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11362,
									"end": 11371,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11358,
									"end": 11375,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11349,
									"end": 11355,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11305,
									"end": 11376,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 11305,
									"end": 11376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11305,
									"end": 11376,
									"name": "tag",
									"source": 8,
									"value": "219"
								},
								{
									"begin": 11305,
									"end": 11376,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016432430404f21e960aefdca98201b1ff1ff83485fdebd3a3fb80604c8894fb164736f6c63430008160033",
									".code": [
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "AC3C93CF"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "AC3C93CF"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "BEA1DCF8"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "EE33BC45"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "2D44FF23"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "2D44FF23"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 335,
											"end": 368,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 335,
											"end": 368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 335,
											"end": 368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 920,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 920,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 732,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 732,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1013,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1013,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1013,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 413,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 413,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 413,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 302,
											"end": 329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 302,
											"end": 329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 374,
											"end": 406,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 374,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 335,
											"end": 368,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 976,
											"end": 981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1000,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 992,
											"end": 1000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 815,
											"end": 825,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 809,
											"end": 825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 809,
											"end": 825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 809,
											"end": 811,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 809,
											"end": 825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 809,
											"end": 825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 809,
											"end": 825,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 801,
											"end": 859,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 869,
											"end": 907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 875,
											"end": 877,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 894,
											"end": 904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 894,
											"end": 902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 894,
											"end": 904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 894,
											"end": 904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 888,
											"end": 890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 888,
											"end": 905,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 878,
											"end": 884,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 878,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 878,
											"end": 906,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 878,
											"end": 906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 878,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 878,
											"end": 906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 878,
											"end": 906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 878,
											"end": 906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 869,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 869,
											"end": 907,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 869,
											"end": 907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 869,
											"end": 907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1139,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1129,
											"end": 1134,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1126,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1125,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1124,
											"end": 1139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1103,
											"end": 1139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1139,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1197,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1179,
											"end": 1197,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1171,
											"end": 1176,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1171,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1244,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1227,
											"end": 1244,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1227,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1224,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1207,
											"end": 1265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1265,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1321,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1331,
											"end": 1341,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1321,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1321,
											"end": 1376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1321,
											"end": 1376,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1321,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1396,
											"end": 1406,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1386,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1427,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1386,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1447,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1461,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1465,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1437,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1509,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1498,
											"end": 1509,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 374,
											"end": 406,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5998,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6003,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 6151,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6097,
											"end": 6214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6480,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6400,
											"end": 6401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6500,
											"end": 6504,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6490,
											"end": 6505,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6529,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6616,
											"end": 6620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6612,
											"end": 6624,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6663,
											"end": 6667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6659,
											"end": 6671,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6746,
											"end": 6750,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6738,
											"end": 6744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6734,
											"end": 6751,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6797,
											"end": 6811,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6812,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6827,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6867,
											"end": 7046,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6867,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "PUSH",
											"source": 8,
											"value": "4D696E74696E6720616C6C6F776564206F6E6C7920746F206F776E6572000000"
										},
										{
											"begin": 7003,
											"end": 7004,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 7001,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6991,
											"end": 7005,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 7039,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6867,
											"end": 7046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6867,
											"end": 7046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7052,
											"end": 7418,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 7052,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 7279,
											"end": 7281,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 7274,
											"end": 7277,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7215,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 7215,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7215,
											"end": 7282,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 7215,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7282,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7291,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 7380,
											"end": 7383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7291,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7291,
											"end": 7384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7291,
											"end": 7384,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 7291,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 7411,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7404,
											"end": 7407,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7400,
											"end": 7412,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7393,
											"end": 7412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7393,
											"end": 7412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7052,
											"end": 7418,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7052,
											"end": 7418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7052,
											"end": 7418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7052,
											"end": 7418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7424,
											"end": 7843,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7424,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7590,
											"end": 7594,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7630,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7617,
											"end": 7626,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7605,
											"end": 7631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7605,
											"end": 7631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7677,
											"end": 7686,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7667,
											"end": 7687,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7663,
											"end": 7664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7648,
											"end": 7665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7705,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 7831,
											"end": 7835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7705,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 7705,
											"end": 7836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7705,
											"end": 7836,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 7705,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7697,
											"end": 7836,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7697,
											"end": 7836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7424,
											"end": 7843,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7424,
											"end": 7843,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7424,
											"end": 7843,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7424,
											"end": 7843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7849,
											"end": 8029,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 7849,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7897,
											"end": 7974,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7894,
											"end": 7895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7887,
											"end": 7975,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 7998,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7991,
											"end": 7992,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7984,
											"end": 7999,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8018,
											"end": 8022,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8015,
											"end": 8016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8023,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8137,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 8035,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8077,
											"end": 8085,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8121,
											"end": 8122,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8117,
											"end": 8130,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8137,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8035,
											"end": 8137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8991,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 8143,
											"end": 8991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8204,
											"end": 8209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8211,
											"end": 8215,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8235,
											"end": 8241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8226,
											"end": 8241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8226,
											"end": 8241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8259,
											"end": 8264,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8273,
											"end": 8985,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 8273,
											"end": 8985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8284,
											"end": 8292,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8296,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8273,
											"end": 8985,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8273,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 8273,
											"end": 8985,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8389,
											"end": 8393,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8384,
											"end": 8387,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8394,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8374,
											"end": 8378,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8395,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8368,
											"end": 8418,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8368,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 8368,
											"end": 8418,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 8398,
											"end": 8416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8368,
											"end": 8418,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 8368,
											"end": 8418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8449,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8438,
											"end": 8446,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8434,
											"end": 8450,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8882,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 8431,
											"end": 8882,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8863,
											"end": 8867,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8856,
											"end": 8861,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8868,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8843,
											"end": 8868,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8843,
											"end": 8868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8431,
											"end": 8882,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 8431,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8913,
											"end": 8917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8907,
											"end": 8911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8903,
											"end": 8918,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 8966,
											"end": 8974,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 8943,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8931,
											"end": 8975,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8931,
											"end": 8975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8273,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 8273,
											"end": 8985,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8273,
											"end": 8985,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 8273,
											"end": 8985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8991,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8991,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8991,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 10070,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 8997,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9051,
											"end": 9056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9242,
											"end": 9250,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9232,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 9232,
											"end": 9272,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9263,
											"end": 9264,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9254,
											"end": 9264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9254,
											"end": 9264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9265,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 9265,
											"end": 9270,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9232,
											"end": 9272,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 9232,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9291,
											"end": 9295,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9281,
											"end": 9317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 9281,
											"end": 9317,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 9309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9299,
											"end": 9309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9299,
											"end": 9309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 9310,
											"end": 9315,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9281,
											"end": 9317,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 9281,
											"end": 9317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9377,
											"end": 9381,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9425,
											"end": 9426,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9420,
											"end": 9447,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9447,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 9420,
											"end": 9447,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9461,
											"end": 9462,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9456,
											"end": 9647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9456,
											"end": 9647,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9456,
											"end": 9647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 9456,
											"end": 9647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9370,
											"end": 9647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 9370,
											"end": 9647,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9447,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 9420,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9438,
											"end": 9439,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9429,
											"end": 9439,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9429,
											"end": 9439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9440,
											"end": 9445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9440,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 9440,
											"end": 9445,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9456,
											"end": 9647,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 9456,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9501,
											"end": 9504,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 9491,
											"end": 9499,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9488,
											"end": 9505,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9485,
											"end": 9528,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9485,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 9485,
											"end": 9528,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 9508,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 9508,
											"end": 9526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9526,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 9508,
											"end": 9526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9485,
											"end": 9528,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 9485,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9557,
											"end": 9565,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9554,
											"end": 9555,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9550,
											"end": 9566,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9541,
											"end": 9566,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9541,
											"end": 9566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9592,
											"end": 9595,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9585,
											"end": 9590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9582,
											"end": 9596,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9579,
											"end": 9619,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9579,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 9579,
											"end": 9619,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 9599,
											"end": 9617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9579,
											"end": 9619,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 9579,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9632,
											"end": 9637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9632,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 9632,
											"end": 9637,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9370,
											"end": 9647,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 9370,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9370,
											"end": 9647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9756,
											"end": 9758,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9754,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9743,
											"end": 9759,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9737,
											"end": 9740,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 9731,
											"end": 9735,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9728,
											"end": 9741,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9724,
											"end": 9760,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9706,
											"end": 9708,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 9696,
											"end": 9704,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9709,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9688,
											"end": 9690,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 9682,
											"end": 9686,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9679,
											"end": 9691,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9675,
											"end": 9710,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9659,
											"end": 9770,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9656,
											"end": 9902,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9656,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 9656,
											"end": 9902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9812,
											"end": 9820,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9806,
											"end": 9810,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9802,
											"end": 9821,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9793,
											"end": 9821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9793,
											"end": 9821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9847,
											"end": 9850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9845,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9837,
											"end": 9851,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9834,
											"end": 9874,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9834,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9834,
											"end": 9874,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 9854,
											"end": 9872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9834,
											"end": 9874,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9834,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9887,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 9887,
											"end": 9892,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9656,
											"end": 9902,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 9656,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9927,
											"end": 9969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9965,
											"end": 9968,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 9963,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9949,
											"end": 9953,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9946,
											"end": 9947,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9927,
											"end": 9969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 9927,
											"end": 9969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9927,
											"end": 9969,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9927,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9912,
											"end": 9969,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9912,
											"end": 9969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9912,
											"end": 9969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9912,
											"end": 9969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10001,
											"end": 10005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9996,
											"end": 9999,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9992,
											"end": 10006,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 9990,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9982,
											"end": 10007,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9979,
											"end": 10030,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9979,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 9979,
											"end": 10030,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 10010,
											"end": 10028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9979,
											"end": 10030,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 9979,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10057,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10048,
											"end": 10064,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10039,
											"end": 10064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10039,
											"end": 10064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 10070,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 8997,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 10070,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 10070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 10070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 10070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 10070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 10070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10076,
											"end": 10357,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 10076,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10134,
											"end": 10139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10158,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 10176,
											"end": 10180,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 10158,
											"end": 10181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10181,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 10158,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10150,
											"end": 10181,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10150,
											"end": 10181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10202,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10202,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 10202,
											"end": 10227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10202,
											"end": 10227,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 10202,
											"end": 10227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10190,
											"end": 10227,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10190,
											"end": 10227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10246,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 10283,
											"end": 10349,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10273,
											"end": 10281,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10267,
											"end": 10271,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10246,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 10246,
											"end": 10350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10246,
											"end": 10350,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 10246,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10237,
											"end": 10350,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10237,
											"end": 10350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10076,
											"end": 10357,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10076,
											"end": 10357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10076,
											"end": 10357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10076,
											"end": 10357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10076,
											"end": 10357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10773,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 10363,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10403,
											"end": 10410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10426,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 10444,
											"end": 10445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10426,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 10426,
											"end": 10446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10426,
											"end": 10446,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 10426,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10421,
											"end": 10446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10460,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 10478,
											"end": 10479,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10460,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 10460,
											"end": 10480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10460,
											"end": 10480,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 10460,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10455,
											"end": 10480,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10455,
											"end": 10480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10515,
											"end": 10516,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10512,
											"end": 10513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10508,
											"end": 10517,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10537,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 10555,
											"end": 10566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10537,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 10537,
											"end": 10567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10537,
											"end": 10567,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 10537,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10526,
											"end": 10567,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10526,
											"end": 10567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10716,
											"end": 10717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10707,
											"end": 10714,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 10718,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10700,
											"end": 10701,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10697,
											"end": 10719,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10677,
											"end": 10678,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10670,
											"end": 10679,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10650,
											"end": 10733,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 10627,
											"end": 10766,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 10746,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 10746,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10746,
											"end": 10764,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 10746,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10766,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 10627,
											"end": 10766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10411,
											"end": 10773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10773,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10773,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10779,
											"end": 10959,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 10779,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10827,
											"end": 10904,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10824,
											"end": 10825,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10817,
											"end": 10905,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 10928,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10914,
											"end": 10929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10948,
											"end": 10952,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10945,
											"end": 10946,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10953,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11150,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 10965,
											"end": 11150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11005,
											"end": 11006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11022,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 11040,
											"end": 11041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11022,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 11022,
											"end": 11042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11022,
											"end": 11042,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 11022,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11017,
											"end": 11042,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11017,
											"end": 11042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11056,
											"end": 11076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 11074,
											"end": 11075,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11056,
											"end": 11076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 11056,
											"end": 11076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11056,
											"end": 11076,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 11056,
											"end": 11076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11051,
											"end": 11076,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11051,
											"end": 11076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11095,
											"end": 11096,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11085,
											"end": 11120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 11085,
											"end": 11120,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 11100,
											"end": 11118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 11100,
											"end": 11118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11085,
											"end": 11120,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 11085,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11142,
											"end": 11143,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11135,
											"end": 11144,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11130,
											"end": 11144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11130,
											"end": 11144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11150,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11150,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11350,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 11156,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11196,
											"end": 11200,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11216,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 11234,
											"end": 11235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11216,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 11216,
											"end": 11236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11216,
											"end": 11236,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 11216,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11211,
											"end": 11236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11211,
											"end": 11236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11250,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 11268,
											"end": 11269,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11250,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 11250,
											"end": 11270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11250,
											"end": 11270,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 11250,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11245,
											"end": 11270,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11245,
											"end": 11270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11294,
											"end": 11295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11291,
											"end": 11292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11287,
											"end": 11296,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11279,
											"end": 11296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11279,
											"end": 11296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11318,
											"end": 11319,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11312,
											"end": 11316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11309,
											"end": 11320,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11343,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 11306,
											"end": 11343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 11323,
											"end": 11341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11323,
											"end": 11341,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11343,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 11306,
											"end": 11343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11350,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11350,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11547,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 11356,
											"end": 11547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11396,
											"end": 11399,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11415,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 11433,
											"end": 11434,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11415,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 11415,
											"end": 11435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11415,
											"end": 11435,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 11415,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11410,
											"end": 11435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11410,
											"end": 11435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 11467,
											"end": 11468,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 11449,
											"end": 11469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11444,
											"end": 11469,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11444,
											"end": 11469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11492,
											"end": 11493,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11485,
											"end": 11494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11478,
											"end": 11494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11478,
											"end": 11494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11513,
											"end": 11516,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11510,
											"end": 11511,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11507,
											"end": 11517,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11504,
											"end": 11540,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11504,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 11504,
											"end": 11540,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 11520,
											"end": 11538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11504,
											"end": 11540,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 11504,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11547,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11547,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11356,
											"end": 11547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11553,
											"end": 11995,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 11553,
											"end": 11995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11702,
											"end": 11706,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11740,
											"end": 11742,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11729,
											"end": 11738,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11725,
											"end": 11743,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11717,
											"end": 11743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 11821,
											"end": 11822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11810,
											"end": 11819,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11806,
											"end": 11823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11797,
											"end": 11803,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 11753,
											"end": 11824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 11824,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 11753,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11834,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 11902,
											"end": 11904,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11891,
											"end": 11900,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11887,
											"end": 11905,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11878,
											"end": 11884,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11834,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 11834,
											"end": 11906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11834,
											"end": 11906,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 11834,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11916,
											"end": 11988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 11984,
											"end": 11986,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11973,
											"end": 11982,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11960,
											"end": 11966,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11916,
											"end": 11988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 11916,
											"end": 11988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11916,
											"end": 11988,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 11916,
											"end": 11988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11553,
											"end": 11995,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 11553,
											"end": 11995,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11553,
											"end": 11995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11553,
											"end": 11995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11553,
											"end": 11995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11553,
											"end": 11995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11553,
											"end": 11995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Erc20MNTK.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_taxRecord(address,address)": "ac3c93cf",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"currentTaxDeducted()": "2d44ff23",
							"decimals()": "313ce567",
							"grossTaxCollected()": "ee33bc45",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"taxCollector()": "bea1dcf8",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_taxCollector\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_taxRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTaxDeducted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grossTaxCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Erc20MNTK.sol\":\"MyNewToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Erc20MNTK.sol\":{\"keccak256\":\"0x5758d856f5f8afc935f5a41f3ab994e453ead9e8179263c196b7f460967e640f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63108a4736a6c14645718e892c036a5a21fad17c4168c1c784157b4ee3750792\",\"dweb:/ipfs/QmWRqy3A2SZ9C3zFtfio1WLSaDxcxWQe81ywUfJJ6M3sdR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 992,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "taxCollector",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 994,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "currentTaxDeducted",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 996,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "grossTaxCollected",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1002,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_taxRecord",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 949,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 949,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 949,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/Erc20MNTK.sol": {
				"ast": {
					"absolutePath": "contracts/Erc20MNTK.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"MyNewToken": [
							1135
						],
						"Ownable": [
							147
						]
					},
					"id": 1136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 800,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 924,
							"src": "114:74:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 148,
							"src": "189:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 985,
										"name": "ERC20",
										"nameLocations": [
											"266:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "266:5:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "266:5:7"
								},
								{
									"baseName": {
										"id": 987,
										"name": "ERC20Burnable",
										"nameLocations": [
											"273:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "273:13:7"
									},
									"id": 988,
									"nodeType": "InheritanceSpecifier",
									"src": "273:13:7"
								},
								{
									"baseName": {
										"id": 989,
										"name": "Ownable",
										"nameLocations": [
											"288:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "288:7:7"
									},
									"id": 990,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:7"
								}
							],
							"canonicalName": "MyNewToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1135,
							"linearizedBaseContracts": [
								1135,
								147,
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "MyNewToken",
							"nameLocation": "252:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "bea1dcf8",
									"id": 992,
									"mutability": "mutable",
									"name": "taxCollector",
									"nameLocation": "317:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "302:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 991,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "302:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d44ff23",
									"id": 994,
									"mutability": "mutable",
									"name": "currentTaxDeducted",
									"nameLocation": "350:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "335:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 993,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "335:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee33bc45",
									"id": 996,
									"mutability": "mutable",
									"name": "grossTaxCollected",
									"nameLocation": "389:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "374:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "374:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ac3c93cf",
									"id": 1002,
									"mutability": "mutable",
									"name": "_taxRecord",
									"nameLocation": "467:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "413:64:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1001,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 997,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "421:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "413:47:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1000,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 998,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "440:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "432:27:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 999,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "451:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "623:103:7",
										"statements": [
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1018,
														"name": "taxCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "633:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1019,
														"name": "_taxCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "648:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "633:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "633:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1023,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "677:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1024,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "690:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "700:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"components": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1026,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							1074
																						],
																						"referencedDeclaration": 1074,
																						"src": "706:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 1027,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "706:10:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"id": 1028,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "705:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "700:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1030,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "699:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "690:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1022,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "671:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "671:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "671:48:7"
											}
										]
									},
									"id": 1035,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d794e6577546f6b656e",
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "567:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_579ceea9ef08c69b137b9abaa64b4ca16bf007efb2753364acf6ef1302d67f78",
														"typeString": "literal_string \"MyNewToken\""
													},
													"value": "MyNewToken"
												},
												{
													"hexValue": "4d4e544b",
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "581:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_dc622026cfca4f1677879b14c8a0558fedc623418429926a6e797e3d184732fa",
														"typeString": "literal_string \"MNTK\""
													},
													"value": "MNTK"
												}
											],
											"id": 1013,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1010,
												"name": "ERC20",
												"nameLocations": [
													"561:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "561:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "561:27:7"
										},
										{
											"arguments": [
												{
													"id": 1015,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1004,
													"src": "605:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1016,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1014,
												"name": "Ownable",
												"nameLocations": [
													"597:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "597:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "597:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "503:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "495:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "522:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "517:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "517:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "_taxCollector",
												"nameLocation": "538:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "530:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:58:7"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:7"
									},
									"scope": 1135,
									"src": "483:243:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "791:123:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "809:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1046,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "815:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "819:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "815:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "809:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74696e6720616c6c6f776564206f6e6c7920746f206f776e6572",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae",
																"typeString": "literal_string \"Minting allowed only to owner\""
															},
															"value": "Minting allowed only to owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae",
																"typeString": "literal_string \"Minting allowed only to owner\""
															}
														],
														"id": 1044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "801:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "801:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "801:58:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1053,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "875:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1054,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "878:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "888:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"components": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1056,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							1074
																						],
																						"referencedDeclaration": 1074,
																						"src": "894:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 1057,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "894:10:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"id": 1058,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "893:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "888:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1060,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "887:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "878:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1052,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "869:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "869:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "869:38:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1042,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1041,
												"name": "onlyOwner",
												"nameLocations": [
													"781:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "781:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "781:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "741:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "754:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "746:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "766:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "758:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:28:7"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:7"
									},
									"scope": 1135,
									"src": "732:182:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "982:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "39",
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "999:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												},
												"functionReturnParameters": 1070,
												"id": 1072,
												"nodeType": "Return",
												"src": "992:8:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "929:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1067,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "959:8:7"
									},
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:2:7"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "976:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1068,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "976:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:7:7"
									},
									"scope": 1135,
									"src": "920:87:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "1093:424:7",
										"statements": [
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1084,
														"name": "currentTaxDeducted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1103:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "35",
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1125:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1086,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "1129:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1125:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1088,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1124:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1136:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "1124:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1103:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "1103:36:7"
											},
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "1154:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1133,
														"src": "1149:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1093,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1149:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1095,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "1171:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1096,
														"name": "currentTaxDeducted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1179:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1171:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1149:48:7"
											},
											{
												"expression": {
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1099,
														"name": "grossTaxCollected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "1207:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1100,
															"name": "grossTaxCollected",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "1227:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1101,
															"name": "currentTaxDeducted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "1247:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1227:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1207:58:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "1207:58:7"
											},
											{
												"assignments": [
													1106
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "_taxCollector",
														"nameLocation": "1283:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1133,
														"src": "1275:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1105,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1275:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"id": 1107,
													"name": "taxCollector",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 992,
													"src": "1299:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1275:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1110,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1331:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1335:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1331:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "taxCollector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "1343:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "currentTaxDeducted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "1357:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1109,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1321:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1321:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "1321:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1396:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1400:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1396:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "1408:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "transferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "1412:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1386:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1386:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "1386:41:7"
											},
											{
												"expression": {
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1123,
																"name": "_taxRecord",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "1437:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1126,
															"indexExpression": {
																"id": 1124,
																"name": "_taxCollector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "1448:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1437:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1127,
														"indexExpression": {
															"id": 1125,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "1463:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1437:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1128,
														"name": "currentTaxDeducted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1470:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1437:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "1437:51:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1505:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1083,
												"id": 1132,
												"nodeType": "Return",
												"src": "1498:11:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1022:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1080,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1070:8:7"
									},
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1039:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1031:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1048:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1043:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1043:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:24:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1087:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1081,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1087:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:6:7"
									},
									"scope": 1135,
									"src": "1013:504:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1136,
							"src": "243:1276:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:1487:7"
				},
				"id": 7
			}
		}
	}
}